diff --git a/.gitignore b/.gitignore
index ef5f86ff..d802dd90 100644
--- a/.gitignore
+++ b/.gitignore
@@ -25,6 +25,7 @@ ios/.xcode.env.local
 .cxx/
 *.keystore
 !debug.keystore
+
 # Android/IntelliJ
 #
 build/
diff --git a/App.js b/App.js
index c36a26a7..84122d4c 100644
--- a/App.js
+++ b/App.js
@@ -2,6 +2,7 @@ import 'react-native-gesture-handler'; // should be on top
 import React, { useContext, useEffect, useRef } from 'react';
 import {
   AppState,
+  DeviceEventEmitter,
   NativeModules,
   NativeEventEmitter,
   Linking,
@@ -15,9 +16,11 @@ import {
 import { NavigationContainer, CommonActions } from '@react-navigation/native';
 import { SafeAreaProvider } from 'react-native-safe-area-context';
 import ReactNativeHapticFeedback from 'react-native-haptic-feedback';
+
 import { navigationRef } from './NavigationService';
 import * as NavigationService from './NavigationService';
 import { Chain } from './models/bitcoinUnits';
+import OnAppLaunch from './class/on-app-launch';
 import DeeplinkSchemaMatch from './class/deeplink-schema-match';
 import loc from './loc';
 import { BlueDefaultTheme, BlueDarkTheme } from './components/themes';
@@ -29,6 +32,7 @@ import DeviceQuickActions from './class/quick-actions';
 import Notifications from './blue_modules/notifications';
 import Biometric from './class/biometrics';
 import WidgetCommunication from './blue_modules/WidgetCommunication';
+import changeNavigationBarColor from 'react-native-navigation-bar-color';
 import ActionSheet from './screen/ActionSheet';
 import HandoffComponent from './components/handoff';
 import Privacy from './blue_modules/Privacy';
@@ -114,9 +118,32 @@ const App = () => {
     // eslint-disable-next-line react-hooks/exhaustive-deps
   }, [walletsInitialized]);
 
+  useEffect(() => {
+    return () => {
+      Linking.removeEventListener('url', handleOpenURL);
+      AppState.removeEventListener('change', handleAppStateChange);
+      eventEmitter?.removeAllListeners('onNotificationReceived');
+      eventEmitter?.removeAllListeners('openSettings');
+      eventEmitter?.removeAllListeners('onUserActivityOpen');
+    };
+    // eslint-disable-next-line react-hooks/exhaustive-deps
+  }, []);
+
+  useEffect(() => {
+    if (colorScheme) {
+      if (colorScheme === 'light') {
+        changeNavigationBarColor(BlueDefaultTheme.colors.background, true, true);
+      } else {
+        changeNavigationBarColor(BlueDarkTheme.colors.buttonBackgroundColor, false, true);
+      }
+    }
+  }, [colorScheme]);
+
   const addListeners = () => {
     Linking.addEventListener('url', handleOpenURL);
     AppState.addEventListener('change', handleAppStateChange);
+    DeviceEventEmitter.addListener('quickActionShortcut', walletQuickActions);
+    DeviceQuickActions.popInitialAction().then(popInitialAction);
     EventEmitter?.getMostRecentUserActivity()
       .then(onUserActivityOpen)
       .catch(() => console.log('No userActivity object sent'));
@@ -130,6 +157,61 @@ const App = () => {
     eventEmitter?.addListener('onUserActivityOpen', onUserActivityOpen);
   };
 
+  const popInitialAction = async data => {
+    if (data) {
+      const wallet = wallets.find(w => w.getID() === data.userInfo.url.split('wallet/')[1]);
+      NavigationService.dispatch(
+        CommonActions.navigate({
+          name: 'WalletTransactions',
+          key: `WalletTransactions-${wallet.getID()}`,
+          params: {
+            walletID: wallet.getID(),
+            walletType: wallet.type,
+          },
+        }),
+      );
+    } else {
+      const url = await Linking.getInitialURL();
+      if (url) {
+        if (DeeplinkSchemaMatch.hasSchema(url)) {
+          handleOpenURL({ url });
+        }
+      } else {
+        const isViewAllWalletsEnabled = await OnAppLaunch.isViewAllWalletsEnabled();
+        if (!isViewAllWalletsEnabled) {
+          const selectedDefaultWallet = await OnAppLaunch.getSelectedDefaultWallet();
+          const wallet = wallets.find(w => w.getID() === selectedDefaultWallet.getID());
+          if (wallet) {
+            NavigationService.dispatch(
+              CommonActions.navigate({
+                name: 'WalletTransactions',
+                key: `WalletTransactions-${wallet.getID()}`,
+                params: {
+                  walletID: wallet.getID(),
+                  walletType: wallet.type,
+                },
+              }),
+            );
+          }
+        }
+      }
+    }
+  };
+
+  const walletQuickActions = data => {
+    const wallet = wallets.find(w => w.getID() === data.userInfo.url.split('wallet/')[1]);
+    NavigationService.dispatch(
+      CommonActions.navigate({
+        name: 'WalletTransactions',
+        key: `WalletTransactions-${wallet.getID()}`,
+        params: {
+          walletID: wallet.getID(),
+          walletType: wallet.type,
+        },
+      }),
+    );
+  };
+
   /**
    * Processes push notifications stored in AsyncStorage. Might navigate to some screen.
    *
diff --git a/BlueComponents.js b/BlueComponents.js
index 8f616ef2..733c16fc 100644
--- a/BlueComponents.js
+++ b/BlueComponents.js
@@ -37,6 +37,42 @@ if (aspectRatio > 1.6) {
   isIpad = true;
 }
 
+export const BlueButton = props => {
+  const { colors } = useTheme();
+
+  let backgroundColor = props.backgroundColor ? props.backgroundColor : colors.mainColor || BlueCurrentTheme.colors.mainColor;
+  let fontColor = props.buttonTextColor || colors.buttonTextColor;
+  if (props.disabled === true) {
+    backgroundColor = colors.buttonDisabledBackgroundColor;
+    fontColor = colors.buttonDisabledTextColor;
+  }
+
+  return (
+    <TouchableOpacity
+      style={{
+        borderWidth: 0.7,
+        borderColor: 'transparent',
+        backgroundColor,
+        minHeight: 45,
+        height: 45,
+        maxHeight: 45,
+        borderRadius: 25,
+        justifyContent: 'center',
+        alignItems: 'center',
+        paddingHorizontal: 16,
+        flexGrow: 1,
+      }}
+      accessibilityRole="button"
+      {...props}
+    >
+      <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>
+        {props.icon && <Icon name={props.icon.name} type={props.icon.type} color={props.icon.color} />}
+        {props.title && <Text style={{ marginHorizontal: 8, fontSize: 16, color: fontColor, fontWeight: '500' }}>{props.title}</Text>}
+      </View>
+    </TouchableOpacity>
+  );
+};
+
 export const SecondButton = forwardRef((props, ref) => {
   const { colors } = useTheme();
   let backgroundColor = props.backgroundColor ? props.backgroundColor : colors.buttonBlueBackgroundColor;
@@ -522,7 +558,12 @@ export const BlueHeaderDefaultMain = props => {
       >
         {props.leftText}
       </Text>
-      <PlusIcon accessibilityRole="button" accessibilityLabel={loc.wallets.add_title} onPress={props.onNewWalletPress} />
+      <PlusIcon
+        accessibilityRole="button"
+        accessibilityLabel={loc.wallets.add_title}
+        onPress={props.onNewWalletPress}
+        Component={TouchableOpacity}
+      />
     </View>
   );
 };
diff --git a/Navigation.js b/Navigation.js
index 0ae9d88c..f55c7863 100644
--- a/Navigation.js
+++ b/Navigation.js
@@ -1,5 +1,5 @@
 import React, { useCallback, useMemo } from 'react';
-import { createNativeStackNavigator } from '@react-navigation/native-stack';
+import { createNativeStackNavigator } from 'react-native-screens/native-stack';
 import { createDrawerNavigator } from '@react-navigation/drawer';
 import { Platform, useWindowDimensions, Dimensions, I18nManager } from 'react-native';
 
@@ -44,7 +44,6 @@ import WalletAddresses from './screen/wallets/addresses';
 import ReorderWallets from './screen/wallets/reorderWallets';
 import SelectWallet from './screen/wallets/selectWallet';
 import ProvideEntropy from './screen/wallets/provideEntropy';
-import GenerateWord from './screen/wallets/generateWord';
 
 import TransactionDetails from './screen/transactions/details';
 import TransactionStatus from './screen/transactions/transactionStatus';
@@ -94,7 +93,7 @@ const WalletsRoot = () => {
   const theme = useTheme();
 
   return (
-    <WalletsStack.Navigator screenOptions={{ headerShadowVisible: false }}>
+    <WalletsStack.Navigator screenOptions={{ headerHideShadow: true }}>
       <WalletsStack.Screen name="WalletsList" component={WalletsList} options={WalletsList.navigationOptions(theme)} />
       <WalletsStack.Screen name="WalletTransactions" component={WalletTransactions} options={WalletTransactions.navigationOptions(theme)} />
       <WalletsStack.Screen name="LdkOpenChannel" component={LdkOpenChannel} options={LdkOpenChannel.navigationOptions(theme)} />
@@ -146,7 +145,6 @@ const WalletsRoot = () => {
       />
       <WalletsStack.Screen name="Broadcast" component={Broadcast} options={Broadcast.navigationOptions(theme)} />
       <WalletsStack.Screen name="IsItMyAddress" component={IsItMyAddress} options={IsItMyAddress.navigationOptions(theme)} />
-      <WalletsStack.Screen name="GenerateWord" component={GenerateWord} options={GenerateWord.navigationOptions(theme)} />
       <WalletsStack.Screen name="LnurlPay" component={LnurlPay} options={LnurlPay.navigationOptions(theme)} />
       <WalletsStack.Screen name="LnurlPaySuccess" component={LnurlPaySuccess} options={LnurlPaySuccess.navigationOptions(theme)} />
       <WalletsStack.Screen name="LnurlAuth" component={LnurlAuth} options={LnurlAuth.navigationOptions(theme)} />
@@ -168,7 +166,7 @@ const AddWalletRoot = () => {
   const theme = useTheme();
 
   return (
-    <AddWalletStack.Navigator screenOptions={{ headerShadowVisible: false }}>
+    <AddWalletStack.Navigator screenOptions={{ headerHideShadow: true }}>
       <AddWalletStack.Screen name="AddWallet" component={AddWallet} options={AddWallet.navigationOptions(theme)} />
       <AddWalletStack.Screen name="ImportWallet" component={ImportWallet} options={ImportWallet.navigationOptions(theme)} />
       <AddWalletStack.Screen
@@ -215,13 +213,8 @@ const SendDetailsRoot = () => {
   const theme = useTheme();
 
   return (
-    <SendDetailsStack.Navigator screenOptions={{ headerShadowVisible: false }}>
-      <SendDetailsStack.Screen
-        name="SendDetails"
-        component={SendDetails}
-        options={SendDetails.navigationOptions(theme)}
-        initialParams={SendDetails.initialParams}
-      />
+    <SendDetailsStack.Navigator screenOptions={{ headerHideShadow: true }}>
+      <SendDetailsStack.Screen name="SendDetails" component={SendDetails} options={SendDetails.navigationOptions(theme)} />
       <SendDetailsStack.Screen name="Confirm" component={Confirm} options={Confirm.navigationOptions(theme)} />
       <SendDetailsStack.Screen
         name="PsbtWithHardwareWallet"
@@ -254,7 +247,7 @@ const LNDCreateInvoiceRoot = () => {
   const theme = useTheme();
 
   return (
-    <LNDCreateInvoiceStack.Navigator screenOptions={{ headerShadowVisible: false }}>
+    <LNDCreateInvoiceStack.Navigator screenOptions={{ headerHideShadow: true }}>
       <LNDCreateInvoiceStack.Screen
         name="LNDCreateInvoice"
         component={LNDCreateInvoice}
@@ -282,7 +275,7 @@ const ScanLndInvoiceRoot = () => {
   const theme = useTheme();
 
   return (
-    <ScanLndInvoiceStack.Navigator screenOptions={{ headerShadowVisible: false }}>
+    <ScanLndInvoiceStack.Navigator screenOptions={{ headerHideShadow: true }}>
       <ScanLndInvoiceStack.Screen name="ScanLndInvoice" component={ScanLndInvoice} options={ScanLndInvoice.navigationOptions(theme)} />
       <ScanLndInvoiceStack.Screen name="SelectWallet" component={SelectWallet} options={SelectWallet.navigationOptions(theme)} />
       <ScanLndInvoiceStack.Screen name="Success" component={Success} options={{ headerShown: false, gestureEnabled: false }} />
@@ -297,7 +290,7 @@ const LDKOpenChannelRoot = () => {
   const theme = useTheme();
 
   return (
-    <LDKOpenChannelStack.Navigator name="LDKOpenChannelRoot" screenOptions={{ headerShadowVisible: false }} initialRouteName="SelectWallet">
+    <LDKOpenChannelStack.Navigator name="LDKOpenChannelRoot" screenOptions={{ headerHideShadow: true }} initialRouteName="SelectWallet">
       <LDKOpenChannelStack.Screen name="SelectWallet" component={SelectWallet} options={SelectWallet.navigationOptions(theme)} />
       <LDKOpenChannelStack.Screen
         name="LDKOpenChannelSetAmount"
@@ -314,7 +307,7 @@ const AztecoRedeemRoot = () => {
   const theme = useTheme();
 
   return (
-    <AztecoRedeemStack.Navigator screenOptions={{ headerShadowVisible: false }}>
+    <AztecoRedeemStack.Navigator screenOptions={{ headerHideShadow: true }}>
       <AztecoRedeemStack.Screen name="AztecoRedeem" component={AztecoRedeem} options={AztecoRedeem.navigationOptions(theme)} />
       <AztecoRedeemStack.Screen name="SelectWallet" component={SelectWallet} />
     </AztecoRedeemStack.Navigator>
@@ -323,7 +316,9 @@ const AztecoRedeemRoot = () => {
 
 const ScanQRCodeStack = createNativeStackNavigator();
 const ScanQRCodeRoot = () => (
-  <ScanQRCodeStack.Navigator screenOptions={{ headerShown: false, presentation: isDesktop ? 'containedModal' : 'fullScreenModal' }}>
+  <ScanQRCodeStack.Navigator
+    screenOptions={{ statusBarHidden: true, headerShown: false, stackPresentation: isDesktop ? 'containedModal' : 'fullScreenModal' }}
+  >
     <ScanQRCodeStack.Screen name="ScanQRCode" component={ScanQRCode} />
   </ScanQRCodeStack.Navigator>
 );
@@ -340,7 +335,7 @@ const ReorderWalletsStackRoot = () => {
   const theme = useTheme();
 
   return (
-    <ReorderWalletsStack.Navigator name="ReorderWalletsRoot" screenOptions={{ headerShadowVisible: false }}>
+    <ReorderWalletsStack.Navigator name="ReorderWalletsRoot" screenOptions={{ headerHideShadow: true }}>
       <ReorderWalletsStack.Screen name="ReorderWallets" component={ReorderWallets} options={ReorderWallets.navigationOptions(theme)} />
     </ReorderWalletsStack.Navigator>
   );
@@ -357,7 +352,7 @@ const DrawerRoot = () => {
 
   return (
     <Drawer.Navigator
-      screenOptions={drawerStyle}
+      drawerStyle={drawerStyle}
       drawerType={isLargeScreen ? 'permanent' : null}
       drawerContent={drawerContent}
       drawerPosition={I18nManager.isRTL ? 'right' : 'left'}
@@ -372,11 +367,7 @@ const ReceiveDetailsStackRoot = () => {
   const theme = useTheme();
 
   return (
-    <ReceiveDetailsStack.Navigator
-      name="ReceiveDetailsRoot"
-      screenOptions={{ headerShadowVisible: false }}
-      initialRouteName="ReceiveDetails"
-    >
+    <ReceiveDetailsStack.Navigator name="ReceiveDetailsRoot" screenOptions={{ headerHideShadow: true }} initialRouteName="ReceiveDetails">
       <ReceiveDetailsStack.Screen name="ReceiveDetails" component={ReceiveDetails} options={ReceiveDetails.navigationOptions(theme)} />
     </ReceiveDetailsStack.Navigator>
   );
@@ -389,7 +380,7 @@ const WalletXpubStackRoot = () => {
   return (
     <WalletXpubStack.Navigator
       name="WalletXpubRoot"
-      screenOptions={{ headerShadowVisible: false, statusBarStyle: 'light' }}
+      screenOptions={{ headerHideShadow: true, statusBarStyle: 'light' }}
       initialRouteName="WalletXpub"
     >
       <WalletXpubStack.Screen name="WalletXpub" component={WalletXpub} options={WalletXpub.navigationOptions(theme)} />
@@ -404,7 +395,7 @@ const SignVerifyStackRoot = () => {
   return (
     <SignVerifyStack.Navigator
       name="SignVerifyRoot"
-      screenOptions={{ headerShadowVisible: false, statusBarStyle: 'light' }}
+      screenOptions={{ headerHideShadow: true, statusBarStyle: 'light' }}
       initialRouteName="SignVerify"
     >
       <SignVerifyStack.Screen name="SignVerify" component={SignVerify} options={SignVerify.navigationOptions(theme)} />
@@ -419,7 +410,7 @@ const WalletExportStackRoot = () => {
   return (
     <WalletExportStack.Navigator
       name="WalletExportRoot"
-      screenOptions={{ headerShadowVisible: false, statusBarStyle: 'light' }}
+      screenOptions={{ headerHideShadow: true, statusBarStyle: 'light' }}
       initialRouteName="WalletExport"
     >
       <WalletExportStack.Screen name="WalletExport" component={WalletExport} options={WalletExport.navigationOptions(theme)} />
@@ -432,7 +423,7 @@ const LappBrowserStackRoot = () => {
   const theme = useTheme();
 
   return (
-    <LappBrowserStack.Navigator name="LappBrowserRoot" screenOptions={{ headerShadowVisible: false }} initialRouteName="LappBrowser">
+    <LappBrowserStack.Navigator name="LappBrowserRoot" screenOptions={{ headerHideShadow: true }} initialRouteName="LappBrowser">
       <LappBrowserStack.Screen name="LappBrowser" component={LappBrowser} options={LappBrowser.navigationOptions(theme)} />
     </LappBrowserStack.Navigator>
   );
@@ -445,7 +436,7 @@ const InitRoot = () => (
     <InitStack.Screen
       name="ReorderWallets"
       component={ReorderWalletsStackRoot}
-      options={{ headerShown: false, gestureEnabled: false, presentation: isDesktop ? 'containedModal' : 'modal' }}
+      options={{ headerShown: false, gestureEnabled: false, stackPresentation: isDesktop ? 'containedModal' : 'modal' }}
     />
     <InitStack.Screen
       name={isHandset ? 'Navigation' : 'DrawerRoot'}
@@ -463,7 +454,7 @@ const ViewEditMultisigCosignersRoot = () => {
     <ViewEditMultisigCosignersStack.Navigator
       name="ViewEditMultisigCosignersRoot"
       initialRouteName="ViewEditMultisigCosigners"
-      screenOptions={{ headerShadowVisible: false, statusBarStyle: 'light' }}
+      screenOptions={{ headerHideShadow: true, statusBarStyle: 'light' }}
     >
       <ViewEditMultisigCosignersStack.Screen
         name="ViewEditMultisigCosigners"
@@ -482,7 +473,7 @@ const ExportMultisigCoordinationSetupRoot = () => {
     <ExportMultisigCoordinationSetupStack.Navigator
       name="ExportMultisigCoordinationSetupRoot"
       initialRouteName="ExportMultisigCoordinationSetup"
-      screenOptions={{ headerShadowVisible: false, statusBarStyle: 'light' }}
+      screenOptions={{ headerHideShadow: true, statusBarStyle: 'light' }}
     >
       <ExportMultisigCoordinationSetupStack.Screen
         name="ExportMultisigCoordinationSetup"
@@ -496,7 +487,7 @@ const ExportMultisigCoordinationSetupRoot = () => {
 const PaymentCodeStack = createNativeStackNavigator();
 const PaymentCodeStackRoot = () => {
   return (
-    <PaymentCodeStack.Navigator name="PaymentCodeRoot" screenOptions={{ headerShadowVisible: false }} initialRouteName="PaymentCode">
+    <PaymentCodeStack.Navigator name="PaymentCodeRoot" screenOptions={{ headerHideShadow: true }} initialRouteName="PaymentCode">
       <PaymentCodeStack.Screen name="PaymentCode" component={PaymentCode} options={{ headerTitle: loc.bip47.payment_code }} />
       <PaymentCodeStack.Screen
         name="PaymentCodesList"
@@ -508,7 +499,7 @@ const PaymentCodeStackRoot = () => {
 };
 
 const RootStack = createNativeStackNavigator();
-const NavigationDefaultOptions = { headerShown: false, presentation: isDesktop ? 'containedModal' : 'modal' };
+const NavigationDefaultOptions = { headerShown: false, stackPresentation: isDesktop ? 'containedModal' : 'modal' };
 const StatusBarLightOptions = { statusBarStyle: 'light' };
 const Navigation = () => {
   return (
@@ -556,7 +547,7 @@ const Navigation = () => {
         component={ScanQRCodeRoot}
         options={{
           headerShown: false,
-          presentation: isDesktop ? 'containedModal' : 'fullScreenModal',
+          stackPresentation: isDesktop ? 'containedModal' : 'fullScreenModal',
           statusBarHidden: true,
         }}
       />
diff --git a/WatchConnectivity.ios.js b/WatchConnectivity.ios.js
index 32fa14ef..2e0e744e 100644
--- a/WatchConnectivity.ios.js
+++ b/WatchConnectivity.ios.js
@@ -39,16 +39,17 @@ function WatchConnectivity() {
   }, [walletsInitialized, isReachable, isInstalled]);
 
   useEffect(() => {
-    console.log(`Apple Watch: isInstalled: ${isInstalled}, isReachable: ${isReachable}, walletsInitialized: ${walletsInitialized}`);
+    console.warn(isInstalled, isReachable, walletsInitialized);
     if (isInstalled && walletsInitialized) {
       constructWalletsToSendToWatch().then(walletsToProcess => {
+        console.warn(walletsToProcess);
         if (walletsToProcess) {
           if (isReachable) {
             transferUserInfo(walletsToProcess);
-            console.log('Apple Watch: sent info to watch transferUserInfo');
+            console.warn('sent info to watch transferUserInfo');
           } else {
             updateApplicationContext(walletsToProcess);
-            console.log('Apple Watch: sent info to watch context');
+            console.warn('sent info to watch context');
           }
         }
       });
diff --git a/android/app/build.gradle b/android/app/build.gradle
index 30a678fe..0ed7d343 100644
--- a/android/app/build.gradle
+++ b/android/app/build.gradle
@@ -121,7 +121,6 @@ android {
             proguardFile "${rootProject.projectDir}/../node_modules/detox/android/detox/proguard-rules-app.pro"
         }
     }
-    namespace 'io.bluewallet.bluewallet'
 
     // applicationVariants are e.g. debug, release
     applicationVariants.all { variant ->
diff --git a/android/app/src/main/AndroidManifest.xml b/android/app/src/main/AndroidManifest.xml
index 5bdf93e3..76d1e1e1 100644
--- a/android/app/src/main/AndroidManifest.xml
+++ b/android/app/src/main/AndroidManifest.xml
@@ -1,5 +1,6 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-  android:installLocation="auto">
+  android:installLocation="auto"
+  package="io.bluewallet.bluewallet">
 
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>
diff --git a/android/build.gradle b/android/build.gradle
index 4fc042d7..4a228185 100644
--- a/android/build.gradle
+++ b/android/build.gradle
@@ -4,7 +4,7 @@ buildscript {
     ext {
         minSdkVersion = 28
         supportLibVersion = "28.0.0"
-        buildToolsVersion = "34.0.0"
+        buildToolsVersion = "33.0.0"
         compileSdkVersion = 33
         targetSdkVersion = 33
         googlePlayServicesVersion = "16.+"
@@ -15,14 +15,15 @@ buildscript {
         // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.
         ndkVersion = "23.1.7779620"
         kotlin_version = '1.9.20'
-        kotlinVersion = '1.9.20'
+        kotlinVersion = '1.8.0'
+
     }
     repositories {
         google()
         mavenCentral()
     }
     dependencies {
-        classpath('com.android.tools.build:gradle:7.4.2')
+        classpath("com.android.tools.build:gradle:7.4.2")
         classpath("com.bugsnag:bugsnag-android-gradle-plugin:5.+")
         classpath 'com.google.gms:google-services:4.4.0'  // Google Services plugin
     	classpath("com.facebook.react:react-native-gradle-plugin")
@@ -78,8 +79,8 @@ subprojects {
     afterEvaluate {project ->
         if (project.hasProperty("android")) {
             android {
-                buildToolsVersion "34.0.0"
-                compileSdkVersion 33
+                buildToolsVersion '30.0.3'
+                compileSdkVersion 31
                  defaultConfig {
                     minSdkVersion 28
                 }
diff --git a/blue_modules/checksumWords.js b/blue_modules/checksumWords.js
deleted file mode 100644
index f01c216b..00000000
--- a/blue_modules/checksumWords.js
+++ /dev/null
@@ -1,79 +0,0 @@
-import * as bip39 from 'bip39';
-import createHash from 'create-hash';
-
-// partial (11 or 23 word) seed phrase
-export function generateChecksumWords(stringSeedPhrase) {
-  const seedPhrase = stringSeedPhrase.toLowerCase().trim().split(' ');
-
-  if ((seedPhrase.length + 1) % 3 > 0) {
-    return false; // Partial mnemonic size must be multiple of three words, less one.
-  }
-
-  const wordList = bip39.wordlists[bip39.getDefaultWordlist()];
-
-  const concatLenBits = seedPhrase.length * 11;
-  const concatBits = new Array(concatLenBits);
-  let wordindex = 0;
-  for (let i = 0; i < seedPhrase.length; i++) {
-    const word = seedPhrase[i];
-    const ndx = wordList.indexOf(word.toLowerCase());
-    if (ndx === -1) return false;
-    // Set the next 11 bits to the value of the index.
-    for (let ii = 0; ii < 11; ++ii) {
-      concatBits[wordindex * 11 + ii] = (ndx & (1 << (10 - ii))) !== 0; // eslint-disable-line no-bitwise
-    }
-    ++wordindex;
-  }
-
-  const checksumLengthBits = (concatLenBits + 11) / 33;
-  const entropyLengthBits = concatLenBits + 11 - checksumLengthBits;
-  const varyingLengthBits = entropyLengthBits - concatLenBits;
-  const numPermutations = 2 ** varyingLengthBits;
-
-  const bitPermutations = new Array(numPermutations);
-
-  for (let i = 0; i < numPermutations; i++) {
-    if (bitPermutations[i] === undefined || bitPermutations[i] === null) bitPermutations[i] = new Array(varyingLengthBits);
-    for (let j = 0; j < varyingLengthBits; j++) {
-      bitPermutations[i][j] = ((i >> j) & 1) === 1; // eslint-disable-line no-bitwise
-    }
-  }
-
-  const possibleWords = [];
-  for (let i = 0; i < bitPermutations.length; i++) {
-    const bitPermutation = bitPermutations[i];
-    const entropyBits = new Array(concatLenBits + varyingLengthBits);
-    entropyBits.splice(0, 0, ...concatBits);
-    entropyBits.splice(concatBits.length, 0, ...bitPermutation.slice(0, varyingLengthBits));
-
-    const entropy = new Array(entropyLengthBits / 8);
-    for (let ii = 0; ii < entropy.length; ++ii) {
-      for (let jj = 0; jj < 8; ++jj) {
-        if (entropyBits[ii * 8 + jj]) {
-          entropy[ii] |= 1 << (7 - jj); // eslint-disable-line no-bitwise
-        }
-      }
-    }
-
-    const hash = createHash('sha256').update(Buffer.from(entropy)).digest();
-
-    const hashBits = new Array(hash.length * 8);
-    for (let iq = 0; iq < hash.length; ++iq) for (let jq = 0; jq < 8; ++jq) hashBits[iq * 8 + jq] = (hash[iq] & (1 << (7 - jq))) !== 0; // eslint-disable-line no-bitwise
-
-    const wordBits = new Array(11);
-    wordBits.splice(0, 0, ...bitPermutation.slice(0, varyingLengthBits));
-    wordBits.splice(varyingLengthBits, 0, ...hashBits.slice(0, checksumLengthBits));
-
-    let index = 0;
-    for (let j = 0; j < 11; ++j) {
-      index <<= 1; // eslint-disable-line no-bitwise
-      if (wordBits[j]) {
-        index |= 0x1; // eslint-disable-line no-bitwise
-      }
-    }
-
-    possibleWords.push(wordList[index]);
-  }
-
-  return possibleWords;
-}
diff --git a/blue_modules/fs.js b/blue_modules/fs.js
index 2407a822..19988690 100644
--- a/blue_modules/fs.js
+++ b/blue_modules/fs.js
@@ -7,7 +7,6 @@ import { launchCamera, launchImageLibrary } from 'react-native-image-picker';
 import { presentCameraNotAuthorizedAlert } from '../class/camera';
 import { isDesktop } from '../blue_modules/environment';
 import alert from '../components/Alert';
-import { readFile } from './react-native-bw-file-access';
 const LocalQRCode = require('@remobile/react-native-qrcode-local-image');
 
 const writeFileAndExportToAndroidDestionation = async ({ filename, contents, destinationLocalizedString, destination }) => {
@@ -207,18 +206,8 @@ const showFilePickerAndReadFile = async function () {
   }
 };
 
-// todo expand with other platforms if necessary
-const readFileOutsideSandbox = filePath => {
-  if (Platform.OS === 'ios') {
-    return readFile(filePath);
-  } else {
-    return RNFS.readFile(filePath);
-  }
-};
-
 module.exports.writeFileAndExport = writeFileAndExport;
 module.exports.openSignedTransaction = openSignedTransaction;
 module.exports.showFilePickerAndReadFile = showFilePickerAndReadFile;
 module.exports.showImagePickerAndReadImage = showImagePickerAndReadImage;
 module.exports.takePhotoWithImagePickerAndReadPhoto = takePhotoWithImagePickerAndReadPhoto;
-module.exports.readFileOutsideSandbox = readFileOutsideSandbox;
diff --git a/blue_modules/react-native-bw-file-access/.gitignore b/blue_modules/react-native-bw-file-access/.gitignore
deleted file mode 100644
index a1b76a8a..00000000
--- a/blue_modules/react-native-bw-file-access/.gitignore
+++ /dev/null
@@ -1,42 +0,0 @@
-# OSX
-#
-.DS_Store
-**/package-lock.json
-# node.js
-#
-node_modules/
-npm-debug.log
-yarn-error.log
-
-# Xcode
-#
-build/
-*.pbxuser
-!default.pbxuser
-*.mode1v3
-!default.mode1v3
-*.mode2v3
-!default.mode2v3
-*.perspectivev3
-!default.perspectivev3
-xcuserdata
-*.xccheckout
-*.moved-aside
-DerivedData
-*.hmap
-*.ipa
-*.xcuserstate
-project.xcworkspace
-
-# Android/IntelliJ
-#
-build/
-.idea
-.gradle
-local.properties
-*.iml
-
-# BUCK
-buck-out/
-\.buckd/
-*.keystore
diff --git a/blue_modules/react-native-bw-file-access/README.md b/blue_modules/react-native-bw-file-access/README.md
deleted file mode 100644
index 3e86cf13..00000000
--- a/blue_modules/react-native-bw-file-access/README.md
+++ /dev/null
@@ -1,6 +0,0 @@
-# react-native-bw-file-access
-
-A custom package written to allow BlueWallet to open files directly from the Files app in iOS. We make use of `startAccessingSecurityScopedResource()` and `stopAccessingSecurityScopedResource()`.
-
-Read Apple's documentation to understand more about the Open-in-Place mechanics for accessing files which are not in an apps sandbox environment.
-[Link here](https://developer.apple.com/documentation/uikit/documents_data_and_pasteboard/synchronizing_documents_in_the_icloud_environment#3743499).
diff --git a/blue_modules/react-native-bw-file-access/index.js b/blue_modules/react-native-bw-file-access/index.js
deleted file mode 100644
index 8330f9e6..00000000
--- a/blue_modules/react-native-bw-file-access/index.js
+++ /dev/null
@@ -1,11 +0,0 @@
-// main index.js
-
-import { NativeModules } from 'react-native';
-
-const { BwFileAccess } = NativeModules;
-
-export function readFile(filePath) {
-  return BwFileAccess.readFileContent(filePath);
-}
-
-export default BwFileAccess;
diff --git a/blue_modules/react-native-bw-file-access/ios/BwFileAccess.h b/blue_modules/react-native-bw-file-access/ios/BwFileAccess.h
deleted file mode 100644
index 0ecd3f53..00000000
--- a/blue_modules/react-native-bw-file-access/ios/BwFileAccess.h
+++ /dev/null
@@ -1,7 +0,0 @@
-// BwFileAccess.h
-
-#import <React/RCTBridgeModule.h>
-
-@interface BwFileAccess : NSObject <RCTBridgeModule>
-
-@end
diff --git a/blue_modules/react-native-bw-file-access/ios/BwFileAccess.m b/blue_modules/react-native-bw-file-access/ios/BwFileAccess.m
deleted file mode 100644
index 8081536e..00000000
--- a/blue_modules/react-native-bw-file-access/ios/BwFileAccess.m
+++ /dev/null
@@ -1,33 +0,0 @@
-// BwFileAccess.m
-
-#import "BwFileAccess.h"
-
-
-@implementation BwFileAccess
-
-RCT_EXPORT_MODULE()
-
-RCT_EXPORT_METHOD(readFileContent:(NSString *)filePath
-                  resolver:(RCTPromiseResolveBlock)resolve
-                  rejecter:(RCTPromiseRejectBlock)reject)
-{
-    NSURL *fileURL = [NSURL URLWithString:filePath];
-
-    if ([fileURL startAccessingSecurityScopedResource]) {
-        NSError *error;
-        NSData *fileData = [NSData dataWithContentsOfURL:fileURL options:0 error:&error];
-
-        if (fileData) {
-            NSString *fileContent = [[NSString alloc] initWithData:fileData encoding:NSUTF8StringEncoding];
-            resolve(fileContent);
-        } else {
-            reject(@"READ_ERROR", @"Failed to read file", error);
-        }
-
-        [fileURL stopAccessingSecurityScopedResource];
-    } else {
-        reject(@"ACCESS_ERROR", @"Failed to access security scoped resource", nil);
-    }
-}
-
-@end
diff --git a/blue_modules/react-native-bw-file-access/ios/BwFileAccess.xcodeproj/project.pbxproj b/blue_modules/react-native-bw-file-access/ios/BwFileAccess.xcodeproj/project.pbxproj
deleted file mode 100644
index 86bf756c..00000000
--- a/blue_modules/react-native-bw-file-access/ios/BwFileAccess.xcodeproj/project.pbxproj
+++ /dev/null
@@ -1,281 +0,0 @@
-// !$*UTF8*$!
-{
-	archiveVersion = 1;
-	classes = {
-	};
-	objectVersion = 46;
-	objects = {
-
-/* Begin PBXCopyFilesBuildPhase section */
-		58B511D91A9E6C8500147676 /* CopyFiles */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = "include/$(PRODUCT_NAME)";
-			dstSubfolderSpec = 16;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXCopyFilesBuildPhase section */
-
-/* Begin PBXFileReference section */
-		134814201AA4EA6300B7C361 /* libBwFileAccess.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libBwFileAccess.a; sourceTree = BUILT_PRODUCTS_DIR; };
-/* End PBXFileReference section */
-
-/* Begin PBXFrameworksBuildPhase section */
-		58B511D81A9E6C8500147676 /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXFrameworksBuildPhase section */
-
-/* Begin PBXGroup section */
-		134814211AA4EA7D00B7C361 /* Products */ = {
-			isa = PBXGroup;
-			children = (
-				134814201AA4EA6300B7C361 /* libBwFileAccess.a */,
-			);
-			name = Products;
-			sourceTree = "<group>";
-		};
-		58B511D21A9E6C8500147676 = {
-			isa = PBXGroup;
-			children = (
-				134814211AA4EA7D00B7C361 /* Products */,
-			);
-			sourceTree = "<group>";
-		};
-/* End PBXGroup section */
-
-/* Begin PBXNativeTarget section */
-		58B511DA1A9E6C8500147676 /* BwFileAccess */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 58B511EF1A9E6C8500147676 /* Build configuration list for PBXNativeTarget "BwFileAccess" */;
-			buildPhases = (
-				58B511D71A9E6C8500147676 /* Sources */,
-				58B511D81A9E6C8500147676 /* Frameworks */,
-				58B511D91A9E6C8500147676 /* CopyFiles */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-			);
-			name = BwFileAccess;
-			productName = RCTDataManager;
-			productReference = 134814201AA4EA6300B7C361 /* libBwFileAccess.a */;
-			productType = "com.apple.product-type.library.static";
-		};
-/* End PBXNativeTarget section */
-
-/* Begin PBXProject section */
-		58B511D31A9E6C8500147676 /* Project object */ = {
-			isa = PBXProject;
-			attributes = {
-				LastUpgradeCheck = 0920;
-				ORGANIZATIONNAME = Facebook;
-				TargetAttributes = {
-					58B511DA1A9E6C8500147676 = {
-						CreatedOnToolsVersion = 6.1.1;
-					};
-				};
-			};
-			buildConfigurationList = 58B511D61A9E6C8500147676 /* Build configuration list for PBXProject "BwFileAccess" */;
-			compatibilityVersion = "Xcode 3.2";
-			developmentRegion = en;
-			hasScannedForEncodings = 0;
-			knownRegions = (
-				en,
-				Base,
-			);
-			mainGroup = 58B511D21A9E6C8500147676;
-			productRefGroup = 58B511D21A9E6C8500147676;
-			projectDirPath = "";
-			projectRoot = "";
-			targets = (
-				58B511DA1A9E6C8500147676 /* BwFileAccess */,
-			);
-		};
-/* End PBXProject section */
-
-/* Begin PBXSourcesBuildPhase section */
-		58B511D71A9E6C8500147676 /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXSourcesBuildPhase section */
-
-/* Begin XCBuildConfiguration section */
-		58B511ED1A9E6C8500147676 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				CLANG_ANALYZER_NONNULL = YES;
-				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
-				CLANG_CXX_LIBRARY = "libc++";
-				CLANG_ENABLE_MODULES = YES;
-				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
-				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
-				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
-				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
-				CLANG_WARN_EMPTY_BODY = YES;
-				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
-				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
-				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
-				CLANG_WARN_UNREACHABLE_CODE = YES;
-				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
-				COPY_PHASE_STRIP = NO;
-				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				ENABLE_TESTABILITY = YES;
-				GCC_C_LANGUAGE_STANDARD = gnu99;
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_NO_COMMON_BLOCKS = YES;
-				GCC_OPTIMIZATION_LEVEL = 0;
-				GCC_PREPROCESSOR_DEFINITIONS = (
-					"DEBUG=1",
-					"$(inherited)",
-				);
-				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
-				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
-				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
-				GCC_WARN_UNDECLARED_SELECTOR = YES;
-				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
-				GCC_WARN_UNUSED_FUNCTION = YES;
-				GCC_WARN_UNUSED_VARIABLE = YES;
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
-				LD_RUNPATH_SEARCH_PATHS = "/usr/lib/swift $(inherited)";
-				LIBRARY_SEARCH_PATHS = (
-					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
-					"\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
-					"\"$(inherited)\"",
-				);
-				MTL_ENABLE_DEBUG_INFO = YES;
-				ONLY_ACTIVE_ARCH = YES;
-				SDKROOT = iphoneos;
-			};
-			name = Debug;
-		};
-		58B511EE1A9E6C8500147676 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				ALWAYS_SEARCH_USER_PATHS = NO;
-				CLANG_ANALYZER_NONNULL = YES;
-				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
-				CLANG_CXX_LIBRARY = "libc++";
-				CLANG_ENABLE_MODULES = YES;
-				CLANG_ENABLE_OBJC_ARC = YES;
-				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
-				CLANG_WARN_BOOL_CONVERSION = YES;
-				CLANG_WARN_COMMA = YES;
-				CLANG_WARN_CONSTANT_CONVERSION = YES;
-				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
-				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
-				CLANG_WARN_EMPTY_BODY = YES;
-				CLANG_WARN_ENUM_CONVERSION = YES;
-				CLANG_WARN_INFINITE_RECURSION = YES;
-				CLANG_WARN_INT_CONVERSION = YES;
-				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
-				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
-				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
-				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
-				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
-				CLANG_WARN_STRICT_PROTOTYPES = YES;
-				CLANG_WARN_SUSPICIOUS_MOVE = YES;
-				CLANG_WARN_UNREACHABLE_CODE = YES;
-				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
-				COPY_PHASE_STRIP = YES;
-				ENABLE_NS_ASSERTIONS = NO;
-				ENABLE_STRICT_OBJC_MSGSEND = YES;
-				GCC_C_LANGUAGE_STANDARD = gnu99;
-				GCC_NO_COMMON_BLOCKS = YES;
-				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
-				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
-				GCC_WARN_UNDECLARED_SELECTOR = YES;
-				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
-				GCC_WARN_UNUSED_FUNCTION = YES;
-				GCC_WARN_UNUSED_VARIABLE = YES;
-				IPHONEOS_DEPLOYMENT_TARGET = 9.0;
-				LD_RUNPATH_SEARCH_PATHS = "/usr/lib/swift $(inherited)";
-				LIBRARY_SEARCH_PATHS = (
-					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
-					"\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
-					"\"$(inherited)\"",
-				);
-				MTL_ENABLE_DEBUG_INFO = NO;
-				SDKROOT = iphoneos;
-				VALIDATE_PRODUCT = YES;
-			};
-			name = Release;
-		};
-		58B511F01A9E6C8500147676 /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				HEADER_SEARCH_PATHS = (
-					"$(inherited)",
-					/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include,
-					"$(SRCROOT)/../../../React/**",
-					"$(SRCROOT)/../../react-native/React/**",
-				);
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
-				OTHER_LDFLAGS = "-ObjC";
-				PRODUCT_NAME = BwFileAccess;
-				SKIP_INSTALL = YES;
-			};
-			name = Debug;
-		};
-		58B511F11A9E6C8500147676 /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				HEADER_SEARCH_PATHS = (
-					"$(inherited)",
-					/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include,
-					"$(SRCROOT)/../../../React/**",
-					"$(SRCROOT)/../../react-native/React/**",
-				);
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
-				OTHER_LDFLAGS = "-ObjC";
-				PRODUCT_NAME = BwFileAccess;
-				SKIP_INSTALL = YES;
-			};
-			name = Release;
-		};
-/* End XCBuildConfiguration section */
-
-/* Begin XCConfigurationList section */
-		58B511D61A9E6C8500147676 /* Build configuration list for PBXProject "BwFileAccess" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				58B511ED1A9E6C8500147676 /* Debug */,
-				58B511EE1A9E6C8500147676 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-		58B511EF1A9E6C8500147676 /* Build configuration list for PBXNativeTarget "BwFileAccess" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				58B511F01A9E6C8500147676 /* Debug */,
-				58B511F11A9E6C8500147676 /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
-/* End XCConfigurationList section */
-	};
-	rootObject = 58B511D31A9E6C8500147676 /* Project object */;
-}
diff --git a/blue_modules/react-native-bw-file-access/ios/BwFileAccess.xcworkspace/contents.xcworkspacedata b/blue_modules/react-native-bw-file-access/ios/BwFileAccess.xcworkspace/contents.xcworkspacedata
deleted file mode 100644
index a2321869..00000000
--- a/blue_modules/react-native-bw-file-access/ios/BwFileAccess.xcworkspace/contents.xcworkspacedata
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Workspace
-   version = "1.0">
-   <FileRef
-      location = "group:BwFileAccess.xcodeproj">
-   </FileRef>
-</Workspace>
diff --git a/blue_modules/react-native-bw-file-access/package.json b/blue_modules/react-native-bw-file-access/package.json
deleted file mode 100644
index 8503f94c..00000000
--- a/blue_modules/react-native-bw-file-access/package.json
+++ /dev/null
@@ -1,36 +0,0 @@
-{
-  "name": "react-native-bw-file-access",
-  "title": "React Native Bw File Access",
-  "version": "1.0.0",
-  "description": "TODO",
-  "main": "index.js",
-  "homepage": "https://github.com/setavenger/react-native-bw-file-access",
-  "files": [
-    "README.md",
-    "android",
-    "index.js",
-    "ios",
-    "react-native-bw-file-access.podspec"
-  ],
-  "scripts": {
-    "test": "echo \"Error: no test specified\" && exit 1"
-  },
-  "repository": {
-    "type": "git",
-    "url": "git+https://github.com/setavenger/react-native-bw-file-access.git",
-    "baseUrl": "https://github.com/setavenger/react-native-bw-file-access"
-  },
-  "keywords": [
-    "react-native"
-  ],
-  "author": {
-    "name": "Setor Blagogee"
-  },
-  "license": "MIT",
-  "licenseFilename": "LICENSE",
-  "readmeFilename": "README.md",
-  "peerDependencies": {
-    "react": ">=16.8.1",
-    "react-native": ">=0.60.0-rc.0 <1.0.x"
-  }
-}
diff --git a/blue_modules/react-native-bw-file-access/react-native-bw-file-access.podspec b/blue_modules/react-native-bw-file-access/react-native-bw-file-access.podspec
deleted file mode 100644
index 84ffdcbc..00000000
--- a/blue_modules/react-native-bw-file-access/react-native-bw-file-access.podspec
+++ /dev/null
@@ -1,19 +0,0 @@
-require "json"
-
-package = JSON.parse(File.read(File.join(__dir__, "package.json")))
-
-Pod::Spec.new do |s|
-  s.name         = "react-native-bw-file-access"
-  s.version      = package["version"]
-  s.summary      = package["description"]
-  s.homepage     = package["homepage"]
-  s.license      = package["license"]
-  s.authors      = package["author"]
-
-  s.platforms    = { :ios => "10.0" }
-  s.source       = { :git => "https://github.com/setavenger/react-native-bw-file-access.git", :tag => "#{s.version}" }
-
-  s.source_files = "ios/**/*.{h,m,mm}"
-  
-  s.dependency "React-Core"
-end
\ No newline at end of file
diff --git a/blue_modules/storage-context.js b/blue_modules/storage-context.js
index 6ed44be2..d091f054 100644
--- a/blue_modules/storage-context.js
+++ b/blue_modules/storage-context.js
@@ -81,9 +81,8 @@ export const BlueStorageProvider = ({ children }) => {
   }, []);
 
   const getPreferredCurrency = async () => {
-    const item = JSON.parse(await getPreferredCurrencyAsyncStorage());
+    const item = await getPreferredCurrencyAsyncStorage();
     _setPreferredFiatCurrency(item);
-    return item;
   };
 
   const setPreferredFiatCurrency = () => {
diff --git a/class/deeplink-schema-match.js b/class/deeplink-schema-match.js
index 6ffc9de5..51652034 100644
--- a/class/deeplink-schema-match.js
+++ b/class/deeplink-schema-match.js
@@ -1,11 +1,10 @@
 import { LightningCustodianWallet, WatchOnlyWallet } from './';
 import AsyncStorage from '@react-native-async-storage/async-storage';
+import RNFS from 'react-native-fs';
 import URL from 'url';
 import { Chain } from '../models/bitcoinUnits';
 import Lnurl from './lnurl';
 import Azteco from './azteco';
-import { readFileOutsideSandbox } from '../blue_modules/fs';
-
 const bitcoin = require('bitcoinjs-lib');
 const bip21 = require('bip21');
 const BlueApp = require('../BlueApp');
@@ -93,7 +92,7 @@ class DeeplinkSchemaMatch {
         }
       }
     } else if (DeeplinkSchemaMatch.isPossiblySignedPSBTFile(event.url)) {
-      readFileOutsideSandbox(decodeURI(event.url))
+      RNFS.readFile(decodeURI(event.url))
         .then(file => {
           if (file) {
             completionHandler([
@@ -109,8 +108,8 @@ class DeeplinkSchemaMatch {
         })
         .catch(e => console.warn(e));
       return;
-    } else if (DeeplinkSchemaMatch.isPossiblyCosignerFile(event.url)) {
-      readFileOutsideSandbox(decodeURI(event.url))
+    } else if (event.url.endsWith('.json')) {
+      RNFS.readFile(decodeURI(event.url))
         .then(file => {
           // checks whether the necessary json keys are present in order to set a cosigner,
           // doesn't validate the values this happens later
@@ -335,13 +334,6 @@ class DeeplinkSchemaMatch {
     );
   }
 
-  static isPossiblyCosignerFile(filePath) {
-    return (
-      (filePath.toLowerCase().startsWith('file:') || filePath.toLowerCase().startsWith('content:')) &&
-      filePath.toLowerCase().endsWith('.bwcosigner')
-    );
-  }
-
   static isBothBitcoinAndLightningOnWalletSelect(wallet, uri) {
     if (wallet.chain === Chain.ONCHAIN) {
       return [
diff --git a/class/on-app-launch.ts b/class/on-app-launch.ts
index 3c24deb2..37f0fb12 100644
--- a/class/on-app-launch.ts
+++ b/class/on-app-launch.ts
@@ -26,7 +26,7 @@ export default class OnAppLaunch {
     }
   }
 
-  static async getSelectedDefaultWallet(): Promise<AbstractWallet | boolean> {
+  static async getSelectedDefaultWallet(): Promise<AbstractWallet | false> {
     let selectedWallet: AbstractWallet | false = false;
     try {
       const selectedWalletID = JSON.parse((await AsyncStorage.getItem(OnAppLaunch.STORAGE_KEY)) || 'null');
diff --git a/class/quick-actions.js b/class/quick-actions.js
new file mode 100644
index 00000000..8b7ee034
--- /dev/null
+++ b/class/quick-actions.js
@@ -0,0 +1,99 @@
+import QuickActions from 'react-native-quick-actions';
+import { Platform } from 'react-native';
+import { formatBalance } from '../loc';
+import AsyncStorage from '@react-native-async-storage/async-storage';
+import { useContext, useEffect } from 'react';
+import { BlueStorageContext } from '../blue_modules/storage-context';
+
+function DeviceQuickActions() {
+  DeviceQuickActions.STORAGE_KEY = 'DeviceQuickActionsEnabled';
+  const { wallets, walletsInitialized, isStorageEncrypted, preferredFiatCurrency } = useContext(BlueStorageContext);
+
+  useEffect(() => {
+    if (walletsInitialized) {
+      isStorageEncrypted()
+        .then(value => {
+          if (value) {
+            removeShortcuts();
+          } else {
+            setQuickActions();
+          }
+        })
+        .catch(() => removeShortcuts());
+    }
+    // eslint-disable-next-line react-hooks/exhaustive-deps
+  }, [wallets, walletsInitialized, preferredFiatCurrency]);
+
+  DeviceQuickActions.setEnabled = (enabled = true) => {
+    return AsyncStorage.setItem(DeviceQuickActions.STORAGE_KEY, JSON.stringify(enabled)).then(() => {
+      if (!enabled) {
+        removeShortcuts();
+      } else {
+        setQuickActions();
+      }
+    });
+  };
+
+  DeviceQuickActions.popInitialAction = async () => {
+    const data = await QuickActions.popInitialAction();
+    return data;
+  };
+
+  DeviceQuickActions.getEnabled = async () => {
+    try {
+      const isEnabled = await AsyncStorage.getItem(DeviceQuickActions.STORAGE_KEY);
+      if (isEnabled === null) {
+        await DeviceQuickActions.setEnabled(JSON.stringify(true));
+        return true;
+      }
+      return !!JSON.parse(isEnabled);
+    } catch {
+      return true;
+    }
+  };
+
+  const removeShortcuts = async () => {
+    if (Platform.OS === 'android') {
+      QuickActions.clearShortcutItems();
+    } else {
+      /* iOS has a bug where if you nil the array or send an empty one it will restore the previous array on device reboot. */
+      QuickActions.setShortcutItems([
+        {
+          type: 'EmptyWallets', // Required
+          title: '',
+        },
+      ]);
+    }
+  };
+
+  const setQuickActions = async () => {
+    if (await DeviceQuickActions.getEnabled()) {
+      QuickActions.isSupported((error, _supported) => {
+        if (error === null) {
+          const shortcutItems = [];
+          for (const wallet of wallets.slice(0, 4)) {
+            shortcutItems.push({
+              type: 'Wallets', // Required
+              title: wallet.getLabel(), // Optional, if empty, `type` will be used instead
+              subtitle:
+                wallet.hideBalance || wallet.getBalance() <= 0
+                  ? ''
+                  : formatBalance(Number(wallet.getBalance()), wallet.getPreferredBalanceUnit(), true),
+              userInfo: {
+                url: `bluewallet://wallet/${wallet.getID()}`, // Provide any custom data like deep linking URL
+              },
+              icon: Platform.select({ android: 'quickactions', ios: 'bookmark' }),
+            });
+          }
+          QuickActions.setShortcutItems(shortcutItems);
+        }
+      });
+    } else {
+      removeShortcuts();
+    }
+  };
+
+  return null;
+}
+
+export default DeviceQuickActions;
diff --git a/class/quick-actions.tsx b/class/quick-actions.tsx
deleted file mode 100644
index e49a5195..00000000
--- a/class/quick-actions.tsx
+++ /dev/null
@@ -1,184 +0,0 @@
-import React, { useContext, useEffect } from 'react';
-import QuickActions from 'react-native-quick-actions';
-import { DeviceEventEmitter, Linking, Platform } from 'react-native';
-import { formatBalance } from '../loc';
-import AsyncStorage from '@react-native-async-storage/async-storage';
-import { BlueStorageContext } from '../blue_modules/storage-context';
-import DeeplinkSchemaMatch from './deeplink-schema-match';
-import OnAppLaunch from './on-app-launch';
-import * as NavigationService from '../NavigationService';
-import { CommonActions } from '@react-navigation/native';
-import { AbstractWallet } from './wallets/abstract-wallet';
-
-const DeviceQuickActionsStorageKey = 'DeviceQuickActionsEnabled';
-
-function DeviceQuickActions(): JSX.Element | null {
-  const { wallets, walletsInitialized, isStorageEncrypted, preferredFiatCurrency, addWallet, saveToDisk, setSharedCosigner } =
-    useContext(BlueStorageContext);
-
-  useEffect(() => {
-    if (walletsInitialized) {
-      isStorageEncrypted()
-        .then((value: boolean | undefined | null) => {
-          if (value) {
-            removeShortcuts();
-          } else {
-            setQuickActions();
-          }
-        })
-        .catch(() => removeShortcuts());
-    }
-    // eslint-disable-next-line react-hooks/exhaustive-deps
-  }, [wallets, walletsInitialized, preferredFiatCurrency, isStorageEncrypted]);
-
-  useEffect(() => {
-    if (walletsInitialized) {
-      DeviceEventEmitter.addListener('quickActionShortcut', walletQuickActions);
-      popInitialShortcutAction().then(popInitialAction);
-      return () => DeviceEventEmitter.removeAllListeners('quickActionShortcut');
-    }
-    // eslint-disable-next-line react-hooks/exhaustive-deps
-  }, [walletsInitialized]);
-
-  // @ts-ignore: Fix later
-  DeviceQuickActions.setEnabled = async (enabled: boolean = true): Promise<void> => {
-    await AsyncStorage.setItem(DeviceQuickActionsStorageKey, JSON.stringify(enabled));
-    if (!enabled) {
-      removeShortcuts();
-    } else {
-      setQuickActions();
-    }
-  };
-
-  const popInitialShortcutAction = async (): Promise<any> => {
-    const data = await QuickActions.popInitialAction();
-    return data;
-  };
-
-  // @ts-ignore: Fix later
-  DeviceQuickActions.getEnabled = async (): Promise<boolean> => {
-    try {
-      const isEnabled = await AsyncStorage.getItem(DeviceQuickActionsStorageKey);
-      if (isEnabled === null) {
-        // @ts-ignore: Fix later
-        await DeviceQuickActions.setEnabled(true);
-        return true;
-      }
-      return !!JSON.parse(isEnabled);
-    } catch {
-      return true;
-    }
-  };
-
-  const popInitialAction = async (data: any): Promise<void> => {
-    if (data) {
-      const wallet = wallets.find((w: { getID: () => any }) => w.getID() === data.userInfo.url.split('wallet/')[1]);
-      if (wallet) {
-        NavigationService.dispatch(
-          CommonActions.navigate({
-            name: 'WalletTransactions',
-            key: `WalletTransactions-${wallet.getID()}`,
-            params: {
-              walletID: wallet.getID(),
-              walletType: wallet.type,
-            },
-          }),
-        );
-      }
-    } else {
-      const url = await Linking.getInitialURL();
-      if (url) {
-        if (DeeplinkSchemaMatch.hasSchema(url)) {
-          handleOpenURL({ url });
-        }
-      } else {
-        const isViewAllWalletsEnabled = await OnAppLaunch.isViewAllWalletsEnabled();
-        if (!isViewAllWalletsEnabled) {
-          const selectedDefaultWallet: AbstractWallet = (await OnAppLaunch.getSelectedDefaultWallet()) as AbstractWallet;
-          if (selectedDefaultWallet) {
-            const wallet = wallets.find((w: AbstractWallet) => w.getID() === selectedDefaultWallet.getID());
-            if (wallet) {
-              NavigationService.dispatch(
-                CommonActions.navigate({
-                  name: 'WalletTransactions',
-                  key: `WalletTransactions-${wallet.getID()}`,
-                  params: {
-                    walletID: wallet.getID(),
-                    walletType: wallet.type,
-                  },
-                }),
-              );
-            }
-          }
-        }
-      }
-    }
-  };
-
-  const handleOpenURL = (event: { url: string }): void => {
-    DeeplinkSchemaMatch.navigationRouteFor(event, (value: any) => NavigationService.navigate(...value), {
-      wallets,
-      addWallet,
-      saveToDisk,
-      setSharedCosigner,
-    });
-  };
-
-  const walletQuickActions = (data: any): void => {
-    const wallet = wallets.find((w: { getID: () => any }) => w.getID() === data.userInfo.url.split('wallet/')[1]);
-    if (wallet) {
-      NavigationService.dispatch(
-        CommonActions.navigate({
-          name: 'WalletTransactions',
-          key: `WalletTransactions-${wallet.getID()}`,
-          params: {
-            walletID: wallet.getID(),
-            walletType: wallet.type,
-          },
-        }),
-      );
-    }
-  };
-
-  const removeShortcuts = async (): Promise<void> => {
-    if (Platform.OS === 'android') {
-      QuickActions.clearShortcutItems();
-    } else {
-      // @ts-ignore: Fix later
-      QuickActions.setShortcutItems([{ type: 'EmptyWallets', title: '' }]);
-    }
-  };
-
-  const setQuickActions = async (): Promise<void> => {
-    // @ts-ignore: Fix later
-    if (await DeviceQuickActions.getEnabled()) {
-      QuickActions.isSupported((error, _supported) => {
-        if (error === null) {
-          const shortcutItems = [];
-          for (const wallet of wallets.slice(0, 4)) {
-            shortcutItems.push({
-              type: 'Wallets', // Required
-              title: wallet.getLabel(), // Optional, if empty, `type` will be used instead
-              subtitle:
-                wallet.hideBalance || wallet.getBalance() <= 0
-                  ? ''
-                  : formatBalance(Number(wallet.getBalance()), wallet.getPreferredBalanceUnit(), true),
-              userInfo: {
-                url: `bluewallet://wallet/${wallet.getID()}`, // Provide any custom data like deep linking URL
-              },
-              icon: Platform.select({ android: 'quickactions', ios: 'bookmark' }),
-            });
-          }
-          // @ts-ignore: Fix later
-          QuickActions.setShortcutItems(shortcutItems);
-        }
-      });
-    } else {
-      removeShortcuts();
-    }
-  };
-
-  return <></>;
-}
-
-export default DeviceQuickActions;
diff --git a/class/quick-actions.windows.js b/class/quick-actions.windows.js
new file mode 100644
index 00000000..842d0f50
--- /dev/null
+++ b/class/quick-actions.windows.js
@@ -0,0 +1,15 @@
+function DeviceQuickActions() {
+  DeviceQuickActions.STORAGE_KEY = 'DeviceQuickActionsEnabled';
+
+  DeviceQuickActions.setEnabled = () => {};
+
+  DeviceQuickActions.getEnabled = async () => {
+    return false;
+  };
+
+  DeviceQuickActions.popInitialAction = () => {};
+
+  return null;
+}
+
+export default DeviceQuickActions;
diff --git a/class/quick-actions.windows.tsx b/class/quick-actions.windows.tsx
deleted file mode 100644
index 85343a01..00000000
--- a/class/quick-actions.windows.tsx
+++ /dev/null
@@ -1,23 +0,0 @@
-import React from 'react';
-
-export const DeviceQuickActionsStorageKey = 'DeviceQuickActionsEnabled';
-
-interface DeviceQuickActionsFunctions {
-  setEnabled: () => void;
-  getEnabled: () => Promise<boolean>;
-  popInitialAction: () => void;
-}
-
-const DeviceQuickActions: React.FC & DeviceQuickActionsFunctions = () => {
-  return null;
-};
-
-DeviceQuickActions.setEnabled = (): void => {};
-
-DeviceQuickActions.getEnabled = async (): Promise<boolean> => {
-  return false;
-};
-
-DeviceQuickActions.popInitialAction = (): void => {};
-
-export default DeviceQuickActions;
diff --git a/class/wallet-gradient.ts b/class/wallet-gradient.js
similarity index 81%
rename from class/wallet-gradient.ts
rename to class/wallet-gradient.js
index 74e617dc..b6b2830a 100644
--- a/class/wallet-gradient.ts
+++ b/class/wallet-gradient.js
@@ -1,6 +1,6 @@
 import { LegacyWallet } from './wallets/legacy-wallet';
 import { HDSegwitP2SHWallet } from './wallets/hd-segwit-p2sh-wallet';
-import { LightningCustodianWallet } from './wallets/lightning-custodian-wallet'; // Missing import
+import { LightningCustodianWallet } from './wallets/lightning-custodian-wallet';
 import { HDLegacyBreadwalletWallet } from './wallets/hd-legacy-breadwallet-wallet';
 import { HDLegacyP2PKHWallet } from './wallets/hd-legacy-p2pkh-wallet';
 import { WatchOnlyWallet } from './wallets/watch-only-wallet';
@@ -15,26 +15,26 @@ import { SLIP39LegacyP2PKHWallet, SLIP39SegwitP2SHWallet, SLIP39SegwitBech32Wall
 import { useTheme } from '../components/themes';
 
 export default class WalletGradient {
-  static hdSegwitP2SHWallet: string[] = ['#007AFF', '#0040FF'];
-  static hdSegwitBech32Wallet: string[] = ['#6CD9FC', '#44BEE5'];
-  static segwitBech32Wallet: string[] = ['#6CD9FC', '#44BEE5'];
-  static watchOnlyWallet: string[] = ['#474646', '#282828'];
-  static legacyWallet: string[] = ['#37E8C0', '#15BE98'];
-  static hdLegacyP2PKHWallet: string[] = ['#FD7478', '#E73B40'];
-  static hdLegacyBreadWallet: string[] = ['#fe6381', '#f99c42'];
-  static multisigHdWallet: string[] = ['#1ce6eb', '#296fc5', '#3500A2'];
-  static defaultGradients: string[] = ['#B770F6', '#9013FE'];
-  static lightningCustodianWallet: string[] = ['#F1AA07', '#FD7E37']; // Corrected property with missing colors
-  static aezeedWallet: string[] = ['#8584FF', '#5351FB'];
-  static ldkWallet: string[] = ['#8584FF', '#5351FB'];
+  static hdSegwitP2SHWallet = ['#007AFF', '#0040FF'];
+  static hdSegwitBech32Wallet = ['#6CD9FC', '#44BEE5'];
+  static segwitBech32Wallet = ['#6CD9FC', '#44BEE5'];
+  static watchOnlyWallet = ['#474646', '#282828'];
+  static legacyWallet = ['#37E8C0', '#15BE98'];
+  static hdLegacyP2PKHWallet = ['#FD7478', '#E73B40'];
+  static hdLegacyBreadWallet = ['#fe6381', '#f99c42'];
+  static multisigHdWallet = ['#1ce6eb', '#296fc5', '#3500A2'];
+  static defaultGradients = ['#B770F6', '#9013FE'];
+  static lightningCustodianWallet = ['#F1AA07', '#FD7E37'];
+  static aezeedWallet = ['#8584FF', '#5351FB'];
+  static ldkWallet = ['#8584FF', '#5351FB'];
 
   static createWallet = () => {
     const { colors } = useTheme();
     return colors.lightButton;
   };
 
-  static gradientsFor(type: string): string[] {
-    let gradient: string[];
+  static gradientsFor(type) {
+    let gradient;
     switch (type) {
       case WatchOnlyWallet.type:
         gradient = WalletGradient.watchOnlyWallet;
@@ -59,6 +59,9 @@ export default class WalletGradient {
       case SLIP39SegwitBech32Wallet.type:
         gradient = WalletGradient.hdSegwitBech32Wallet;
         break;
+      case LightningCustodianWallet.type:
+        gradient = WalletGradient.lightningCustodianWallet;
+        break;
       case SegwitBech32Wallet.type:
         gradient = WalletGradient.segwitBech32Wallet;
         break;
@@ -71,9 +74,6 @@ export default class WalletGradient {
       case LightningLdkWallet.type:
         gradient = WalletGradient.ldkWallet;
         break;
-      case LightningCustodianWallet.type:
-        gradient = WalletGradient.lightningCustodianWallet;
-        break;
       default:
         gradient = WalletGradient.defaultGradients;
         break;
@@ -81,8 +81,8 @@ export default class WalletGradient {
     return gradient;
   }
 
-  static linearGradientProps(type: string) {
-    let props: any;
+  static linearGradientProps(type) {
+    let props;
     switch (type) {
       case MultisigHDWallet.type:
         /* Example
@@ -96,8 +96,8 @@ export default class WalletGradient {
     return props;
   }
 
-  static headerColorFor(type: string): string {
-    let gradient: string[];
+  static headerColorFor(type) {
+    let gradient;
     switch (type) {
       case WatchOnlyWallet.type:
         gradient = WalletGradient.watchOnlyWallet;
@@ -128,15 +128,15 @@ export default class WalletGradient {
       case MultisigHDWallet.type:
         gradient = WalletGradient.multisigHdWallet;
         break;
+      case LightningCustodianWallet.type:
+        gradient = WalletGradient.lightningCustodianWallet;
+        break;
       case HDAezeedWallet.type:
         gradient = WalletGradient.aezeedWallet;
         break;
       case LightningLdkWallet.type:
         gradient = WalletGradient.ldkWallet;
         break;
-      case LightningCustodianWallet.type:
-        gradient = WalletGradient.lightningCustodianWallet;
-        break;
       default:
         gradient = WalletGradient.defaultGradients;
         break;
diff --git a/components/BottomModal.js b/components/BottomModal.js
index 05b67890..cb0b171c 100644
--- a/components/BottomModal.js
+++ b/components/BottomModal.js
@@ -2,10 +2,9 @@ import React from 'react';
 import PropTypes from 'prop-types';
 import { StyleSheet, Platform, useWindowDimensions, View } from 'react-native';
 import Modal from 'react-native-modal';
-import { BlueSpacing10 } from '../BlueComponents';
+import { BlueButton, BlueSpacing10 } from '../BlueComponents';
 import loc from '../loc';
 import { useTheme } from './themes';
-import Button from './Button';
 
 const styles = StyleSheet.create({
   root: {
@@ -54,7 +53,7 @@ const BottomModal = ({
       {props.children}
       {doneButton && (
         <View style={[styles.hasDoneButton, stylesHook.hasDoneButton]}>
-          <Button title={loc.send.input_done} onPress={onClose} />
+          <BlueButton title={loc.send.input_done} onPress={onClose} />
           <BlueSpacing10 />
         </View>
       )}
diff --git a/components/StyledButton.js b/components/Button.js
similarity index 77%
rename from components/StyledButton.js
rename to components/Button.js
index e3e802e4..a48ff4c9 100644
--- a/components/StyledButton.js
+++ b/components/Button.js
@@ -3,9 +3,9 @@ import { TouchableOpacity, View, Text, StyleSheet } from 'react-native';
 import PropTypes from 'prop-types';
 import { useTheme } from './themes';
 
-export const StyledButtonType = { default: 'default', destroy: 'destroy', grey: 'grey' };
-const StyledButton = props => {
-  const { onPress, text = '', disabled = false, buttonStyle = StyledButtonType.default } = props;
+export const ButtonStyle = { default: 'default', destroy: 'destroy', grey: 'grey' };
+const Button = props => {
+  const { onPress, text = '', disabled = false, buttonStyle = ButtonStyle.default } = props;
   const { colors } = useTheme();
   const stylesHook = StyleSheet.create({
     buttonGrey: {
@@ -16,9 +16,9 @@ const StyledButton = props => {
     },
   });
   const textStyles = () => {
-    if (buttonStyle === StyledButtonType.grey) {
+    if (buttonStyle === ButtonStyle.grey) {
       return stylesHook.textGray;
-    } else if (buttonStyle === StyledButtonType.destroy) {
+    } else if (buttonStyle === ButtonStyle.destroy) {
       return styles.textDestroy;
     } else {
       return styles.textDefault;
@@ -26,9 +26,9 @@ const StyledButton = props => {
   };
 
   const buttonStyles = () => {
-    if (buttonStyle === StyledButtonType.grey) {
+    if (buttonStyle === ButtonStyle.grey) {
       return stylesHook.buttonGrey;
-    } else if (buttonStyle === StyledButtonType.destroy) {
+    } else if (buttonStyle === ButtonStyle.destroy) {
       return styles.buttonDestroy;
     } else {
       return styles.buttonDefault;
@@ -76,8 +76,8 @@ const styles = StyleSheet.create({
   },
 });
 
-export default StyledButton;
-StyledButton.propTypes = {
+export default Button;
+Button.propTypes = {
   onPress: PropTypes.func.isRequired,
   text: PropTypes.string.isRequired,
   disabled: PropTypes.bool,
diff --git a/components/Button.tsx b/components/Button.tsx
deleted file mode 100644
index 8cc2dec0..00000000
--- a/components/Button.tsx
+++ /dev/null
@@ -1,83 +0,0 @@
-import React from 'react';
-import { TouchableOpacity, View, Text, StyleSheet, StyleProp, ViewStyle } from 'react-native';
-import { Icon } from 'react-native-elements';
-import { useTheme } from './themes';
-
-// Define an interface for the props
-interface ButtonProps {
-  backgroundColor?: string;
-  buttonTextColor?: string;
-  disabled?: boolean;
-  testID?: string;
-  icon?: {
-    name: string;
-    type: string;
-    color: string;
-  };
-  title?: string;
-  style?: StyleProp<ViewStyle>;
-  onPress?: () => void;
-}
-
-export const Button: React.FC<ButtonProps> = props => {
-  const { colors } = useTheme();
-
-  let backgroundColor = props.backgroundColor ?? colors.mainColor;
-  let fontColor = props.buttonTextColor ?? colors.buttonTextColor;
-  if (props.disabled) {
-    backgroundColor = colors.buttonDisabledBackgroundColor;
-    fontColor = colors.buttonDisabledTextColor;
-  }
-
-  const buttonStyle = {
-    ...styles.button,
-    backgroundColor,
-    borderColor: props.disabled ? colors.buttonDisabledBackgroundColor : 'transparent',
-  };
-
-  const textStyle = {
-    ...styles.text,
-    color: fontColor,
-  };
-
-  return (
-    <TouchableOpacity
-      testID={props.testID}
-      style={[buttonStyle, props.style]}
-      accessibilityRole="button"
-      onPress={props.onPress}
-      disabled={props.disabled}
-    >
-      <View style={styles.content}>
-        {props.icon && <Icon name={props.icon.name} type={props.icon.type} color={props.icon.color} />}
-        {props.title && <Text style={textStyle}>{props.title}</Text>}
-      </View>
-    </TouchableOpacity>
-  );
-};
-
-const styles = StyleSheet.create({
-  button: {
-    borderWidth: 0.7,
-    minHeight: 45,
-    height: 45,
-    maxHeight: 45,
-    borderRadius: 25,
-    justifyContent: 'center',
-    alignItems: 'center',
-    paddingHorizontal: 16,
-    flexGrow: 1,
-  },
-  content: {
-    flexDirection: 'row',
-    justifyContent: 'center',
-    alignItems: 'center',
-  },
-  text: {
-    marginHorizontal: 8,
-    fontSize: 16,
-    fontWeight: '500',
-  },
-});
-
-export default Button;
diff --git a/components/FloatButtons.tsx b/components/FloatButtons.js
similarity index 67%
rename from components/FloatButtons.tsx
rename to components/FloatButtons.js
index 6451e377..9b4d5a98 100644
--- a/components/FloatButtons.tsx
+++ b/components/FloatButtons.js
@@ -1,7 +1,7 @@
-import React, { useState, useRef, forwardRef, ReactNode } from 'react';
+import React, { useState, useRef, forwardRef } from 'react';
+import PropTypes from 'prop-types';
 import { View, Text, TouchableOpacity, StyleSheet, Dimensions, PixelRatio } from 'react-native';
 import { useTheme } from './themes';
-import { useSafeAreaInsets } from 'react-native-safe-area-context';
 
 const BORDER_RADIUS = 30;
 const PADDINGS = 8;
@@ -15,6 +15,7 @@ const cStyles = StyleSheet.create({
   },
   rootAbsolute: {
     position: 'absolute',
+    bottom: 30,
   },
   rootInline: {},
   rootPre: {
@@ -28,25 +29,18 @@ const cStyles = StyleSheet.create({
   },
 });
 
-interface FContainerProps {
-  children: ReactNode | ReactNode[];
-  inline?: boolean;
-}
-
-export const FContainer = forwardRef<View, FContainerProps>((props, ref) => {
-  const [newWidth, setNewWidth] = useState<number | undefined>(undefined);
+export const FContainer = forwardRef((props, ref) => {
+  const [newWidth, setNewWidth] = useState();
   const layoutCalculated = useRef(false);
-  const insets = useSafeAreaInsets();
-  const bottomInsets = { bottom: insets.bottom };
 
-  const onLayout = (event: { nativeEvent: { layout: { width: number } } }) => {
+  const onLayout = event => {
     if (layoutCalculated.current) return;
     const maxWidth = Dimensions.get('window').width - BORDER_RADIUS - 20;
     const { width } = event.nativeEvent.layout;
     const withPaddings = Math.ceil(width + PADDINGS * 2);
     const len = React.Children.toArray(props.children).filter(Boolean).length;
     let newW = withPaddings * len > maxWidth ? Math.floor(maxWidth / len) : withPaddings;
-    if (len === 1 && newW < 90) newW = 90;
+    if (len === 1 && newW < 90) newW = 90; // to add Paddings for lonely small button, like Scan on main screen
     setNewWidth(newW);
     layoutCalculated.current = true;
   };
@@ -55,36 +49,29 @@ export const FContainer = forwardRef<View, FContainerProps>((props, ref) => {
     <View
       ref={ref}
       onLayout={onLayout}
-      style={[
-        cStyles.root,
-        props.inline ? cStyles.rootInline : cStyles.rootAbsolute,
-        bottomInsets,
-        newWidth ? cStyles.rootPost : cStyles.rootPre,
-      ]}
+      style={[cStyles.root, props.inline ? cStyles.rootInline : cStyles.rootAbsolute, newWidth ? cStyles.rootPost : cStyles.rootPre]}
     >
       {newWidth
         ? React.Children.toArray(props.children)
             .filter(Boolean)
-            .map((child, index, array) => {
-              if (typeof child === 'string') {
-                return (
-                  <View key={index} style={{ width: newWidth }}>
-                    <Text>{child}</Text>
-                  </View>
-                );
-              }
-              return React.cloneElement(child as React.ReactElement<any>, {
+            .map((c, index, array) =>
+              React.cloneElement(c, {
                 width: newWidth,
                 key: index,
                 first: index === 0,
                 last: index === array.length - 1,
-              });
-            })
+              }),
+            )
         : props.children}
     </View>
   );
 });
 
+FContainer.propTypes = {
+  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.element]),
+  inline: PropTypes.bool,
+};
+
 const buttonFontSize =
   PixelRatio.roundToNearestPixel(Dimensions.get('window').width / 26) > 22
     ? 22
@@ -108,16 +95,7 @@ const bStyles = StyleSheet.create({
   },
 });
 
-interface FButtonProps {
-  text: string;
-  icon: ReactNode;
-  width?: number;
-  first?: boolean;
-  last?: boolean;
-  disabled?: boolean;
-}
-
-export const FButton = ({ text, icon, width, first, last, ...props }: FButtonProps) => {
+export const FButton = ({ text, icon, width, first, last, ...props }) => {
   const { colors } = useTheme();
   const bStylesHook = StyleSheet.create({
     root: {
@@ -130,7 +108,7 @@ export const FButton = ({ text, icon, width, first, last, ...props }: FButtonPro
       color: colors.formBorder,
     },
   });
-  const style: Record<string, any> = {};
+  const style = {};
 
   if (width) {
     const paddingLeft = first ? BORDER_RADIUS / 2 : PADDINGS;
@@ -149,3 +127,12 @@ export const FButton = ({ text, icon, width, first, last, ...props }: FButtonPro
     </TouchableOpacity>
   );
 };
+
+FButton.propTypes = {
+  text: PropTypes.string,
+  icon: PropTypes.element,
+  width: PropTypes.number,
+  first: PropTypes.bool,
+  last: PropTypes.bool,
+  disabled: PropTypes.bool,
+};
diff --git a/components/TransactionsNavigationHeader.tsx b/components/TransactionsNavigationHeader.tsx
index 4fc5fc35..76bdc8e2 100644
--- a/components/TransactionsNavigationHeader.tsx
+++ b/components/TransactionsNavigationHeader.tsx
@@ -10,7 +10,6 @@ import loc, { formatBalance } from '../loc';
 import { BlueStorageContext } from '../blue_modules/storage-context';
 import ToolTipMenu from './TooltipMenu';
 import { BluePrivateBalance } from '../BlueComponents';
-import { FiatUnit } from '../models/fiatUnit';
 
 interface TransactionsNavigationHeaderProps {
   wallet: AbstractWallet;
@@ -41,7 +40,7 @@ const TransactionsNavigationHeader: React.FC<TransactionsNavigationHeaderProps>
   const [wallet, setWallet] = useState(initialWallet);
   const [allowOnchainAddress, setAllowOnchainAddress] = useState(false);
 
-  const { preferredFiatCurrency, saveToDisk } = useContext(BlueStorageContext);
+  const context = useContext(BlueStorageContext);
   const menuRef = useRef(null);
 
   const verifyIfWalletAllowsOnchainAddress = useCallback(() => {
@@ -82,7 +81,7 @@ const TransactionsNavigationHeader: React.FC<TransactionsNavigationHeaderProps>
 
     const updatedWallet = updateWalletVisibility(wallet, !wallet.hideBalance);
     setWallet(updatedWallet);
-    saveToDisk();
+    context.saveToDisk();
   };
 
   const updateWalletWithNewUnit = (w: AbstractWallet, newPreferredUnit: BitcoinUnit) => {
@@ -156,18 +155,13 @@ const TransactionsNavigationHeader: React.FC<TransactionsNavigationHeaderProps>
         })()}
         style={styles.chainIcon}
       />
-
       <Text testID="WalletLabel" numberOfLines={1} style={styles.walletLabel}>
         {wallet.getLabel()}
       </Text>
       <ToolTipMenu
         onPress={changeWalletBalanceUnit}
         ref={menuRef}
-        title={`${loc.wallets.balance} (${
-          wallet.getPreferredBalanceUnit() === BitcoinUnit.LOCAL_CURRENCY
-            ? preferredFiatCurrency.endPointKey ?? FiatUnit.USD
-            : wallet.getPreferredBalanceUnit()
-        })`}
+        title={loc.wallets.balance}
         onPressMenuItem={onPressMenuItem}
         actions={
           wallet.hideBalance
diff --git a/components/icons/PlusIcon.js b/components/icons/PlusIcon.js
index bbf383a9..f5fc6c5c 100644
--- a/components/icons/PlusIcon.js
+++ b/components/icons/PlusIcon.js
@@ -1,6 +1,6 @@
 import React from 'react';
-import { StyleSheet, TouchableOpacity } from 'react-native';
-import { Icon } from 'react-native-elements';
+import { StyleSheet } from 'react-native';
+import { Avatar } from 'react-native-elements';
 import { useTheme } from '../themes';
 
 const styles = StyleSheet.create({
@@ -8,8 +8,6 @@ const styles = StyleSheet.create({
     width: 30,
     height: 30,
     borderRadius: 15,
-    justifyContent: 'center',
-    alignContent: 'center',
   },
 });
 
@@ -22,9 +20,12 @@ const PlusIcon = props => {
   });
 
   return (
-    <TouchableOpacity style={[styles.ball, stylesHook.ball]} onPress={props.onPress}>
-      <Icon name="add" size={22} type="ionicons" color={colors.foregroundColor} />
-    </TouchableOpacity>
+    <Avatar
+      rounded
+      containerStyle={[styles.ball, stylesHook.ball]}
+      icon={{ name: 'add', size: 22, type: 'ionicons', color: colors.foregroundColor }}
+      {...props}
+    />
   );
 };
 
diff --git a/components/themes.ts b/components/themes.ts
index 64c635dd..802d8b00 100644
--- a/components/themes.ts
+++ b/components/themes.ts
@@ -65,7 +65,6 @@ export const BlueDefaultTheme = {
     changeText: '#F38C47',
     receiveBackground: '#D1F9D6',
     receiveText: '#37C0A1',
-    navigationBarColor: '#FFFFFF',
   },
 };
 
@@ -121,7 +120,6 @@ export const BlueDarkTheme: Theme = {
     changeText: '#F38C47',
     receiveBackground: 'rgba(210,248,214,.2)',
     receiveText: '#37C0A1',
-    navigationBarColor: '#3A3A3C',
   },
 };
 
diff --git a/ios/BlueWallet-tvOS/Info.plist b/ios/BlueWallet-tvOS/Info.plist
new file mode 100644
index 00000000..2fb6a11c
--- /dev/null
+++ b/ios/BlueWallet-tvOS/Info.plist
@@ -0,0 +1,54 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>CFBundleDevelopmentRegion</key>
+	<string>en</string>
+	<key>CFBundleExecutable</key>
+	<string>$(EXECUTABLE_NAME)</string>
+	<key>CFBundleIdentifier</key>
+	<string>org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)</string>
+	<key>CFBundleInfoDictionaryVersion</key>
+	<string>6.0</string>
+	<key>CFBundleName</key>
+	<string>$(PRODUCT_NAME)</string>
+	<key>CFBundlePackageType</key>
+	<string>APPL</string>
+	<key>CFBundleShortVersionString</key>
+	<string>1.0</string>
+	<key>CFBundleSignature</key>
+	<string>????</string>
+	<key>CFBundleVersion</key>
+	<string>1</string>
+	<key>LSRequiresIPhoneOS</key>
+	<true/>
+	<key>UILaunchStoryboardName</key>
+	<string>LaunchScreen</string>
+	<key>UIRequiredDeviceCapabilities</key>
+	<array>
+		<string>armv7</string>
+	</array>
+	<key>UISupportedInterfaceOrientations</key>
+	<array>
+		<string>UIInterfaceOrientationPortrait</string>
+		<string>UIInterfaceOrientationLandscapeLeft</string>
+		<string>UIInterfaceOrientationLandscapeRight</string>
+	</array>
+	<key>UIViewControllerBasedStatusBarAppearance</key>
+	<false/>
+	<key>NSLocationWhenInUseUsageDescription</key>
+	<string></string>
+	<key>NSAppTransportSecurity</key>
+	<!--See http://ste.vn/2015/06/10/configuring-app-transport-security-ios-9-osx-10-11/ -->
+	<dict>
+		<key>NSExceptionDomains</key>
+		<dict>
+			<key>localhost</key>
+			<dict>
+				<key>NSExceptionAllowsInsecureHTTPLoads</key>
+				<true/>
+			</dict>
+		</dict>
+	</dict>
+</dict>
+</plist>
diff --git a/ios/BlueWallet-tvOSTests/Info.plist b/ios/BlueWallet-tvOSTests/Info.plist
new file mode 100644
index 00000000..886825cc
--- /dev/null
+++ b/ios/BlueWallet-tvOSTests/Info.plist
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>CFBundleDevelopmentRegion</key>
+	<string>en</string>
+	<key>CFBundleExecutable</key>
+	<string>$(EXECUTABLE_NAME)</string>
+	<key>CFBundleIdentifier</key>
+	<string>org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)</string>
+	<key>CFBundleInfoDictionaryVersion</key>
+	<string>6.0</string>
+	<key>CFBundleName</key>
+	<string>$(PRODUCT_NAME)</string>
+	<key>CFBundlePackageType</key>
+	<string>BNDL</string>
+	<key>CFBundleShortVersionString</key>
+	<string>1.0</string>
+	<key>CFBundleSignature</key>
+	<string>????</string>
+	<key>CFBundleVersion</key>
+	<string>1</string>
+</dict>
+</plist>
diff --git a/ios/BlueWallet.xcodeproj/project.pbxproj b/ios/BlueWallet.xcodeproj/project.pbxproj
index 9ffb0ede..aac6356a 100644
--- a/ios/BlueWallet.xcodeproj/project.pbxproj
+++ b/ios/BlueWallet.xcodeproj/project.pbxproj
@@ -11,7 +11,6 @@
 		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
 		32B5A32A2334450100F8D608 /* Bridge.swift in Sources */ = {isa = PBXBuildFile; fileRef = 32B5A3292334450100F8D608 /* Bridge.swift */; };
 		32F0A29A2311DBB20095C559 /* ComplicationController.swift in Sources */ = {isa = PBXBuildFile; fileRef = 32F0A2992311DBB20095C559 /* ComplicationController.swift */; };
-		48A32941B8DE2D748C7E11DD /* libPods-BlueWallet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 4A3E9C4CEC73117170F55EC7 /* libPods-BlueWallet.a */; };
 		6D2A6464258BA92D0092292B /* Stickers.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 6D2A6463258BA92D0092292B /* Stickers.xcassets */; };
 		6D2A6468258BA92D0092292B /* Stickers.appex in Embed App Extensions */ = {isa = PBXBuildFile; fileRef = 6D2A6461258BA92C0092292B /* Stickers.appex */; platformFilter = ios; settings = {ATTRIBUTES = (RemoveHeadersOnCopy, ); }; };
 		6D32C5C62596CE3A008C077C /* EventEmitter.m in Sources */ = {isa = PBXBuildFile; fileRef = 6D32C5C52596CE3A008C077C /* EventEmitter.m */; };
@@ -49,6 +48,7 @@
 		782F075B5DD048449E2DECE9 /* libz.tbd in Frameworks */ = {isa = PBXBuildFile; fileRef = B9D9B3A7B2CB4255876B67AF /* libz.tbd */; };
 		849047CA2702A32A008EE567 /* Handoff.swift in Sources */ = {isa = PBXBuildFile; fileRef = 849047C92702A32A008EE567 /* Handoff.swift */; };
 		84E05A842721191B001A0D3A /* Settings.bundle in Resources */ = {isa = PBXBuildFile; fileRef = 84E05A832721191B001A0D3A /* Settings.bundle */; };
+		906451CAD44154C2950030EC /* libPods-BlueWallet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 731973BA0AC6EA78962CE5B6 /* libPods-BlueWallet.a */; };
 		B40D4E34225841EC00428FCC /* Interface.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = B40D4E32225841EC00428FCC /* Interface.storyboard */; };
 		B40D4E36225841ED00428FCC /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = B40D4E35225841ED00428FCC /* Assets.xcassets */; };
 		B40D4E3D225841ED00428FCC /* BlueWalletWatch Extension.appex in Embed App Extensions */ = {isa = PBXBuildFile; fileRef = B40D4E3C225841ED00428FCC /* BlueWalletWatch Extension.appex */; settings = {ATTRIBUTES = (RemoveHeadersOnCopy, ); }; };
@@ -69,8 +69,6 @@
 		B43D037C225847C500FBAA95 /* Wallet.swift in Sources */ = {isa = PBXBuildFile; fileRef = B43D0376225847C500FBAA95 /* Wallet.swift */; };
 		B43D037D225847C500FBAA95 /* WalletInformation.swift in Sources */ = {isa = PBXBuildFile; fileRef = B43D0377225847C500FBAA95 /* WalletInformation.swift */; };
 		B461B852299599F800E431AA /* AppDelegate.mm in Sources */ = {isa = PBXBuildFile; fileRef = B461B851299599F800E431AA /* AppDelegate.mm */; };
-		B4AB225D2B02AD12001F4328 /* XMLParserDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = B4AB225C2B02AD12001F4328 /* XMLParserDelegate.swift */; };
-		B4AB225E2B02AD12001F4328 /* XMLParserDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = B4AB225C2B02AD12001F4328 /* XMLParserDelegate.swift */; };
 		B4EE583C226703320003363C /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = B40D4E35225841ED00428FCC /* Assets.xcassets */; };
 		E5D4794B26781FC0007838C1 /* fiatUnits.json in Resources */ = {isa = PBXBuildFile; fileRef = 6DD410AD266CAF1F0087DE03 /* fiatUnits.json */; };
 		E5D4794C26781FC1007838C1 /* fiatUnits.json in Resources */ = {isa = PBXBuildFile; fileRef = 6DD410AD266CAF1F0087DE03 /* fiatUnits.json */; };
@@ -173,13 +171,13 @@
 		32F0A2502310B0910095C559 /* BlueWallet.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = BlueWallet.entitlements; path = BlueWallet/BlueWallet.entitlements; sourceTree = "<group>"; };
 		32F0A2992311DBB20095C559 /* ComplicationController.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = ComplicationController.swift; sourceTree = "<group>"; };
 		334051161886419EA186F4BA /* FontAwesome.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf"; sourceTree = "<group>"; };
+		367FA8CEB35BC9431019D98A /* Pods-MarketWidgetExtension.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MarketWidgetExtension.debug.xcconfig"; path = "Pods/Target Support Files/Pods-MarketWidgetExtension/Pods-MarketWidgetExtension.debug.xcconfig"; sourceTree = "<group>"; };
 		3703B10AAB374CF896CCC2EA /* libBVLinearGradient.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libBVLinearGradient.a; sourceTree = "<group>"; };
-		3EEFFAD884BC44F977DD1897 /* Pods-BlueWallet.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-BlueWallet.debug.xcconfig"; path = "Target Support Files/Pods-BlueWallet/Pods-BlueWallet.debug.xcconfig"; sourceTree = "<group>"; };
 		3F7F1B8332C6439793D55B45 /* EvilIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = EvilIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf"; sourceTree = "<group>"; };
+		41BD3AC9FD81723B68A63C12 /* libPods-MarketWidgetExtension.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-MarketWidgetExtension.a"; sourceTree = BUILT_PRODUCTS_DIR; };
 		44BC9E3EE0E9476A830CCCB9 /* Entypo.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Entypo.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Entypo.ttf"; sourceTree = "<group>"; };
 		47564776A7A3427DB36C087D /* FontAwesome5_Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Regular.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf"; sourceTree = "<group>"; };
 		47C436B1EF23484B8181DBEA /* Zocial.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Zocial.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Zocial.ttf"; sourceTree = "<group>"; };
-		4A3E9C4CEC73117170F55EC7 /* libPods-BlueWallet.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-BlueWallet.a"; sourceTree = BUILT_PRODUCTS_DIR; };
 		4D746BBE67E84684848246E2 /* SimpleLineIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = SimpleLineIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf"; sourceTree = "<group>"; };
 		4F12F501B686459183E0BE0D /* libRNVectorIcons.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNVectorIcons.a; sourceTree = "<group>"; };
 		5A8F67CF29564E41882ECEF8 /* FontAwesome5_Brands.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Brands.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf"; sourceTree = "<group>"; };
@@ -241,8 +239,10 @@
 		6DFC807124EA2FA9007B8700 /* ViewQRCodefaceController.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ViewQRCodefaceController.swift; sourceTree = "<group>"; };
 		6EB3338E347F4AFAA8C85C04 /* libRNDeviceInfo-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNDeviceInfo-tvOS.a"; sourceTree = "<group>"; };
 		70C9C17A3F52430B99582AF4 /* libRNCamera.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNCamera.a; sourceTree = "<group>"; };
+		731973BA0AC6EA78962CE5B6 /* libPods-BlueWallet.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-BlueWallet.a"; sourceTree = BUILT_PRODUCTS_DIR; };
 		78A87E7251D94144A71A2F67 /* FontAwesome5_Solid.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Solid.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf"; sourceTree = "<group>"; };
 		7B468CC34D5B41F3950078EF /* libsqlite3.0.tbd */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "sourcecode.text-based-dylib-definition"; name = libsqlite3.0.tbd; path = usr/lib/libsqlite3.0.tbd; sourceTree = SDKROOT; };
+		7BAA8F97E61B677D33CF1944 /* Pods-WalletInformationAndMarketWidgetExtension.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-WalletInformationAndMarketWidgetExtension.release.xcconfig"; path = "Pods/Target Support Files/Pods-WalletInformationAndMarketWidgetExtension/Pods-WalletInformationAndMarketWidgetExtension.release.xcconfig"; sourceTree = "<group>"; };
 		8448882949434D41A054C0B2 /* ToolTipMenuTests.xctest */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = wrapper.cfbundle; path = ToolTipMenuTests.xctest; sourceTree = "<group>"; };
 		849047C92702A32A008EE567 /* Handoff.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Handoff.swift; sourceTree = "<group>"; };
 		84E05A832721191B001A0D3A /* Settings.bundle */ = {isa = PBXFileReference; lastKnownFileType = "wrapper.plug-in"; path = Settings.bundle; sourceTree = "<group>"; };
@@ -250,11 +250,13 @@
 		90F86BC5194548CA87D729A9 /* libToolTipMenu.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libToolTipMenu.a; sourceTree = "<group>"; };
 		94565BFC6A0C4235B3EC7B01 /* libRNSVG.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNSVG.a; sourceTree = "<group>"; };
 		95208B2A05884A76B5BB99C0 /* libRCTGoogleAnalyticsBridge.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTGoogleAnalyticsBridge.a; sourceTree = "<group>"; };
+		98455D960744E4E5DD50BA87 /* libPods-WalletInformationAndMarketWidgetExtension.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-WalletInformationAndMarketWidgetExtension.a"; sourceTree = BUILT_PRODUCTS_DIR; };
+		9B3A324B70BC8C6D9314FD4F /* Pods-BlueWallet.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-BlueWallet.debug.xcconfig"; path = "Pods/Target Support Files/Pods-BlueWallet/Pods-BlueWallet.debug.xcconfig"; sourceTree = "<group>"; };
 		9DF4E6C040764E4BA1ACC1EB /* libTcpSockets.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libTcpSockets.a; sourceTree = "<group>"; };
 		9F1F51A83D044F3BB26A35FC /* libRNSVG-tvOS.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = "libRNSVG-tvOS.a"; sourceTree = "<group>"; };
-		A639BDDEB93B960FD70D90ED /* Pods-BlueWallet.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-BlueWallet.release.xcconfig"; path = "Target Support Files/Pods-BlueWallet/Pods-BlueWallet.release.xcconfig"; sourceTree = "<group>"; };
 		A7C4B1FDAD264618BAF8C335 /* libRNCWebView.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNCWebView.a; sourceTree = "<group>"; };
 		A9166D490AEF4938BD6621CF /* Feather.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Feather.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Feather.ttf"; sourceTree = "<group>"; };
+		AA7DCFB2C7887DF26EDB5710 /* Pods-WalletInformationAndMarketWidgetExtension.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-WalletInformationAndMarketWidgetExtension.debug.xcconfig"; path = "Pods/Target Support Files/Pods-WalletInformationAndMarketWidgetExtension/Pods-WalletInformationAndMarketWidgetExtension.debug.xcconfig"; sourceTree = "<group>"; };
 		AB2325650CE04F018697ACFE /* libRNReactNativeHapticFeedback.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNReactNativeHapticFeedback.a; sourceTree = "<group>"; };
 		B40D4E30225841EC00428FCC /* BlueWalletWatch.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = BlueWalletWatch.app; sourceTree = BUILT_PRODUCTS_DIR; };
 		B40D4E33225841EC00428FCC /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/Interface.storyboard; sourceTree = "<group>"; };
@@ -272,6 +274,7 @@
 		B40D4E5C2258425500428FCC /* WalletDetailsInterfaceController.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = WalletDetailsInterfaceController.swift; sourceTree = "<group>"; };
 		B40D4E672258426B00428FCC /* KeychainSwiftDistrib.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = KeychainSwiftDistrib.swift; sourceTree = SOURCE_ROOT; };
 		B40FC3F829CCD1AC0007EBAC /* SwiftTCPClient.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SwiftTCPClient.swift; sourceTree = "<group>"; };
+		B43B69B8225C462E00925B1E /* libPods-RCTLinking.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libPods-RCTLinking.a"; sourceTree = BUILT_PRODUCTS_DIR; };
 		B43B69BA225C46D800925B1E /* libRCTLinking.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libRCTLinking.a; sourceTree = BUILT_PRODUCTS_DIR; };
 		B43D0372225847C500FBAA95 /* WalletGradient.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = WalletGradient.swift; sourceTree = "<group>"; };
 		B43D0373225847C500FBAA95 /* WatchDataSource.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = WatchDataSource.swift; sourceTree = "<group>"; };
@@ -280,9 +283,9 @@
 		B43D0376225847C500FBAA95 /* Wallet.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = Wallet.swift; sourceTree = "<group>"; };
 		B43D0377225847C500FBAA95 /* WalletInformation.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = WalletInformation.swift; sourceTree = "<group>"; };
 		B43D046E22584C1B00FBAA95 /* libRNWatch.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libRNWatch.a; sourceTree = BUILT_PRODUCTS_DIR; };
+		B459EE96941AE09BCB547DC0 /* Pods-BlueWallet.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-BlueWallet.release.xcconfig"; path = "Pods/Target Support Files/Pods-BlueWallet/Pods-BlueWallet.release.xcconfig"; sourceTree = "<group>"; };
 		B461B850299599F800E431AA /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = BlueWallet/AppDelegate.h; sourceTree = "<group>"; };
 		B461B851299599F800E431AA /* AppDelegate.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; name = AppDelegate.mm; path = BlueWallet/AppDelegate.mm; sourceTree = "<group>"; };
-		B4AB225C2B02AD12001F4328 /* XMLParserDelegate.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = XMLParserDelegate.swift; sourceTree = "<group>"; };
 		B4D3235A177F4580BA52F2F9 /* libRNCSlider.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNCSlider.a; sourceTree = "<group>"; };
 		B642AFB13483418CAB6FF25E /* libRCTQRCodeLocalImage.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTQRCodeLocalImage.a; sourceTree = "<group>"; };
 		B9D9B3A7B2CB4255876B67AF /* libz.tbd */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = "sourcecode.text-based-dylib-definition"; name = libz.tbd; path = usr/lib/libz.tbd; sourceTree = SDKROOT; };
@@ -299,6 +302,7 @@
 		FC63C7054F1C4FDFB7A830E5 /* libRCTPrivacySnapshot.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRCTPrivacySnapshot.a; sourceTree = "<group>"; };
 		FC98DC24A81A463AB8B2E6B1 /* libRNImagePicker.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNImagePicker.a; sourceTree = "<group>"; };
 		FD7977067E1A496F94D8B1B7 /* libRNDeviceInfo.a */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = archive.ar; path = libRNDeviceInfo.a; sourceTree = "<group>"; };
+		FF45EB303C9601ED114589A4 /* Pods-MarketWidgetExtension.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-MarketWidgetExtension.release.xcconfig"; path = "Pods/Target Support Files/Pods-MarketWidgetExtension/Pods-MarketWidgetExtension.release.xcconfig"; sourceTree = "<group>"; };
 /* End PBXFileReference section */
 
 /* Begin PBXFrameworksBuildPhase section */
@@ -306,9 +310,9 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				906451CAD44154C2950030EC /* libPods-BlueWallet.a in Frameworks */,
 				782F075B5DD048449E2DECE9 /* libz.tbd in Frameworks */,
 				764B49B1420D4AEB8109BF62 /* libsqlite3.0.tbd in Frameworks */,
-				48A32941B8DE2D748C7E11DD /* libPods-BlueWallet.a in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -388,6 +392,7 @@
 			isa = PBXGroup;
 			children = (
 				B43B69BA225C46D800925B1E /* libRCTLinking.a */,
+				B43B69B8225C462E00925B1E /* libPods-RCTLinking.a */,
 				B43D046E22584C1B00FBAA95 /* libRNWatch.a */,
 				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
 				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
@@ -396,10 +401,12 @@
 				F6F53AFC25FB422485CB22D6 /* SystemConfiguration.framework */,
 				B9D9B3A7B2CB4255876B67AF /* libz.tbd */,
 				7B468CC34D5B41F3950078EF /* libsqlite3.0.tbd */,
+				731973BA0AC6EA78962CE5B6 /* libPods-BlueWallet.a */,
 				3271B0AA236E2E0700DA766F /* NotificationCenter.framework */,
 				6D333B3A252FE1A3004D72DF /* WidgetKit.framework */,
 				6D333B3C252FE1A3004D72DF /* SwiftUI.framework */,
-				4A3E9C4CEC73117170F55EC7 /* libPods-BlueWallet.a */,
+				98455D960744E4E5DD50BA87 /* libPods-WalletInformationAndMarketWidgetExtension.a */,
+				41BD3AC9FD81723B68A63C12 /* libPods-MarketWidgetExtension.a */,
 			);
 			name = Frameworks;
 			sourceTree = "<group>";
@@ -496,7 +503,6 @@
 		6DEB4BC1254FB98300E9F9AA /* Shared */ = {
 			isa = PBXGroup;
 			children = (
-				B4AB225C2B02AD12001F4328 /* XMLParserDelegate.swift */,
 				6D2AA8062568B8E50090B089 /* Fiat */,
 				6DEB4DD82552260200E9F9AA /* Views */,
 				6D9A2E6A254BAB1B007B5B82 /* WidgetAPI.swift */,
@@ -536,7 +542,7 @@
 				2D16E6871FA4F8E400B85C8A /* Frameworks */,
 				B40FE50A21FAD228005D5578 /* Recovered References */,
 				4B0CACE36C3348E1BCEA92C8 /* Resources */,
-				FAA856B639C61E61D2CF90A8 /* Pods */,
+				A9B365F08E5E8EADC056DBC4 /* Pods */,
 			);
 			indentWidth = 2;
 			sourceTree = "<group>";
@@ -555,6 +561,19 @@
 			name = Products;
 			sourceTree = "<group>";
 		};
+		A9B365F08E5E8EADC056DBC4 /* Pods */ = {
+			isa = PBXGroup;
+			children = (
+				9B3A324B70BC8C6D9314FD4F /* Pods-BlueWallet.debug.xcconfig */,
+				B459EE96941AE09BCB547DC0 /* Pods-BlueWallet.release.xcconfig */,
+				367FA8CEB35BC9431019D98A /* Pods-MarketWidgetExtension.debug.xcconfig */,
+				FF45EB303C9601ED114589A4 /* Pods-MarketWidgetExtension.release.xcconfig */,
+				AA7DCFB2C7887DF26EDB5710 /* Pods-WalletInformationAndMarketWidgetExtension.debug.xcconfig */,
+				7BAA8F97E61B677D33CF1944 /* Pods-WalletInformationAndMarketWidgetExtension.release.xcconfig */,
+			);
+			name = Pods;
+			sourceTree = "<group>";
+		};
 		B40D4E31225841EC00428FCC /* BlueWalletWatch */ = {
 			isa = PBXGroup;
 			children = (
@@ -632,15 +651,6 @@
 			path = Objects;
 			sourceTree = "<group>";
 		};
-		FAA856B639C61E61D2CF90A8 /* Pods */ = {
-			isa = PBXGroup;
-			children = (
-				3EEFFAD884BC44F977DD1897 /* Pods-BlueWallet.debug.xcconfig */,
-				A639BDDEB93B960FD70D90ED /* Pods-BlueWallet.release.xcconfig */,
-			);
-			path = Pods;
-			sourceTree = "<group>";
-		};
 /* End PBXGroup section */
 
 /* Begin PBXNativeTarget section */
@@ -648,17 +658,17 @@
 			isa = PBXNativeTarget;
 			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "BlueWallet" */;
 			buildPhases = (
-				E0B556C9C2731941C9CA8065 /* [CP] Check Pods Manifest.lock */,
+				6F7747C31A9EE6DDC5108476 /* [CP] Check Pods Manifest.lock */,
 				13B07F871A680F5B00A75B9A /* Sources */,
 				13B07F8C1A680F5B00A75B9A /* Frameworks */,
 				13B07F8E1A680F5B00A75B9A /* Resources */,
 				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
 				B40D4E2D225841C300428FCC /* Embed Watch Content */,
 				3271B0B6236E2E0700DA766F /* Embed App Extensions */,
+				C18D00A61007A84C9887DEDE /* [CP] Copy Pods Resources */,
+				68CD4C52AC5B27E333599B5C /* [CP] Embed Pods Frameworks */,
 				A8D9893AE3CD454A9094B651 /* Upload source maps to Bugsnag */,
 				4B36CFF6FE55027DCA5CB6E1 /* Upload Bugsnag dSYM */,
-				46B7D8CC74B7ABEC4A2211C5 /* [CP] Embed Pods Frameworks */,
-				127427223F7A1197C57EC7F4 /* [CP] Copy Pods Resources */,
 			);
 			buildRules = (
 			);
@@ -896,63 +906,28 @@
 			shellPath = /bin/sh;
 			shellScript = "export EXTRA_PACKAGER_ARGS=\"--sourcemap-output $TMPDIR/$(md5 -qs \"$CONFIGURATION_BUILD_DIR\")-main.jsbundle.map\"\nexport NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n";
 		};
-		127427223F7A1197C57EC7F4 /* [CP] Copy Pods Resources */ = {
+		4B36CFF6FE55027DCA5CB6E1 /* Upload Bugsnag dSYM */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
+			inputFileListPaths = (
+			);
 			inputPaths = (
-				"${PODS_ROOT}/Target Support Files/Pods-BlueWallet/Pods-BlueWallet-resources.sh",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome6_Brands.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome6_Regular.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome6_Solid.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
-				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
-				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
+				"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}",
+				"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${TARGET_NAME}",
+			);
+			name = "Upload Bugsnag dSYM";
+			outputFileListPaths = (
 			);
-			name = "[CP] Copy Pods Resources";
 			outputPaths = (
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome6_Brands.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome6_Regular.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome6_Solid.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
-				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-BlueWallet/Pods-BlueWallet-resources.sh\"\n";
+			shellPath = "/usr/bin/env ruby";
+			shellScript = "api_key = nil # Insert your key here to use it directly from this script\n\n# Attempt to get the API key from an environment variable\nunless api_key\n  api_key = ENV[\"BUGSNAG_API_KEY\"]\n\n  # If not present, attempt to lookup the value from the Info.plist\n  unless api_key\n    info_plist_path = \"#{ENV[\"BUILT_PRODUCTS_DIR\"]}/#{ENV[\"INFOPLIST_PATH\"]}\"\n    plist_buddy_response = `/usr/libexec/PlistBuddy -c \"print :bugsnag:apiKey\" \"#{info_plist_path}\"`\n    plist_buddy_response = `/usr/libexec/PlistBuddy -c \"print :BugsnagAPIKey\" \"#{info_plist_path}\"` if !$?.success?\n    api_key = plist_buddy_response if $?.success?\n  end\nend\n\nfail(\"No Bugsnag API key detected - add your key to your Info.plist, BUGSNAG_API_KEY environment variable or this Run Script phase\") unless api_key\n\nfork do\n  Process.setsid\n  STDIN.reopen(\"/dev/null\")\n  STDOUT.reopen(\"/dev/null\", \"a\")\n  STDERR.reopen(\"/dev/null\", \"a\")\n\n  require 'shellwords'\n\n  Dir[\"#{ENV[\"DWARF_DSYM_FOLDER_PATH\"]}/*/Contents/Resources/DWARF/*\"].each do |dsym|\n    curl_command = \"curl --http1.1 -F dsym=@#{Shellwords.escape(dsym)} -F projectRoot=#{Shellwords.escape(ENV[\"PROJECT_DIR\"])} \"\n    curl_command += \"-F apiKey=#{Shellwords.escape(api_key)} \"\n    curl_command += \"https://upload.bugsnag.com/\"\n    system(curl_command)\n  end\nend\n";
 			showEnvVarsInLog = 0;
 		};
-		46B7D8CC74B7ABEC4A2211C5 /* [CP] Embed Pods Frameworks */ = {
+		68CD4C52AC5B27E333599B5C /* [CP] Embed Pods Frameworks */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -972,7 +947,7 @@
 			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-BlueWallet/Pods-BlueWallet-frameworks.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
-		4B36CFF6FE55027DCA5CB6E1 /* Upload Bugsnag dSYM */ = {
+		6F7747C31A9EE6DDC5108476 /* [CP] Check Pods Manifest.lock */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -980,17 +955,18 @@
 			inputFileListPaths = (
 			);
 			inputPaths = (
-				"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}",
-				"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${TARGET_NAME}",
+				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
+				"${PODS_ROOT}/Manifest.lock",
 			);
-			name = "Upload Bugsnag dSYM";
+			name = "[CP] Check Pods Manifest.lock";
 			outputFileListPaths = (
 			);
 			outputPaths = (
+				"$(DERIVED_FILE_DIR)/Pods-BlueWallet-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = "/usr/bin/env ruby";
-			shellScript = "api_key = nil # Insert your key here to use it directly from this script\n\n# Attempt to get the API key from an environment variable\nunless api_key\n  api_key = ENV[\"BUGSNAG_API_KEY\"]\n\n  # If not present, attempt to lookup the value from the Info.plist\n  unless api_key\n    info_plist_path = \"#{ENV[\"BUILT_PRODUCTS_DIR\"]}/#{ENV[\"INFOPLIST_PATH\"]}\"\n    plist_buddy_response = `/usr/libexec/PlistBuddy -c \"print :bugsnag:apiKey\" \"#{info_plist_path}\"`\n    plist_buddy_response = `/usr/libexec/PlistBuddy -c \"print :BugsnagAPIKey\" \"#{info_plist_path}\"` if !$?.success?\n    api_key = plist_buddy_response if $?.success?\n  end\nend\n\nfail(\"No Bugsnag API key detected - add your key to your Info.plist, BUGSNAG_API_KEY environment variable or this Run Script phase\") unless api_key\n\nfork do\n  Process.setsid\n  STDIN.reopen(\"/dev/null\")\n  STDOUT.reopen(\"/dev/null\", \"a\")\n  STDERR.reopen(\"/dev/null\", \"a\")\n\n  require 'shellwords'\n\n  Dir[\"#{ENV[\"DWARF_DSYM_FOLDER_PATH\"]}/*/Contents/Resources/DWARF/*\"].each do |dsym|\n    curl_command = \"curl --http1.1 -F dsym=@#{Shellwords.escape(dsym)} -F projectRoot=#{Shellwords.escape(ENV[\"PROJECT_DIR\"])} \"\n    curl_command += \"-F apiKey=#{Shellwords.escape(api_key)} \"\n    curl_command += \"https://upload.bugsnag.com/\"\n    system(curl_command)\n  end\nend\n";
+			shellPath = /bin/sh;
+			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
 			showEnvVarsInLog = 0;
 		};
 		A8D9893AE3CD454A9094B651 /* Upload source maps to Bugsnag */ = {
@@ -1007,28 +983,63 @@
 			shellPath = /bin/sh;
 			shellScript = "SOURCE_MAP=\"$TMPDIR/$(md5 -qs \"$CONFIGURATION_BUILD_DIR\")-main.jsbundle.map\" ../node_modules/@bugsnag/react-native/bugsnag-react-native-xcode.sh";
 		};
-		CF0725821442A3000F20E874 /* Upload Bugsnag dSYM */ = {
+		C18D00A61007A84C9887DEDE /* [CP] Copy Pods Resources */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
 			);
-			inputFileListPaths = (
-			);
 			inputPaths = (
-				"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}",
-				"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${TARGET_NAME}",
-			);
-			name = "Upload Bugsnag dSYM";
-			outputFileListPaths = (
+				"${PODS_ROOT}/Target Support Files/Pods-BlueWallet/Pods-BlueWallet-resources.sh",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome6_Brands.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome6_Regular.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome6_Solid.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
+				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
+				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
 			);
+			name = "[CP] Copy Pods Resources";
 			outputPaths = (
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome6_Brands.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome6_Regular.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome6_Solid.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
+				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = "/usr/bin/env ruby";
-			shellScript = "api_key = nil # Insert your key here to use it directly from this script\n\n# Attempt to get the API key from an environment variable\nunless api_key\n  api_key = ENV[\"BUGSNAG_API_KEY\"]\n\n  # If not present, attempt to lookup the value from the Info.plist\n  unless api_key\n    info_plist_path = \"#{ENV[\"BUILT_PRODUCTS_DIR\"]}/#{ENV[\"INFOPLIST_PATH\"]}\"\n    plist_buddy_response = `/usr/libexec/PlistBuddy -c \"print :bugsnag:apiKey\" \"#{info_plist_path}\"`\n    plist_buddy_response = `/usr/libexec/PlistBuddy -c \"print :BugsnagAPIKey\" \"#{info_plist_path}\"` if !$?.success?\n    api_key = plist_buddy_response if $?.success?\n  end\nend\n\nfail(\"No Bugsnag API key detected - add your key to your Info.plist, BUGSNAG_API_KEY environment variable or this Run Script phase\") unless api_key\n\nfork do\n  Process.setsid\n  STDIN.reopen(\"/dev/null\")\n  STDOUT.reopen(\"/dev/null\", \"a\")\n  STDERR.reopen(\"/dev/null\", \"a\")\n\n  require 'shellwords'\n\n  Dir[\"#{ENV[\"DWARF_DSYM_FOLDER_PATH\"]}/*/Contents/Resources/DWARF/*\"].each do |dsym|\n    curl_command = \"curl --http1.1 -F dsym=@#{Shellwords.escape(dsym)} -F projectRoot=#{Shellwords.escape(ENV[\"PROJECT_DIR\"])} \"\n    curl_command += \"-F apiKey=#{Shellwords.escape(api_key)} \"\n    curl_command += \"https://upload.bugsnag.com/\"\n    system(curl_command)\n  end\nend\n";
+			shellPath = /bin/sh;
+			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-BlueWallet/Pods-BlueWallet-resources.sh\"\n";
 			showEnvVarsInLog = 0;
 		};
-		E0B556C9C2731941C9CA8065 /* [CP] Check Pods Manifest.lock */ = {
+		CF0725821442A3000F20E874 /* Upload Bugsnag dSYM */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -1036,18 +1047,17 @@
 			inputFileListPaths = (
 			);
 			inputPaths = (
-				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
-				"${PODS_ROOT}/Manifest.lock",
+				"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}",
+				"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${TARGET_NAME}",
 			);
-			name = "[CP] Check Pods Manifest.lock";
+			name = "Upload Bugsnag dSYM";
 			outputFileListPaths = (
 			);
 			outputPaths = (
-				"$(DERIVED_FILE_DIR)/Pods-BlueWallet-checkManifestLockResult.txt",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
+			shellPath = "/usr/bin/env ruby";
+			shellScript = "api_key = nil # Insert your key here to use it directly from this script\n\n# Attempt to get the API key from an environment variable\nunless api_key\n  api_key = ENV[\"BUGSNAG_API_KEY\"]\n\n  # If not present, attempt to lookup the value from the Info.plist\n  unless api_key\n    info_plist_path = \"#{ENV[\"BUILT_PRODUCTS_DIR\"]}/#{ENV[\"INFOPLIST_PATH\"]}\"\n    plist_buddy_response = `/usr/libexec/PlistBuddy -c \"print :bugsnag:apiKey\" \"#{info_plist_path}\"`\n    plist_buddy_response = `/usr/libexec/PlistBuddy -c \"print :BugsnagAPIKey\" \"#{info_plist_path}\"` if !$?.success?\n    api_key = plist_buddy_response if $?.success?\n  end\nend\n\nfail(\"No Bugsnag API key detected - add your key to your Info.plist, BUGSNAG_API_KEY environment variable or this Run Script phase\") unless api_key\n\nfork do\n  Process.setsid\n  STDIN.reopen(\"/dev/null\")\n  STDOUT.reopen(\"/dev/null\", \"a\")\n  STDERR.reopen(\"/dev/null\", \"a\")\n\n  require 'shellwords'\n\n  Dir[\"#{ENV[\"DWARF_DSYM_FOLDER_PATH\"]}/*/Contents/Resources/DWARF/*\"].each do |dsym|\n    curl_command = \"curl --http1.1 -F dsym=@#{Shellwords.escape(dsym)} -F projectRoot=#{Shellwords.escape(ENV[\"PROJECT_DIR\"])} \"\n    curl_command += \"-F apiKey=#{Shellwords.escape(api_key)} \"\n    curl_command += \"https://upload.bugsnag.com/\"\n    system(curl_command)\n  end\nend\n";
 			showEnvVarsInLog = 0;
 		};
 /* End PBXShellScriptBuildPhase section */
@@ -1079,7 +1089,6 @@
 				6DD410BB266CAF5C0087DE03 /* MarketView.swift in Sources */,
 				6DD410B5266CAF5C0087DE03 /* WidgetDataStore.swift in Sources */,
 				6DD410C0266CB1460087DE03 /* MarketWidget.swift in Sources */,
-				B4AB225E2B02AD12001F4328 /* XMLParserDelegate.swift in Sources */,
 				6DD410BA266CAF5C0087DE03 /* FiatUnit.swift in Sources */,
 				6DD410AF266CAF5C0087DE03 /* WalletInformationAndMarketWidget.swift in Sources */,
 				6DD410BF266CB13D0087DE03 /* Models.swift in Sources */,
@@ -1115,7 +1124,6 @@
 				B40D4E632258425500428FCC /* ReceiveInterfaceController.swift in Sources */,
 				B43D0378225847C500FBAA95 /* WalletGradient.swift in Sources */,
 				6D4AF18425D215D1009DD853 /* UserDefaultsExtension.swift in Sources */,
-				B4AB225D2B02AD12001F4328 /* XMLParserDelegate.swift in Sources */,
 				B40D4E5E2258425500428FCC /* NumericKeypadInterfaceController.swift in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -1187,7 +1195,7 @@
 /* Begin XCBuildConfiguration section */
 		13B07F941A680F5B00A75B9A /* Debug */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = 3EEFFAD884BC44F977DD1897 /* Pods-BlueWallet.debug.xcconfig */;
+			baseConfigurationReference = 9B3A324B70BC8C6D9314FD4F /* Pods-BlueWallet.debug.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CLANG_ENABLE_MODULES = YES;
@@ -1227,8 +1235,7 @@
 				PRODUCT_BUNDLE_IDENTIFIER = io.bluewallet.bluewallet;
 				PRODUCT_NAME = BlueWallet;
 				PROVISIONING_PROFILE_SPECIFIER = "";
-				SUPPORTED_PLATFORMS = "iphoneos iphonesimulator";
-				SUPPORTS_MACCATALYST = NO;
+				SUPPORTS_MACCATALYST = "$(OVERRIDE_SUPPORTS_MACCATALYST:default=YES)";
 				SWIFT_OBJC_BRIDGING_HEADER = "BlueWallet-Bridging-Header.h";
 				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
 				SWIFT_VERSION = 4.2;
@@ -1239,7 +1246,7 @@
 		};
 		13B07F951A680F5B00A75B9A /* Release */ = {
 			isa = XCBuildConfiguration;
-			baseConfigurationReference = A639BDDEB93B960FD70D90ED /* Pods-BlueWallet.release.xcconfig */;
+			baseConfigurationReference = B459EE96941AE09BCB547DC0 /* Pods-BlueWallet.release.xcconfig */;
 			buildSettings = {
 				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
 				CLANG_ENABLE_MODULES = YES;
@@ -1274,8 +1281,9 @@
 				PRESERVE_DEAD_CODE_INITS_AND_TERMS = YES;
 				PRODUCT_BUNDLE_IDENTIFIER = io.bluewallet.bluewallet;
 				PRODUCT_NAME = BlueWallet;
-				SUPPORTED_PLATFORMS = "iphoneos iphonesimulator";
-				SUPPORTS_MACCATALYST = NO;
+				PROVISIONING_PROFILE_SPECIFIER = "";
+				"PROVISIONING_PROFILE_SPECIFIER[sdk=macosx*]" = "";
+				SUPPORTS_MACCATALYST = "$(OVERRIDE_SUPPORTS_MACCATALYST:default=YES)";
 				SWIFT_OBJC_BRIDGING_HEADER = "BlueWallet-Bridging-Header.h";
 				SWIFT_VERSION = 4.2;
 				TARGETED_DEVICE_FAMILY = "1,2";
diff --git a/ios/BlueWallet.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved b/ios/BlueWallet.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved
deleted file mode 100644
index f95d1c16..00000000
--- a/ios/BlueWallet.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved
+++ /dev/null
@@ -1,23 +0,0 @@
-{
-  "pins" : [
-    {
-      "identity" : "efqrcode",
-      "kind" : "remoteSourceControl",
-      "location" : "https://github.com/EFPrefix/EFQRCode.git",
-      "state" : {
-        "revision" : "2991c2f318ad9529d93b2a73a382a3f9c72c64ce",
-        "version" : "6.2.2"
-      }
-    },
-    {
-      "identity" : "swift_qrcodejs",
-      "kind" : "remoteSourceControl",
-      "location" : "https://github.com/ApolloZhu/swift_qrcodejs.git",
-      "state" : {
-        "revision" : "374dc7f7b9e76c6aeb393f6a84590c6d387e1ecb",
-        "version" : "2.2.2"
-      }
-    }
-  ],
-  "version" : 2
-}
diff --git a/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWalletWatch (Complication).xcscheme b/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWallet-tvOS.xcscheme
similarity index 51%
rename from ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWalletWatch (Complication).xcscheme
rename to ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWallet-tvOS.xcscheme
index a6d651dc..147e3b95 100644
--- a/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWalletWatch (Complication).xcscheme	
+++ b/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWallet-tvOS.xcscheme
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Scheme
-   LastUpgradeVersion = "1500"
-   version = "2.0">
+   LastUpgradeVersion = "1020"
+   version = "1.3">
    <BuildAction
-      parallelizeBuildables = "YES"
+      parallelizeBuildables = "NO"
       buildImplicitDependencies = "YES">
       <BuildActionEntries>
          <BuildActionEntry
@@ -14,10 +14,10 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "B40D4E2F225841EC00428FCC"
-               BuildableName = "BlueWalletWatch.app"
-               BlueprintName = "BlueWalletWatch"
-               ReferencedContainer = "container:BlueWallet.xcodeproj">
+               BlueprintIdentifier = "2D2A28121D9B038B00D4039D"
+               BuildableName = "libReact.a"
+               BlueprintName = "React-tvOS"
+               ReferencedContainer = "container:../node_modules/react-native/React/React.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
          <BuildActionEntry
@@ -28,9 +28,23 @@
             buildForAnalyzing = "YES">
             <BuildableReference
                BuildableIdentifier = "primary"
-               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-               BuildableName = "BlueWallet.app"
-               BlueprintName = "BlueWallet"
+               BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+               BuildableName = "BlueWallet-tvOS.app"
+               BlueprintName = "BlueWallet-tvOS"
+               ReferencedContainer = "container:BlueWallet.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "NO"
+            buildForArchiving = "NO"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
+               BuildableName = "BlueWallet-tvOSTests.xctest"
+               BlueprintName = "BlueWallet-tvOSTests"
                ReferencedContainer = "container:BlueWallet.xcodeproj">
             </BuildableReference>
          </BuildActionEntry>
@@ -40,8 +54,30 @@
       buildConfiguration = "Debug"
       selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
       selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      shouldAutocreateTestPlan = "YES">
+      shouldUseLaunchSchemeArgsEnv = "YES">
+      <Testables>
+         <TestableReference
+            skipped = "NO">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "2D02E48F1E0B4A5D006451C7"
+               BuildableName = "BlueWallet-tvOSTests.xctest"
+               BlueprintName = "BlueWallet-tvOSTests"
+               ReferencedContainer = "container:BlueWallet.xcodeproj">
+            </BuildableReference>
+         </TestableReference>
+      </Testables>
+      <MacroExpansion>
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "BlueWallet-tvOS.app"
+            BlueprintName = "BlueWallet-tvOS"
+            ReferencedContainer = "container:BlueWallet.xcodeproj">
+         </BuildableReference>
+      </MacroExpansion>
+      <AdditionalOptions>
+      </AdditionalOptions>
    </TestAction>
    <LaunchAction
       buildConfiguration = "Debug"
@@ -52,33 +88,33 @@
       ignoresPersistentStateOnLaunch = "NO"
       debugDocumentVersioning = "YES"
       debugServiceExtension = "internal"
-      allowLocationSimulation = "YES"
-      launchAutomaticallySubstyle = "32">
+      allowLocationSimulation = "YES">
       <BuildableProductRunnable
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "B40D4E2F225841EC00428FCC"
-            BuildableName = "BlueWalletWatch.app"
-            BlueprintName = "BlueWalletWatch"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "BlueWallet-tvOS.app"
+            BlueprintName = "BlueWallet-tvOS"
             ReferencedContainer = "container:BlueWallet.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
+      <AdditionalOptions>
+      </AdditionalOptions>
    </LaunchAction>
    <ProfileAction
       buildConfiguration = "Release"
       shouldUseLaunchSchemeArgsEnv = "YES"
       savedToolIdentifier = ""
       useCustomWorkingDirectory = "NO"
-      debugDocumentVersioning = "YES"
-      launchAutomaticallySubstyle = "32">
+      debugDocumentVersioning = "YES">
       <BuildableProductRunnable
          runnableDebuggingMode = "0">
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "B40D4E2F225841EC00428FCC"
-            BuildableName = "BlueWalletWatch.app"
-            BlueprintName = "BlueWalletWatch"
+            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
+            BuildableName = "BlueWallet-tvOS.app"
+            BlueprintName = "BlueWallet-tvOS"
             ReferencedContainer = "container:BlueWallet.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
diff --git a/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWallet.xcscheme b/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWallet.xcscheme
index 26159c33..ea2ea41c 100644
--- a/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWallet.xcscheme
+++ b/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWallet.xcscheme
@@ -5,6 +5,22 @@
    <BuildAction
       parallelizeBuildables = "YES"
       buildImplicitDependencies = "YES">
+      <BuildActionEntries>
+         <BuildActionEntry
+            buildForTesting = "YES"
+            buildForRunning = "YES"
+            buildForProfiling = "YES"
+            buildForArchiving = "YES"
+            buildForAnalyzing = "YES">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+               BuildableName = "BlueWallet.app"
+               BlueprintName = "BlueWallet"
+               ReferencedContainer = "container:BlueWallet.xcodeproj">
+            </BuildableReference>
+         </BuildActionEntry>
+      </BuildActionEntries>
    </BuildAction>
    <TestAction
       buildConfiguration = "Debug"
@@ -14,13 +30,23 @@
       <MacroExpansion>
          <BuildableReference
             BuildableIdentifier = "primary"
-            BlueprintIdentifier = "2D02E47A1E0B4A5D006451C7"
-            BuildableName = "BlueWallet-tvOS.app"
-            BlueprintName = "BlueWallet-tvOS"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "BlueWallet.app"
+            BlueprintName = "BlueWallet"
             ReferencedContainer = "container:BlueWallet.xcodeproj">
          </BuildableReference>
       </MacroExpansion>
       <Testables>
+         <TestableReference
+            skipped = "NO">
+            <BuildableReference
+               BuildableIdentifier = "primary"
+               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
+               BuildableName = "BlueWalletTests.xctest"
+               BlueprintName = "BlueWalletTests"
+               ReferencedContainer = "container:BlueWallet.xcodeproj">
+            </BuildableReference>
+         </TestableReference>
       </Testables>
    </TestAction>
    <LaunchAction
@@ -43,6 +69,13 @@
             ReferencedContainer = "container:BlueWallet.xcodeproj">
          </BuildableReference>
       </BuildableProductRunnable>
+      <EnvironmentVariables>
+         <EnvironmentVariable
+            key = "_XCWidgetKind"
+            value = "PriceWidget"
+            isEnabled = "YES">
+         </EnvironmentVariable>
+      </EnvironmentVariables>
    </LaunchAction>
    <ProfileAction
       buildConfiguration = "Release"
@@ -50,6 +83,16 @@
       savedToolIdentifier = ""
       useCustomWorkingDirectory = "NO"
       debugDocumentVersioning = "YES">
+      <BuildableProductRunnable
+         runnableDebuggingMode = "0">
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
+            BuildableName = "BlueWallet.app"
+            BlueprintName = "BlueWallet"
+            ReferencedContainer = "container:BlueWallet.xcodeproj">
+         </BuildableReference>
+      </BuildableProductRunnable>
    </ProfileAction>
    <AnalyzeAction
       buildConfiguration = "Debug">
diff --git a/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWalletWatch (Notification).xcscheme b/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWalletWatch (Notification).xcscheme
index 4bde398d..ce67c26c 100644
--- a/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWalletWatch (Notification).xcscheme	
+++ b/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWalletWatch (Notification).xcscheme	
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Scheme
-   LastUpgradeVersion = "1500"
+   LastUpgradeVersion = "1020"
    version = "2.0">
    <BuildAction
       parallelizeBuildables = "YES"
@@ -40,8 +40,18 @@
       buildConfiguration = "Debug"
       selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
       selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      shouldAutocreateTestPlan = "YES">
+      shouldUseLaunchSchemeArgsEnv = "YES">
+      <MacroExpansion>
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "B40D4E2F225841EC00428FCC"
+            BuildableName = "BlueWalletWatch.app"
+            BlueprintName = "BlueWalletWatch"
+            ReferencedContainer = "container:BlueWallet.xcodeproj">
+         </BuildableReference>
+      </MacroExpansion>
+      <Testables>
+      </Testables>
    </TestAction>
    <LaunchAction
       buildConfiguration = "Debug"
diff --git a/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWalletWatch.xcscheme b/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWalletWatch.xcscheme
index 50921955..772e95fd 100644
--- a/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWalletWatch.xcscheme
+++ b/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/BlueWalletWatch.xcscheme
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Scheme
-   LastUpgradeVersion = "1500"
-   version = "1.7">
+   LastUpgradeVersion = "1020"
+   version = "1.3">
    <BuildAction
       parallelizeBuildables = "YES"
       buildImplicitDependencies = "YES">
@@ -40,8 +40,18 @@
       buildConfiguration = "Debug"
       selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
       selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      shouldAutocreateTestPlan = "YES">
+      shouldUseLaunchSchemeArgsEnv = "YES">
+      <MacroExpansion>
+         <BuildableReference
+            BuildableIdentifier = "primary"
+            BlueprintIdentifier = "B40D4E2F225841EC00428FCC"
+            BuildableName = "BlueWalletWatch.app"
+            BlueprintName = "BlueWalletWatch"
+            ReferencedContainer = "container:BlueWallet.xcodeproj">
+         </BuildableReference>
+      </MacroExpansion>
+      <Testables>
+      </Testables>
    </TestAction>
    <LaunchAction
       buildConfiguration = "Debug"
@@ -70,8 +80,7 @@
       shouldUseLaunchSchemeArgsEnv = "YES"
       savedToolIdentifier = ""
       useCustomWorkingDirectory = "NO"
-      debugDocumentVersioning = "YES"
-      notificationPayloadFile = "BlueWalletWatch Extension/PushNotificationPayload.apns">
+      debugDocumentVersioning = "YES">
       <BuildableProductRunnable
          runnableDebuggingMode = "0">
          <BuildableReference
diff --git a/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/Stickers.xcscheme b/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/Stickers.xcscheme
index a7a54fdd..7646ef3c 100644
--- a/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/Stickers.xcscheme
+++ b/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/Stickers.xcscheme
@@ -1,6 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Scheme
-   LastUpgradeVersion = "1500"
+   LastUpgradeVersion = "1240"
+   wasCreatedForAppExtension = "YES"
    version = "2.0">
    <BuildAction
       parallelizeBuildables = "YES"
@@ -40,8 +41,9 @@
       buildConfiguration = "Debug"
       selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
       selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      shouldAutocreateTestPlan = "YES">
+      shouldUseLaunchSchemeArgsEnv = "YES">
+      <Testables>
+      </Testables>
    </TestAction>
    <LaunchAction
       buildConfiguration = "Debug"
@@ -72,7 +74,6 @@
       savedToolIdentifier = ""
       useCustomWorkingDirectory = "NO"
       debugDocumentVersioning = "YES"
-      askForAppToLaunch = "Yes"
       launchAutomaticallySubstyle = "2">
       <BuildableProductRunnable
          runnableDebuggingMode = "0">
diff --git a/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/WidgetsExtension.xcscheme b/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/WidgetsExtension.xcscheme
deleted file mode 100644
index 7488434f..00000000
--- a/ios/BlueWallet.xcodeproj/xcshareddata/xcschemes/WidgetsExtension.xcscheme
+++ /dev/null
@@ -1,113 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<Scheme
-   LastUpgradeVersion = "1500"
-   wasCreatedForAppExtension = "YES"
-   version = "2.0">
-   <BuildAction
-      parallelizeBuildables = "YES"
-      buildImplicitDependencies = "YES">
-      <BuildActionEntries>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "YES"
-            buildForArchiving = "YES"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "6DD4109B266CADF10087DE03"
-               BuildableName = "WidgetsExtension.appex"
-               BlueprintName = "WidgetsExtension"
-               ReferencedContainer = "container:BlueWallet.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-         <BuildActionEntry
-            buildForTesting = "YES"
-            buildForRunning = "YES"
-            buildForProfiling = "YES"
-            buildForArchiving = "YES"
-            buildForAnalyzing = "YES">
-            <BuildableReference
-               BuildableIdentifier = "primary"
-               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-               BuildableName = "BlueWallet.app"
-               BlueprintName = "BlueWallet"
-               ReferencedContainer = "container:BlueWallet.xcodeproj">
-            </BuildableReference>
-         </BuildActionEntry>
-      </BuildActionEntries>
-   </BuildAction>
-   <TestAction
-      buildConfiguration = "Debug"
-      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
-      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      shouldAutocreateTestPlan = "YES">
-   </TestAction>
-   <LaunchAction
-      buildConfiguration = "Debug"
-      selectedDebuggerIdentifier = ""
-      selectedLauncherIdentifier = "Xcode.IDEFoundation.Launcher.PosixSpawn"
-      launchStyle = "0"
-      askForAppToLaunch = "Yes"
-      useCustomWorkingDirectory = "NO"
-      ignoresPersistentStateOnLaunch = "NO"
-      debugDocumentVersioning = "YES"
-      debugServiceExtension = "internal"
-      allowLocationSimulation = "YES"
-      launchAutomaticallySubstyle = "2">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "BlueWallet.app"
-            BlueprintName = "BlueWallet"
-            ReferencedContainer = "container:BlueWallet.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-      <EnvironmentVariables>
-         <EnvironmentVariable
-            key = "_XCWidgetKind"
-            value = ""
-            isEnabled = "YES">
-         </EnvironmentVariable>
-         <EnvironmentVariable
-            key = "_XCWidgetDefaultView"
-            value = "timeline"
-            isEnabled = "YES">
-         </EnvironmentVariable>
-         <EnvironmentVariable
-            key = "_XCWidgetFamily"
-            value = "systemMedium"
-            isEnabled = "YES">
-         </EnvironmentVariable>
-      </EnvironmentVariables>
-   </LaunchAction>
-   <ProfileAction
-      buildConfiguration = "Release"
-      shouldUseLaunchSchemeArgsEnv = "YES"
-      savedToolIdentifier = ""
-      useCustomWorkingDirectory = "NO"
-      debugDocumentVersioning = "YES"
-      askForAppToLaunch = "Yes"
-      launchAutomaticallySubstyle = "2">
-      <BuildableProductRunnable
-         runnableDebuggingMode = "0">
-         <BuildableReference
-            BuildableIdentifier = "primary"
-            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
-            BuildableName = "BlueWallet.app"
-            BlueprintName = "BlueWallet"
-            ReferencedContainer = "container:BlueWallet.xcodeproj">
-         </BuildableReference>
-      </BuildableProductRunnable>
-   </ProfileAction>
-   <AnalyzeAction
-      buildConfiguration = "Debug">
-   </AnalyzeAction>
-   <ArchiveAction
-      buildConfiguration = "Release"
-      revealArchiveInOrganizer = "YES">
-   </ArchiveAction>
-</Scheme>
diff --git a/ios/BlueWallet.xcodeproj/xcuserdata/marcosrodriguez.xcuserdatad/xcschemes/xcschememanagement.plist b/ios/BlueWallet.xcodeproj/xcuserdata/marcosrodriguez.xcuserdatad/xcschemes/xcschememanagement.plist
index 543a8074..063d2471 100644
--- a/ios/BlueWallet.xcodeproj/xcuserdata/marcosrodriguez.xcuserdatad/xcschemes/xcschememanagement.plist
+++ b/ios/BlueWallet.xcodeproj/xcuserdata/marcosrodriguez.xcuserdatad/xcschemes/xcschememanagement.plist
@@ -14,15 +14,15 @@
 			<key>orderHint</key>
 			<integer>71</integer>
 		</dict>
-		<key>BlueWallet.xcscheme_^#shared#^_</key>
+		<key>BlueWallet-tvOS.xcscheme_^#shared#^_</key>
 		<dict>
 			<key>orderHint</key>
 			<integer>0</integer>
 		</dict>
-		<key>BlueWalletWatch (Complication).xcscheme_^#shared#^_</key>
+		<key>BlueWallet.xcscheme_^#shared#^_</key>
 		<dict>
 			<key>orderHint</key>
-			<integer>5</integer>
+			<integer>1</integer>
 		</dict>
 		<key>BlueWalletWatch (Glance).xcscheme_^#shared#^_</key>
 		<dict>
@@ -32,22 +32,22 @@
 		<key>BlueWalletWatch (Notification).xcscheme_^#shared#^_</key>
 		<dict>
 			<key>orderHint</key>
-			<integer>4</integer>
+			<integer>3</integer>
 		</dict>
 		<key>BlueWalletWatch.xcscheme_^#shared#^_</key>
 		<dict>
 			<key>orderHint</key>
-			<integer>3</integer>
+			<integer>2</integer>
 		</dict>
 		<key>Stickers.xcscheme_^#shared#^_</key>
 		<dict>
 			<key>orderHint</key>
-			<integer>1</integer>
+			<integer>4</integer>
 		</dict>
 		<key>WidgetsExtension.xcscheme_^#shared#^_</key>
 		<dict>
 			<key>orderHint</key>
-			<integer>2</integer>
+			<integer>129</integer>
 		</dict>
 	</dict>
 	<key>SuppressBuildableAutocreation</key>
diff --git a/ios/BlueWallet/Info.plist b/ios/BlueWallet/Info.plist
index 4e5cf2ec..f251a1a9 100644
--- a/ios/BlueWallet/Info.plist
+++ b/ios/BlueWallet/Info.plist
@@ -2,10 +2,6 @@
 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 <plist version="1.0">
 <dict>
-	<key>BGTaskSchedulerPermittedIdentifiers</key>
-	<array>
-		<string>io.bluewallet.bluewallet.fetchTxsForWallet</string>
-	</array>
 	<key>CADisableMinimumFrameDurationOnPhone</key>
 	<true/>
 	<key>CFBundleDevelopmentRegion</key>
@@ -20,7 +16,7 @@
 			<key>CFBundleTypeName</key>
 			<string>PSBT</string>
 			<key>CFBundleTypeRole</key>
-			<false/>
+			<string>Editor</string>
 			<key>LSHandlerRank</key>
 			<string>Owner</string>
 			<key>LSItemContentTypes</key>
@@ -68,20 +64,6 @@
 				<string>public.json</string>
 			</array>
 		</dict>
-		<dict>
-			<key>CFBundleTypeIconFiles</key>
-			<array/>
-			<key>CFBundleTypeName</key>
-			<string>BW COSIGNER</string>
-			<key>CFBundleTypeRole</key>
-			<string>Editor</string>
-			<key>LSHandlerRank</key>
-			<string>Owner</string>
-			<key>LSItemContentTypes</key>
-			<array>
-				<string>io.bluewallet.bwcosigner</string>
-			</array>
-		</dict>
 	</array>
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
@@ -195,11 +177,8 @@
 	<key>UIBackgroundModes</key>
 	<array>
 		<string>fetch</string>
-		<string>processing</string>
 		<string>remote-notification</string>
 	</array>
-	<key>UIFileSharingEnabled</key>
-	<true/>
 	<key>UILaunchStoryboardName</key>
 	<string>LaunchScreen</string>
 	<key>UIRequiredDeviceCapabilities</key>
@@ -241,25 +220,6 @@
 				</array>
 			</dict>
 		</dict>
-		<dict>
-			<key>UTTypeConformsTo</key>
-			<array>
-				<string>public.json</string>
-			</array>
-			<key>UTTypeDescription</key>
-			<string>BW COSIGNER</string>
-			<key>UTTypeIconFiles</key>
-			<array/>
-			<key>UTTypeIdentifier</key>
-			<string>io.bluewallet.bwcosigner</string>
-			<key>UTTypeTagSpecification</key>
-			<dict>
-				<key>public.filename-extension</key>
-				<array>
-					<string>bwcosigner</string>
-				</array>
-			</dict>
-		</dict>
 		<dict>
 			<key>UTTypeConformsTo</key>
 			<array>
@@ -362,25 +322,6 @@
 				</array>
 			</dict>
 		</dict>
-		<dict>
-			<key>UTTypeConformsTo</key>
-			<array>
-				<string>public.json</string>
-			</array>
-			<key>UTTypeDescription</key>
-			<string>BW COSIGNER</string>
-			<key>UTTypeIconFiles</key>
-			<array/>
-			<key>UTTypeIdentifier</key>
-			<string>io.bluewallet.bwcosigner</string>
-			<key>UTTypeTagSpecification</key>
-			<dict>
-				<key>public.filename-extension</key>
-				<array>
-					<string>bwcosigner</string>
-				</array>
-			</dict>
-		</dict>
 	</array>
 	<key>bugsnag</key>
 	<dict>
diff --git a/ios/BlueWalletWatch Extension/ComplicationController.swift b/ios/BlueWalletWatch Extension/ComplicationController.swift
index 278ea029..8fe257b9 100644
--- a/ios/BlueWalletWatch Extension/ComplicationController.swift	
+++ b/ios/BlueWalletWatch Extension/ComplicationController.swift	
@@ -11,7 +11,6 @@ import ClockKit
 
 class ComplicationController: NSObject, CLKComplicationDataSource {
   
-  private let groupUserDefaults = UserDefaults(suiteName: UserDefaultsGroupKey.GroupName.rawValue)
   // MARK: - Timeline Configuration
   
   func getSupportedTimeTravelDirections(for complication: CLKComplication, withHandler handler: @escaping (CLKComplicationTimeTravelDirections) -> Void) {
@@ -44,7 +43,7 @@ class ComplicationController: NSObject, CLKComplicationDataSource {
     for complication: CLKComplication,
     withHandler handler: @escaping (CLKComplicationTimelineEntry?) -> Void)
   {
-    let marketData: WidgetDataStore? = groupUserDefaults?.codable(forKey: MarketData.string)
+    let marketData: WidgetDataStore? = UserDefaults.standard.codable(forKey: MarketData.string)
     let entry: CLKComplicationTimelineEntry
     let date: Date
     let valueLabel: String
@@ -56,7 +55,7 @@ class ComplicationController: NSObject, CLKComplicationDataSource {
       valueLabel = price
       timeLabel = lastUpdated
       valueSmallLabel = priceAbbreviated
-      if let preferredFiatCurrency = groupUserDefaults?.string(forKey: "preferredFiatCurrency"), let preferredFiatUnit = fiatUnit(currency: preferredFiatCurrency) {
+      if let preferredFiatCurrency = UserDefaults.standard.string(forKey: "preferredFiatCurrency"), let preferredFiatUnit = fiatUnit(currency: preferredFiatCurrency) {
         currencySymbol = preferredFiatUnit.symbol
       } else {
         currencySymbol = fiatUnit(currency: "USD")!.symbol
diff --git a/ios/BlueWalletWatch Extension/ExtensionDelegate.swift b/ios/BlueWalletWatch Extension/ExtensionDelegate.swift
index f42a99cb..b18a4a21 100644
--- a/ios/BlueWalletWatch Extension/ExtensionDelegate.swift	
+++ b/ios/BlueWalletWatch Extension/ExtensionDelegate.swift	
@@ -19,16 +19,15 @@ class ExtensionDelegate: NSObject, WKExtensionDelegate {
   
   static func preferredFiatCurrencyChanged() {
     let fiatUnitUserDefaults: FiatUnit
-    let groupUserDefaults = UserDefaults(suiteName: UserDefaultsGroupKey.GroupName.rawValue)
-    if let preferredFiatCurrency = groupUserDefaults?.string(forKey: "preferredFiatCurrency"), let preferredFiatUnit = fiatUnit(currency: preferredFiatCurrency) {
+    if let preferredFiatCurrency = UserDefaults.standard.string(forKey: "preferredFiatCurrency"), let preferredFiatUnit = fiatUnit(currency: preferredFiatCurrency) {
       fiatUnitUserDefaults = preferredFiatUnit
     } else {
       fiatUnitUserDefaults = fiatUnit(currency: "USD")!
     }
     WidgetAPI.fetchPrice(currency: fiatUnitUserDefaults.endPointKey) { (data, error) in
       if let data = data, let encodedData = try? PropertyListEncoder().encode(data) {
-        groupUserDefaults?.set(encodedData, forKey: MarketData.string)
-        groupUserDefaults?.synchronize()
+        UserDefaults.standard.set(encodedData, forKey: MarketData.string)
+        UserDefaults.standard.synchronize()
         let server = CLKComplicationServer.sharedInstance()
         
         for complication in server.activeComplications ?? [] {
@@ -81,15 +80,15 @@ class ExtensionDelegate: NSObject, WKExtensionDelegate {
         
         scheduleNextReload()
           let fiatUnitUserDefaults: FiatUnit
-        if let preferredFiatCurrency = WatchDataSource.shared.groupUserDefaults?.string(forKey: "preferredFiatCurrency"), let preferredFiatUnit = fiatUnit(currency: preferredFiatCurrency) {
+          if let preferredFiatCurrency = UserDefaults.standard.string(forKey: "preferredFiatCurrency"), let preferredFiatUnit = fiatUnit(currency: preferredFiatCurrency) {
             fiatUnitUserDefaults = preferredFiatUnit
           } else {
             fiatUnitUserDefaults = fiatUnit(currency: "USD")!
           }
           WidgetAPI.fetchPrice(currency: fiatUnitUserDefaults.endPointKey) { [weak self] (data, error) in
           if let data = data, let encodedData = try? PropertyListEncoder().encode(data) {
-            WatchDataSource.shared.groupUserDefaults?.set(encodedData, forKey: MarketData.string)
-            WatchDataSource.shared.groupUserDefaults?.synchronize()
+            UserDefaults.standard.set(encodedData, forKey: MarketData.string)
+            UserDefaults.standard.synchronize()
             self?.reloadActiveComplications()
             backgroundTask.setTaskCompletedWithSnapshot(false)
           }
diff --git a/ios/BlueWalletWatch Extension/Objects/WatchDataSource.swift b/ios/BlueWalletWatch Extension/Objects/WatchDataSource.swift
index e4be15f3..039b0e15 100644
--- a/ios/BlueWalletWatch Extension/Objects/WatchDataSource.swift	
+++ b/ios/BlueWalletWatch Extension/Objects/WatchDataSource.swift	
@@ -22,8 +22,6 @@ class WatchDataSource: NSObject {
   var wallets: [Wallet] = [Wallet]()
   var companionWalletsInitialized = false
   private let keychain = KeychainSwift()
-  let groupUserDefaults = UserDefaults(suiteName: UserDefaultsGroupKey.GroupName.rawValue)
-
   
   override init() {
     super.init()
@@ -100,10 +98,9 @@ class WatchDataSource: NSObject {
 
   
   func processData(data: [String: Any]) {
-    
     if let preferredFiatCurrency = data["preferredFiatCurrency"] as? String, let  preferredFiatCurrencyUnit = fiatUnit(currency: preferredFiatCurrency) {
-      groupUserDefaults?.set(preferredFiatCurrencyUnit.endPointKey, forKey: "preferredFiatCurrency")
-      groupUserDefaults?.synchronize()
+      UserDefaults.standard.set(preferredFiatCurrencyUnit.endPointKey, forKey: "preferredFiatCurrency")
+      UserDefaults.standard.synchronize()
         ExtensionDelegate.preferredFiatCurrencyChanged()
     } else if let isWalletsInitialized = data["isWalletsInitialized"] as? Bool {
       companionWalletsInitialized = isWalletsInitialized
diff --git a/ios/Podfile b/ios/Podfile
index 71d5d5c9..d3632bc5 100644
--- a/ios/Podfile
+++ b/ios/Podfile
@@ -57,8 +57,6 @@ target 'BlueWallet' do
     # An absolute path to your application root.
     :app_path => "#{Pod::Config.instance.installation_root}/.."
   )
-  pod 'react-native-bw-file-access', :path => '../blue_modules/react-native-bw-file-access'
-
 
   post_install do |installer|
     react_native_post_install(
diff --git a/ios/Podfile.lock b/ios/Podfile.lock
index e97ec581..28d7591b 100644
--- a/ios/Podfile.lock
+++ b/ios/Podfile.lock
@@ -279,15 +279,13 @@ PODS:
     - glog
   - react-native-blue-crypto (1.0.0):
     - React
-  - react-native-bw-file-access (1.0.0):
-    - React-Core
   - react-native-document-picker (9.0.1):
     - React-Core
   - react-native-fingerprint-scanner (6.0.0):
     - React
   - react-native-idle-timer (2.1.6):
     - React-Core
-  - react-native-image-picker (7.0.2):
+  - react-native-image-picker (4.8.5):
     - React-Core
   - react-native-ios-context-menu (1.15.3):
     - React-Core
@@ -295,7 +293,7 @@ PODS:
     - React
   - react-native-randombytes (3.6.1):
     - React-Core
-  - react-native-safe-area-context (4.7.4):
+  - react-native-safe-area-context (3.4.1):
     - React-Core
   - react-native-secure-key-store (2.0.10):
     - React-Core
@@ -394,11 +392,11 @@ PODS:
     - React-perflogger (= 0.71.14)
   - ReactNativeCameraKit (13.0.0):
     - React-Core
-  - RealmJS (12.3.0):
+  - RealmJS (12.2.1):
     - React
   - rn-ldk (0.8.4):
     - React-Core
-  - RNCAsyncStorage (1.19.5):
+  - RNCAsyncStorage (1.19.3):
     - React-Core
   - RNCClipboard (1.12.1):
     - React-Core
@@ -417,7 +415,7 @@ PODS:
     - React
   - RNKeychain (8.1.2):
     - React-Core
-  - RNLocalize (3.0.3):
+  - RNLocalize (3.0.2):
     - React-Core
   - RNPermissions (3.10.1):
     - React-Core
@@ -429,12 +427,11 @@ PODS:
     - React-Core
   - RNReactNativeHapticFeedback (2.2.0):
     - React-Core
-  - RNReanimated (3.5.4):
+  - RNReanimated (2.17.0):
     - DoubleConversion
     - FBLazyVector
     - FBReactNativeSpec
     - glog
-    - hermes-engine
     - RCT-Folly
     - RCTRequired
     - RCTTypeSafety
@@ -444,7 +441,6 @@ PODS:
     - React-Core/RCTWebSocket
     - React-CoreModules
     - React-cxxreact
-    - React-hermes
     - React-jsi
     - React-jsiexecutor
     - React-jsinspector
@@ -458,14 +454,14 @@ PODS:
     - React-RCTText
     - ReactCommon/turbomodule/core
     - Yoga
-  - RNScreens (3.27.0):
-    - RCT-Folly (= 2021.07.22.00)
+  - RNScreens (3.20.0):
     - React-Core
-  - RNShare (10.0.1):
+    - React-RCTImage
+  - RNShare (9.4.1):
     - React-Core
   - RNSVG (13.14.0):
     - React-Core
-  - RNVectorIcons (10.0.2):
+  - RNVectorIcons (10.0.1):
     - RCT-Folly (= 2021.07.22.00)
     - React-Core
   - RNWatch (1.1.0):
@@ -502,7 +498,6 @@ DEPENDENCIES:
   - React-jsinspector (from `../node_modules/react-native/ReactCommon/jsinspector`)
   - React-logger (from `../node_modules/react-native/ReactCommon/logger`)
   - react-native-blue-crypto (from `../node_modules/react-native-blue-crypto`)
-  - react-native-bw-file-access (from `../blue_modules/react-native-bw-file-access`)
   - react-native-document-picker (from `../node_modules/react-native-document-picker`)
   - react-native-fingerprint-scanner (from `../node_modules/react-native-fingerprint-scanner`)
   - react-native-idle-timer (from `../node_modules/react-native-idle-timer`)
@@ -614,8 +609,6 @@ EXTERNAL SOURCES:
     :path: "../node_modules/react-native/ReactCommon/logger"
   react-native-blue-crypto:
     :path: "../node_modules/react-native-blue-crypto"
-  react-native-bw-file-access:
-    :path: "../blue_modules/react-native-bw-file-access"
   react-native-document-picker:
     :path: "../node_modules/react-native-document-picker"
   react-native-fingerprint-scanner:
@@ -749,15 +742,14 @@ SPEC CHECKSUMS:
   React-jsinspector: 7bf923954b4e035f494b01ac16633963412660d7
   React-logger: 655ff5db8bd922acfbe76a4983ffab048916343e
   react-native-blue-crypto: 23f1558ad3d38d7a2edb7e2f6ed1bc520ed93e56
-  react-native-bw-file-access: b232fd1d902521ca046f3fc5990ab1465e1878d7
   react-native-document-picker: 2b8f18667caee73a96708a82b284a4f40b30a156
   react-native-fingerprint-scanner: ac6656f18c8e45a7459302b84da41a44ad96dbbe
   react-native-idle-timer: f7f651542b39dce9b9473e4578cb64a255075f17
-  react-native-image-picker: 2e2e82aba9b6a91a7c78f7d9afde341a2659c7b8
+  react-native-image-picker: cd420f97f6ed6ff74fc4686d27dbcfdbd051db91
   react-native-ios-context-menu: e529171ba760a1af7f2ef0729f5a7f4d226171c5
   react-native-qrcode-local-image: 35ccb306e4265bc5545f813e54cc830b5d75bcfc
   react-native-randombytes: 421f1c7d48c0af8dbcd471b0324393ebf8fe7846
-  react-native-safe-area-context: 2cd91d532de12acdb0a9cbc8d43ac72a8e4c897c
+  react-native-safe-area-context: 9e40fb181dac02619414ba1294d6c2a807056ab9
   react-native-secure-key-store: 910e6df6bc33cb790aba6ee24bc7818df1fe5898
   react-native-tcp-socket: c1b7297619616b4c9caae6889bcb0aba78086989
   react-native-tor: 3b14e9160b2eb7fa3f310921b2dee71a5171e5b7
@@ -777,9 +769,9 @@ SPEC CHECKSUMS:
   React-runtimeexecutor: ffe826b7b1cfbc32a35ed5b64d5886c0ff75f501
   ReactCommon: 7f3dd5e98a9ec627c6b03d26c062bf37ea9fc888
   ReactNativeCameraKit: 9d46a5d7dd544ca64aa9c03c150d2348faf437eb
-  RealmJS: 4c52a15602e70b64cd9230b0a17a9c12741371f4
+  RealmJS: b36dae5c0def204602827884512252a320332c69
   rn-ldk: 0d8749d98cc5ce67302a32831818c116b67f7643
-  RNCAsyncStorage: f2974eca860c16a3e56eea5771fda8d12e2d2057
+  RNCAsyncStorage: c913ede1fa163a71cea118ed4670bbaaa4b511bb
   RNCClipboard: d77213bfa269013bf4b857b7a9ca37ee062d8ef1
   RNCPushNotificationIOS: 64218f3c776c03d7408284a819b2abfda1834bc8
   RNDefaultPreference: 08bdb06cfa9188d5da97d4642dac745218d7fb31
@@ -788,20 +780,20 @@ SPEC CHECKSUMS:
   RNGestureHandler: 6e46dde1f87e5f018a54fe5d40cd0e0b942b49ee
   RNHandoff: d3b0754cca3a6bcd9b25f544f733f7f033ccf5fa
   RNKeychain: a65256b6ca6ba6976132cc4124b238a5b13b3d9c
-  RNLocalize: 7ce27517894956a226aa6d614786802d253a0a0a
+  RNLocalize: dbea38dcb344bf80ff18a1757b1becf11f70cae4
   RNPermissions: 42f9e3dfb623995bc3d102d34ec068a350c49883
   RNPrivacySnapshot: 71919dde3c6a29dd332115409c2aec564afee8f4
   RNQuickAction: 6d404a869dc872cde841ad3147416a670d13fa93
   RNRate: ef3bcff84f39bb1d1e41c5593d3eea4aab2bd73a
   RNReactNativeHapticFeedback: ec56a5f81c3941206fd85625fa669ffc7b4545f9
-  RNReanimated: be07c7ae209074d0e8a84cf38b7909457ac59a32
-  RNScreens: 3c2d122f5e08c192e254c510b212306da97d2581
-  RNShare: bed7c4fbe615f3d977f22feb0902af9a790c1660
+  RNReanimated: f186e85d9f28c9383d05ca39e11dd194f59093ec
+  RNScreens: 218801c16a2782546d30bd2026bb625c0302d70f
+  RNShare: 32e97adc8d8c97d4a26bcdd3c45516882184f8b6
   RNSVG: d00c8f91c3cbf6d476451313a18f04d220d4f396
-  RNVectorIcons: 23b6e11af4aaf104d169b1b0afa7e5cf96c676ce
+  RNVectorIcons: ace237de89f1574ef3c963ae9d5da3bd6fbeb02a
   RNWatch: fd30ca40a5b5ef58dcbc195638e68219bc455236
   Yoga: e71803b4c1fff832ccf9b92541e00f9b873119b9
 
-PODFILE CHECKSUM: 7a17b36f13f1d7be0f9305c1d23f24618f8781b3
+PODFILE CHECKSUM: 27db07925dc3a89e9ecced7e377a50dba9deb58a
 
 COCOAPODS: 1.13.0
diff --git a/ios/Widgets/Shared/UserDefaultsExtension.swift b/ios/Widgets/Shared/UserDefaultsExtension.swift
index b9200c9a..d08423ad 100644
--- a/ios/Widgets/Shared/UserDefaultsExtension.swift
+++ b/ios/Widgets/Shared/UserDefaultsExtension.swift
@@ -11,7 +11,7 @@ import Foundation
 extension UserDefaults {
 
 func codable<Element: Codable>(forKey key: String) -> Element? {
-  guard let userDefaults = UserDefaults(suiteName: UserDefaultsGroupKey.GroupName.rawValue), let data = userDefaults.data(forKey: key) else { return nil }
+        guard let data = UserDefaults.standard.data(forKey: key) else { return nil }
         let element = try? PropertyListDecoder().decode(Element.self, from: data)
         return element
     }
diff --git a/ios/Widgets/Shared/WidgetAPI.swift b/ios/Widgets/Shared/WidgetAPI.swift
index 1e11e28a..ae410223 100644
--- a/ios/Widgets/Shared/WidgetAPI.swift
+++ b/ios/Widgets/Shared/WidgetAPI.swift
@@ -39,120 +39,89 @@ class WidgetAPI {
       urlString = "https://www.bitstamp.net/api/v2/ticker/btc\(endPointKey.lowercased())"
     case "Coinbase":
       urlString = "https://api.coinbase.com/v2/prices/BTC-\(endPointKey.uppercased())/buy"
-    case "CoinGecko":
+      case "CoinGecko":
       urlString = "https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=\(endPointKey.lowercased())"
-    case "BNR":
-      urlString = "https://www.bnr.ro/nbrfxrates.xml"
     default:
       urlString = "https://api.coindesk.com/v1/bpi/currentprice/\(endPointKey).json"
     }
 
     guard let url = URL(string:urlString) else { return }
 
-    if source == "BNR" {
-      URLSession.shared.dataTask(with: url) { (data, response, error) in
-         if let error = error {
-             print("Error fetching data: \(error.localizedDescription)")
-             completion(nil, error)
-             return
-         }
-
-         guard let data = data else {
-             print("No data received")
-             completion(nil, nil)
-             return
-         }
-
-         // Parse XML data
-         let parser = XMLParser(data: data)
-         let delegate = BNRXMLParserDelegate()
-         parser.delegate = delegate
-         if parser.parse(), let rate = delegate.usdRate {
-             let lastUpdatedString = ISO8601DateFormatter().string(from: Date())
-             let latestRateDataStore = WidgetDataStore(rate: String(rate), lastUpdate: lastUpdatedString, rateDouble: rate)
-             completion(latestRateDataStore, nil)
-         } else {
-           print("Error parsing XML")
-           completion(nil, CurrencyError())
-         }
-       }.resume()
-      } else {
-        URLSession.shared.dataTask(with: url) { (data, response, error) in
-        guard let dataResponse = data,
-              let json = (try? JSONSerialization.jsonObject(with: dataResponse, options: .mutableContainers) as? Dictionary<String, Any>),
-              error == nil
-        else {
-          print(error?.localizedDescription ?? "Response Error")
-          completion(nil, error)
-          return
-        }
-        
-        var latestRateDataStore: WidgetDataStore?
-        switch source {
-        case "Yadio":
-          guard let rateDict = json[endPointKey] as? [String: Any],
-                let rateDouble = rateDict["price"] as? Double,
-                let lastUpdated = json["timestamp"] as? Int
-          else { break }
-          let unix = Double(lastUpdated / 1_000)
-          let lastUpdatedString = ISO8601DateFormatter().string(from: Date(timeIntervalSince1970: unix))
-          latestRateDataStore = WidgetDataStore(rate: String(rateDouble), lastUpdate: lastUpdatedString, rateDouble: rateDouble)
-        case "CoinGecko":
-          guard let rateDict = json["bitcoin"] as? [String: Any],
-                let rateDouble = rateDict[endPointKey.lowercased()] as? Double
-          else { break }
-          let lastUpdatedString = ISO8601DateFormatter().string(from: Date())
-          latestRateDataStore = WidgetDataStore(rate: String(rateDouble), lastUpdate: lastUpdatedString, rateDouble: rateDouble)
-        case "YadioConvert":
-          guard let rateDict = json as? [String: Any],
-                let rateDouble = rateDict["rate"] as? Double,
-                let lastUpdated = json["timestamp"] as? Int
-          else { break }
-          let unix = Double(lastUpdated / 1_000)
-          let lastUpdatedString = ISO8601DateFormatter().string(from: Date(timeIntervalSince1970: unix))
-          latestRateDataStore = WidgetDataStore(rate: String(rateDouble), lastUpdate: lastUpdatedString, rateDouble: rateDouble)
-        case "Exir":
-          guard let rateDouble = json["last"] as? Double else { break }
-          let rateString = String(rateDouble)
-          let lastUpdatedString = ISO8601DateFormatter().string(from: Date())
-          latestRateDataStore = WidgetDataStore(rate: rateString, lastUpdate: lastUpdatedString, rateDouble: rateDouble)
-        case "Bitstamp":
-          guard let rateString = json["last"] as? String, let rateDouble = Double(rateString) else { break }
-          let lastUpdatedString = ISO8601DateFormatter().string(from: Date())
-          latestRateDataStore = WidgetDataStore(rate: rateString, lastUpdate: lastUpdatedString, rateDouble: rateDouble)
-        case "wazirx":
-          guard let tickerDict = json["ticker"] as? [String: Any],
-                let rateString = tickerDict["buy"] as? String,
-                let rateDouble = Double(rateString)
-          else { break }
-          let lastUpdatedString = ISO8601DateFormatter().string(from: Date())
-          latestRateDataStore = WidgetDataStore(rate: rateString, lastUpdate: lastUpdatedString, rateDouble: rateDouble)
-        case "Coinbase":
-          guard let data = json["data"] as? Dictionary<String, Any>,
-                let rateString = data["amount"] as? String,
-                let rateDouble = Double(rateString)
-          else { break }
-          let lastUpdatedString = ISO8601DateFormatter().string(from: Date())
-          latestRateDataStore = WidgetDataStore(rate: rateString, lastUpdate: lastUpdatedString, rateDouble: rateDouble)
-        default:
-          guard let bpi = json["bpi"] as? Dictionary<String, Any>,
-                let preferredCurrency = bpi[endPointKey] as? Dictionary<String, Any>,
-                let rateString = preferredCurrency["rate"] as? String,
-                let rateDouble = preferredCurrency["rate_float"] as? Double,
-                let time = json["time"] as? Dictionary<String, Any>,
-                let lastUpdatedString = time["updatedISO"] as? String
-          else { break }
-          latestRateDataStore = WidgetDataStore(rate: rateString, lastUpdate: lastUpdatedString, rateDouble: rateDouble)
-        }
-        
-        if (latestRateDataStore == nil) {
-          completion(nil, CurrencyError())
-          return
-        }
-        
-        completion(latestRateDataStore, nil)
-      }.resume()
-    }
+    URLSession.shared.dataTask(with: url) { (data, response, error) in
+      guard let dataResponse = data,
+            let json = (try? JSONSerialization.jsonObject(with: dataResponse, options: .mutableContainers) as? Dictionary<String, Any>),
+            error == nil
+      else {
+        print(error?.localizedDescription ?? "Response Error")
+        completion(nil, error)
+        return
+      }
+
+      var latestRateDataStore: WidgetDataStore?
+      switch source {
+      case "Yadio":
+        guard let rateDict = json[endPointKey] as? [String: Any],
+              let rateDouble = rateDict["price"] as? Double,
+              let lastUpdated = json["timestamp"] as? Int
+        else { break }
+        let unix = Double(lastUpdated / 1_000)
+        let lastUpdatedString = ISO8601DateFormatter().string(from: Date(timeIntervalSince1970: unix))
+        latestRateDataStore = WidgetDataStore(rate: String(rateDouble), lastUpdate: lastUpdatedString, rateDouble: rateDouble)
+      case "CoinGecko":
+        guard let rateDict = json["bitcoin"] as? [String: Any],
+              let rateDouble = rateDict[endPointKey.lowercased()] as? Double
+        else { break }
+        let lastUpdatedString = ISO8601DateFormatter().string(from: Date())
+        latestRateDataStore = WidgetDataStore(rate: String(rateDouble), lastUpdate: lastUpdatedString, rateDouble: rateDouble)
+      case "YadioConvert":
+        guard let rateDict = json as? [String: Any],
+              let rateDouble = rateDict["rate"] as? Double,
+              let lastUpdated = json["timestamp"] as? Int
+        else { break }
+        let unix = Double(lastUpdated / 1_000)
+        let lastUpdatedString = ISO8601DateFormatter().string(from: Date(timeIntervalSince1970: unix))
+        latestRateDataStore = WidgetDataStore(rate: String(rateDouble), lastUpdate: lastUpdatedString, rateDouble: rateDouble)
+      case "Exir":
+        guard let rateDouble = json["last"] as? Double else { break }
+        let rateString = String(rateDouble)
+        let lastUpdatedString = ISO8601DateFormatter().string(from: Date())
+        latestRateDataStore = WidgetDataStore(rate: rateString, lastUpdate: lastUpdatedString, rateDouble: rateDouble)
+      case "Bitstamp":
+        guard let rateString = json["last"] as? String, let rateDouble = Double(rateString) else { break }
+        let lastUpdatedString = ISO8601DateFormatter().string(from: Date())
+        latestRateDataStore = WidgetDataStore(rate: rateString, lastUpdate: lastUpdatedString, rateDouble: rateDouble)
+      case "wazirx":
+        guard let tickerDict = json["ticker"] as? [String: Any],
+              let rateString = tickerDict["buy"] as? String,
+              let rateDouble = Double(rateString)
+        else { break }
+        let lastUpdatedString = ISO8601DateFormatter().string(from: Date())
+        latestRateDataStore = WidgetDataStore(rate: rateString, lastUpdate: lastUpdatedString, rateDouble: rateDouble)
+      case "Coinbase":
+       guard let data = json["data"] as? Dictionary<String, Any>,
+              let rateString = data["amount"] as? String,
+              let rateDouble = Double(rateString)
+        else { break }
+        let lastUpdatedString = ISO8601DateFormatter().string(from: Date())
+        latestRateDataStore = WidgetDataStore(rate: rateString, lastUpdate: lastUpdatedString, rateDouble: rateDouble)
+      default:
+        guard let bpi = json["bpi"] as? Dictionary<String, Any>,
+              let preferredCurrency = bpi[endPointKey] as? Dictionary<String, Any>,
+              let rateString = preferredCurrency["rate"] as? String,
+              let rateDouble = preferredCurrency["rate_float"] as? Double,
+              let time = json["time"] as? Dictionary<String, Any>,
+              let lastUpdatedString = time["updatedISO"] as? String
+        else { break }
+        latestRateDataStore = WidgetDataStore(rate: rateString, lastUpdate: lastUpdatedString, rateDouble: rateDouble)
+      }
+
+      if (latestRateDataStore == nil) {
+        completion(nil, CurrencyError())
+        return
+      }
+
+      completion(latestRateDataStore, nil)
+    }.resume()
   }
 
   static func getUserPreferredCurrency() -> String {
@@ -182,7 +151,7 @@ class WidgetAPI {
   }
 
   static func getLastSelectedCurrency() -> String {
-    guard let userDefaults = UserDefaults(suiteName: UserDefaultsGroupKey.GroupName.rawValue), let dataStore = userDefaults.string(forKey: "currency") else {
+    guard let dataStore = UserDefaults.standard.string(forKey: "currency") else {
       return "USD"
     }
 
@@ -194,5 +163,3 @@ class WidgetAPI {
   }
 
 }
-
-
diff --git a/ios/Widgets/Shared/WidgetDataStore.swift b/ios/Widgets/Shared/WidgetDataStore.swift
index 50acfa68..d5228ab1 100644
--- a/ios/Widgets/Shared/WidgetDataStore.swift
+++ b/ios/Widgets/Shared/WidgetDataStore.swift
@@ -77,10 +77,9 @@ class WidgetData {
   static let WidgetDataStoreKey = "WidgetDataStoreKey"
   static let WidgetCachedDataStoreKey = "WidgetCachedDataStoreKey"
   
-  static func savePriceRateAndLastUpdate(rate: String, lastUpdate: String) { 
-    guard let userDefaults = UserDefaults(suiteName: UserDefaultsGroupKey.GroupName.rawValue) else { return }
-    userDefaults.setValue(["rate": rate, "lastUpdate": lastUpdate], forKey: WidgetDataStoreKey)
-    userDefaults.synchronize()
+  static func savePriceRateAndLastUpdate(rate: String, lastUpdate: String) {    
+    UserDefaults.standard.setValue(["rate": rate, "lastUpdate": lastUpdate], forKey: WidgetDataStoreKey)
+    UserDefaults.standard.synchronize()
   }
   
 }
diff --git a/ios/Widgets/Shared/XMLParserDelegate.swift b/ios/Widgets/Shared/XMLParserDelegate.swift
deleted file mode 100644
index d2c09e45..00000000
--- a/ios/Widgets/Shared/XMLParserDelegate.swift
+++ /dev/null
@@ -1,29 +0,0 @@
-//
-//  XMLParserDelegate.swift
-//  BlueWallet
-//
-//  Created by Marcos Rodriguez on 11/13/23.
-//  Copyright © 2023 BlueWallet. All rights reserved.
-//
-
-import Foundation
-
-class BNRXMLParserDelegate: NSObject, XMLParserDelegate {
-    var usdRate: Double?
-    var currentElement = ""
-    var foundRate = false
-
-    func parser(_ parser: XMLParser, didStartElement elementName: String, namespaceURI: String?, qualifiedName qName: String?, attributes attributeDict: [String : String] = [:]) {
-        currentElement = elementName
-        if elementName == "Rate" && attributeDict["currency"] == "USD" {
-            foundRate = true
-        }
-    }
-
-    func parser(_ parser: XMLParser, foundCharacters string: String) {
-        if foundRate {
-            usdRate = Double(string)
-            foundRate = false
-        }
-    }
-}
diff --git a/loc/en.json b/loc/en.json
index 46e8b41d..1be95867 100644
--- a/loc/en.json
+++ b/loc/en.json
@@ -550,12 +550,6 @@
     "no_wallet_owns_address": "None of the available wallets own the provided address.",
     "view_qrcode": "View QRCode"
   },
-  "autofill_word": {
-    "title": "Generate final mnemonic word",
-    "enter": "Enter partial mnemonic phrase",
-    "generate_word": "Generate final word",
-    "error": "Input is not an 11 or 23 word partial mnemonic!"
-  },
   "cc": {
     "change": "Change",
     "coins_selected": "Coins Selected ({number})",
diff --git a/package-lock.json b/package-lock.json
index c598eb91..3b869c5f 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -16,12 +16,11 @@
         "@keystonehq/bc-ur-registry": "0.6.4",
         "@ngraveio/bc-ur": "1.1.6",
         "@noble/secp256k1": "1.6.3",
-        "@react-native-async-storage/async-storage": "1.19.5",
+        "@react-native-async-storage/async-storage": "1.19.3",
         "@react-native-clipboard/clipboard": "1.12.1",
         "@react-native-community/push-notification-ios": "1.11.0",
-        "@react-navigation/drawer": "6.6.6",
-        "@react-navigation/native": "6.1.9",
-        "@react-navigation/native-stack": "6.9.17",
+        "@react-navigation/drawer": "5.12.9",
+        "@react-navigation/native": "5.9.8",
         "@remobile/react-native-qrcode-local-image": "https://github.com/BlueWallet/react-native-qrcode-local-image",
         "@spsina/bip47": "github:BlueWallet/bip47#0a2f02c90350802f2ec93afa4e6c8843be2d687c",
         "aez": "1.0.1",
@@ -74,12 +73,13 @@
         "react-native-handoff": "https://github.com/BlueWallet/react-native-handoff#31d005f93d31099d0e564590a3bbd052b8a02b39",
         "react-native-haptic-feedback": "2.2.0",
         "react-native-idle-timer": "https://github.com/BlueWallet/react-native-idle-timer#8587876d68ab5920e79619726aeca9e672beaf2b",
-        "react-native-image-picker": "7.0.2",
+        "react-native-image-picker": "4.8.5",
         "react-native-ios-context-menu": "github:BlueWallet/react-native-ios-context-menu#v1.15.3",
         "react-native-keychain": "8.1.2",
         "react-native-linear-gradient": "2.8.3",
-        "react-native-localize": "3.0.3",
+        "react-native-localize": "3.0.2",
         "react-native-modal": "13.0.1",
+        "react-native-navigation-bar-color": "https://github.com/BlueWallet/react-native-navigation-bar-color#3b2894ae62fbce99a3bd24105f0921cebaef5c94",
         "react-native-obscure": "https://github.com/BlueWallet/react-native-obscure.git#f4b83b4a261e39b1f5ed4a45ac5bcabc8a59eadb",
         "react-native-passcode-auth": "https://github.com/BlueWallet/react-native-passcode-auth#a2ff977ba92b36f8d0a5567f59c05cc608e8bd12",
         "react-native-permissions": "3.10.1",
@@ -90,20 +90,20 @@
         "react-native-quick-actions": "0.3.13",
         "react-native-randombytes": "3.6.1",
         "react-native-rate": "1.2.12",
-        "react-native-reanimated": "3.5.4",
-        "react-native-safe-area-context": "4.7.4",
-        "react-native-screens": "3.27.0",
+        "react-native-reanimated": "2.17.0",
+        "react-native-safe-area-context": "3.4.1",
+        "react-native-screens": "3.20.0",
         "react-native-secure-key-store": "https://github.com/BlueWallet/react-native-secure-key-store#2076b48",
-        "react-native-share": "10.0.1",
+        "react-native-share": "9.4.1",
         "react-native-svg": "13.14.0",
         "react-native-tcp-socket": "5.6.2",
         "react-native-tor": "0.1.8",
-        "react-native-vector-icons": "10.0.2",
+        "react-native-vector-icons": "10.0.1",
         "react-native-watch-connectivity": "1.1.0",
         "react-native-webview": "13.6.2",
         "react-native-widget-center": "https://github.com/BlueWallet/react-native-widget-center#a128c38",
         "readable-stream": "3.6.2",
-        "realm": "12.3.0",
+        "realm": "12.2.1",
         "rn-ldk": "github:BlueWallet/rn-ldk#v0.8.4",
         "rn-nodeify": "10.3.0",
         "scryptsy": "2.1.0",
@@ -154,9 +154,6 @@
       "integrity": "sha512-lwAn5R4LUhcnyrZgNx3YdDPr5+nseM4kARANcv8i0YOMtnPJRTF7B7TZzS3DYgC6tff/aR2W/3jGoY/SJMs6MA==",
       "license": "MIT"
     },
-    "blue_modules/react-native-bw-file-access/index": {
-      "extraneous": true
-    },
     "node_modules/@aashutoshrathi/word-wrap": {
       "version": "1.2.6",
       "resolved": "https://registry.npmjs.org/@aashutoshrathi/word-wrap/-/word-wrap-1.2.6.tgz",
@@ -3983,9 +3980,9 @@
       }
     },
     "node_modules/@react-native-async-storage/async-storage": {
-      "version": "1.19.5",
-      "resolved": "https://registry.npmjs.org/@react-native-async-storage/async-storage/-/async-storage-1.19.5.tgz",
-      "integrity": "sha512-zLT7oNPXpW8BxJyHyq8AJbXtlHE/eonFWuJt44y0WeCGnp4KOJ8mfqD8mtAIKLyrYHHE1uadFe/s4C+diYAi8g==",
+      "version": "1.19.3",
+      "resolved": "https://registry.npmjs.org/@react-native-async-storage/async-storage/-/async-storage-1.19.3.tgz",
+      "integrity": "sha512-CwGfoHCWdPOTPS+2fW6YRE1fFBpT9++ahLEroX5hkgwyoQ+TkmjOaUxixdEIoVua9Pz5EF2pGOIJzqOTMWfBlA==",
       "dependencies": {
         "merge-options": "^3.0.4"
       },
@@ -5601,116 +5598,54 @@
       }
     },
     "node_modules/@react-navigation/core": {
-      "version": "6.4.10",
-      "resolved": "https://registry.npmjs.org/@react-navigation/core/-/core-6.4.10.tgz",
-      "integrity": "sha512-oYhqxETRHNHKsipm/BtGL0LI43Hs2VSFoWMbBdHK9OqgQPjTVUitslgLcPpo4zApCcmBWoOLX2qPxhsBda644A==",
+      "version": "5.16.1",
+      "integrity": "sha512-3AToC7vPNeSNcHFLd1h71L6u34hfXoRAS1CxF9Fc4uC8uOrVqcNvphpeFbE0O9Bw6Zpl0BnMFl7E5gaL3KGzNA==",
       "dependencies": {
-        "@react-navigation/routers": "^6.1.9",
+        "@react-navigation/routers": "^5.7.4",
         "escape-string-regexp": "^4.0.0",
-        "nanoid": "^3.1.23",
-        "query-string": "^7.1.3",
-        "react-is": "^16.13.0",
-        "use-latest-callback": "^0.1.7"
+        "nanoid": "^3.1.15",
+        "query-string": "^6.13.6",
+        "react-is": "^16.13.0"
       },
       "peerDependencies": {
         "react": "*"
       }
     },
     "node_modules/@react-navigation/drawer": {
-      "version": "6.6.6",
-      "resolved": "https://registry.npmjs.org/@react-navigation/drawer/-/drawer-6.6.6.tgz",
-      "integrity": "sha512-DW/oNRisSOGOqvZfCzfhKBxnzT97Teqtg1Gal85g+K3gnVbM1jOBE2PdnYsKU0fULfFtDwvp/QZSbcgjDpr12A==",
+      "version": "5.12.9",
+      "integrity": "sha512-SYb2BCEAn+BiEwC6WBfCzs1VlWD+ZdQbxmsim6vo1o+ndPW2e+kiq7FXKRs0vUXhQRZVl2oOB3vBn0c3YCllQg==",
       "dependencies": {
-        "@react-navigation/elements": "^1.3.21",
-        "color": "^4.2.3",
-        "warn-once": "^0.1.0"
+        "color": "^3.1.3",
+        "react-native-iphone-x-helper": "^1.3.0"
       },
       "peerDependencies": {
-        "@react-navigation/native": "^6.0.0",
+        "@react-navigation/native": "^5.0.5",
         "react": "*",
         "react-native": "*",
         "react-native-gesture-handler": ">= 1.0.0",
         "react-native-reanimated": ">= 1.0.0",
-        "react-native-safe-area-context": ">= 3.0.0",
-        "react-native-screens": ">= 3.0.0"
-      }
-    },
-    "node_modules/@react-navigation/drawer/node_modules/color": {
-      "version": "4.2.3",
-      "resolved": "https://registry.npmjs.org/color/-/color-4.2.3.tgz",
-      "integrity": "sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==",
-      "dependencies": {
-        "color-convert": "^2.0.1",
-        "color-string": "^1.9.0"
-      },
-      "engines": {
-        "node": ">=12.5.0"
-      }
-    },
-    "node_modules/@react-navigation/drawer/node_modules/color-convert": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
-      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
-      "dependencies": {
-        "color-name": "~1.1.4"
-      },
-      "engines": {
-        "node": ">=7.0.0"
-      }
-    },
-    "node_modules/@react-navigation/drawer/node_modules/color-name": {
-      "version": "1.1.4",
-      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
-      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
-    },
-    "node_modules/@react-navigation/elements": {
-      "version": "1.3.21",
-      "resolved": "https://registry.npmjs.org/@react-navigation/elements/-/elements-1.3.21.tgz",
-      "integrity": "sha512-eyS2C6McNR8ihUoYfc166O1D8VYVh9KIl0UQPI8/ZJVsStlfSTgeEEh+WXge6+7SFPnZ4ewzEJdSAHH+jzcEfg==",
-      "peerDependencies": {
-        "@react-navigation/native": "^6.0.0",
-        "react": "*",
-        "react-native": "*",
-        "react-native-safe-area-context": ">= 3.0.0"
+        "react-native-safe-area-context": ">= 0.6.0",
+        "react-native-screens": ">= 2.0.0-alpha.0 || >= 2.0.0-beta.0 || >= 2.0.0"
       }
     },
     "node_modules/@react-navigation/native": {
-      "version": "6.1.9",
-      "resolved": "https://registry.npmjs.org/@react-navigation/native/-/native-6.1.9.tgz",
-      "integrity": "sha512-AMuJDpwXE7UlfyhIXaUCCynXmv69Kb8NzKgKJO7v0k0L+u6xUTbt6xvshmJ79vsvaFyaEH9Jg5FMzek5/S5qNw==",
+      "version": "5.9.8",
+      "integrity": "sha512-DNbcDHXQPSFDLn51kkVVJjT3V7jJy2GztNYZe/2bEg29mi5QEcHHcpifjMCtyFKntAOWzKlG88UicIQ17UEghg==",
       "dependencies": {
-        "@react-navigation/core": "^6.4.10",
+        "@react-navigation/core": "^5.16.1",
         "escape-string-regexp": "^4.0.0",
-        "fast-deep-equal": "^3.1.3",
-        "nanoid": "^3.1.23"
+        "nanoid": "^3.1.15"
       },
       "peerDependencies": {
         "react": "*",
         "react-native": "*"
       }
     },
-    "node_modules/@react-navigation/native-stack": {
-      "version": "6.9.17",
-      "resolved": "https://registry.npmjs.org/@react-navigation/native-stack/-/native-stack-6.9.17.tgz",
-      "integrity": "sha512-X8p8aS7JptQq7uZZNFEvfEcPf6tlK4PyVwYDdryRbG98B4bh2wFQYMThxvqa+FGEN7USEuHdv2mF0GhFKfX0ew==",
-      "dependencies": {
-        "@react-navigation/elements": "^1.3.21",
-        "warn-once": "^0.1.0"
-      },
-      "peerDependencies": {
-        "@react-navigation/native": "^6.0.0",
-        "react": "*",
-        "react-native": "*",
-        "react-native-safe-area-context": ">= 3.0.0",
-        "react-native-screens": ">= 3.0.0"
-      }
-    },
     "node_modules/@react-navigation/routers": {
-      "version": "6.1.9",
-      "resolved": "https://registry.npmjs.org/@react-navigation/routers/-/routers-6.1.9.tgz",
-      "integrity": "sha512-lTM8gSFHSfkJvQkxacGM6VJtBt61ip2XO54aNfswD+KMw6eeZ4oehl7m0me3CR9hnDE4+60iAZR8sAhvCiI3NA==",
+      "version": "5.7.4",
+      "integrity": "sha512-0N202XAqsU/FlE53Nmh6GHyMtGm7g6TeC93mrFAFJOqGRKznT0/ail+cYlU6tNcPA9AHzZu1Modw1eoDINSliQ==",
       "dependencies": {
-        "nanoid": "^3.1.23"
+        "nanoid": "^3.1.15"
       }
     },
     "node_modules/@remobile/react-native-qrcode-local-image": {
@@ -8693,7 +8628,6 @@
     },
     "node_modules/decode-uri-component": {
       "version": "0.2.2",
-      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.2.tgz",
       "integrity": "sha512-FqUYQ+8o158GyGTrMFJms9qh3CqTKvAqgqsTnkLI8sKu0028orqBhxNMFkFen0zGyg6epACD32pjVk58ngIErQ==",
       "engines": {
         "node": ">=0.10"
@@ -10942,7 +10876,6 @@
     },
     "node_modules/filter-obj": {
       "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/filter-obj/-/filter-obj-1.1.0.tgz",
       "integrity": "sha512-8rXg1ZnX7xzy2NGDVkBVaAy+lSlPNwad13BtgSlLuxfIslyt5Vg64U7tFcCt4WS1R0hvtnQybT/IyCkGZ3DpXQ==",
       "engines": {
         "node": ">=0.10.0"
@@ -16905,15 +16838,8 @@
       "integrity": "sha512-2ZTgtl0nJsO0KQCjEpxcIr5D+Yv90plTitZt9JBfQvVJDS5seMl3FOvsh3+9CoYWXf/1l5OaZzzF6nDm4cagaQ=="
     },
     "node_modules/nanoid": {
-      "version": "3.3.6",
-      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.6.tgz",
-      "integrity": "sha512-BGcqMMJuToF7i1rt+2PWSNVnWIkGCU78jBG3RxO/bZlnZPK2Cmi2QaffxGO/2RvWi9sL+FAiRiXMgsyxQ1DIDA==",
-      "funding": [
-        {
-          "type": "github",
-          "url": "https://github.com/sponsors/ai"
-        }
-      ],
+      "version": "3.3.4",
+      "integrity": "sha512-MqBkQh/OHTS2egovRtLk45wEyNXwF+cokD+1YPf9u5VfJiRdAiRwB2froX5Co9Rh20xs4siNPm8naNotSD6RBw==",
       "bin": {
         "nanoid": "bin/nanoid.cjs"
       },
@@ -17965,11 +17891,10 @@
       }
     },
     "node_modules/query-string": {
-      "version": "7.1.3",
-      "resolved": "https://registry.npmjs.org/query-string/-/query-string-7.1.3.tgz",
-      "integrity": "sha512-hh2WYhq4fi8+b+/2Kg9CEge4fDPvHS534aOOvOZeQ3+Vf2mCFsaFBYj0i+iXcAq6I9Vzp5fjMFBlONvayDC1qg==",
+      "version": "6.14.1",
+      "integrity": "sha512-XDxAeVmpfu1/6IjyT/gXHOl+S0vQ9owggJ30hhWKdHAsNPOcasn5o9BW0eejZqL2e4vMjhAxoW3jVHcD6mbcYw==",
       "dependencies": {
-        "decode-uri-component": "^0.2.2",
+        "decode-uri-component": "^0.2.0",
         "filter-obj": "^1.1.0",
         "split-on-first": "^1.0.0",
         "strict-uri-encode": "^2.0.0"
@@ -18158,7 +18083,6 @@
     },
     "node_modules/react-native-camera-kit": {
       "version": "13.0.0",
-      "resolved": "https://registry.npmjs.org/react-native-camera-kit/-/react-native-camera-kit-13.0.0.tgz",
       "integrity": "sha512-fnkyivCG2xzS+14/doP8pCAYNafYaTyg5J0t+JJltJdgKSHf328OG44Rd+fnbbEOydZxgy/bcuLB24R0kCbynw==",
       "dependencies": {
         "lodash": "^4.14.2"
@@ -18351,9 +18275,9 @@
       "license": "MIT"
     },
     "node_modules/react-native-image-picker": {
-      "version": "7.0.2",
-      "resolved": "https://registry.npmjs.org/react-native-image-picker/-/react-native-image-picker-7.0.2.tgz",
-      "integrity": "sha512-2Y+TMzv2l32IikqYpj4WOqkYvv42SXkSvL9zAo0XdhA3Rbe3lc0Oz12KlR6M2bGh8RxXz5lUrs+9mxy/GpcLIg==",
+      "version": "4.8.5",
+      "resolved": "https://registry.npmjs.org/react-native-image-picker/-/react-native-image-picker-4.8.5.tgz",
+      "integrity": "sha512-+pQxkjO8cKv4RKTHOFS0fSHQ11HkWgb+imUPSOS8mwoChkR33aSuzV/6P4t9JCJgsus4qLAlB6BUosdIxw7GTA==",
       "peerDependencies": {
         "react": "*",
         "react-native": "*"
@@ -18371,6 +18295,13 @@
         "react-native": "*"
       }
     },
+    "node_modules/react-native-iphone-x-helper": {
+      "version": "1.3.1",
+      "integrity": "sha512-HOf0jzRnq2/aFUcdCJ9w9JGzN3gdEg0zFE4FyYlp4jtidqU03D5X7ZegGKfT1EWteR0gPBGp9ye5T5FvSWi9Yg==",
+      "peerDependencies": {
+        "react-native": ">=0.42.0"
+      }
+    },
     "node_modules/react-native-keychain": {
       "version": "8.1.2",
       "resolved": "https://registry.npmjs.org/react-native-keychain/-/react-native-keychain-8.1.2.tgz",
@@ -18386,9 +18317,9 @@
       }
     },
     "node_modules/react-native-localize": {
-      "version": "3.0.3",
-      "resolved": "https://registry.npmjs.org/react-native-localize/-/react-native-localize-3.0.3.tgz",
-      "integrity": "sha512-wlVIyg9lQac/Mg23aVKQAcnRkJgROjTUxZHFO4oqKpXkMa1XkvZ4DhhFc6TPnZX0O8YKvrTUsN3x8xMzVpAosg==",
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/react-native-localize/-/react-native-localize-3.0.2.tgz",
+      "integrity": "sha512-/l/oE1LVNgIRRhLbhmfFMHiWV0xhUn0A0iz1ytLVRYywL7FTp8Rx2vkJS/q/RpExDvV7yLw2493XZBYIM1dnLQ==",
       "peerDependencies": {
         "react": ">=18.1.0",
         "react-native": ">=0.70.0",
@@ -18412,6 +18343,12 @@
         "react-native": ">=0.65.0"
       }
     },
+    "node_modules/react-native-navigation-bar-color": {
+      "version": "2.0.1",
+      "resolved": "git+ssh://git@github.com/BlueWallet/react-native-navigation-bar-color.git#3b2894ae62fbce99a3bd24105f0921cebaef5c94",
+      "integrity": "sha512-tFVsXyfvEQ8FJM9r5k7buLAMC1QMHEo3uFdXYDw86Y3iQiHA4QnE2KCiJxjF7NhkL6HFVRSDSVv0r2qEhs1pMg==",
+      "license": "MIT"
+    },
     "node_modules/react-native-obscure": {
       "name": "@talaikis/react-native-obscure",
       "version": "0.0.3",
@@ -18517,35 +18454,26 @@
       }
     },
     "node_modules/react-native-reanimated": {
-      "version": "3.5.4",
-      "resolved": "https://registry.npmjs.org/react-native-reanimated/-/react-native-reanimated-3.5.4.tgz",
-      "integrity": "sha512-8we9LLDO1o4Oj9/DICeEJ2K1tjfqkJagqQUglxeUAkol/HcEJ6PGxIrpBcNryLqCDYEcu6FZWld/FzizBIw6bg==",
+      "version": "2.17.0",
+      "resolved": "https://registry.npmjs.org/react-native-reanimated/-/react-native-reanimated-2.17.0.tgz",
+      "integrity": "sha512-bVy+FUEaHXq4i+aPPqzGeor1rG4scgVNBbBz21ohvC7iMpB9IIgvGsmy1FAoodZhZ5sa3EPF67Rcec76F1PXlQ==",
       "dependencies": {
         "@babel/plugin-transform-object-assign": "^7.16.7",
         "@babel/preset-typescript": "^7.16.7",
-        "convert-source-map": "^2.0.0",
-        "invariant": "^2.2.4"
+        "invariant": "^2.2.4",
+        "lodash.isequal": "^4.5.0",
+        "setimmediate": "^1.0.5",
+        "string-hash-64": "^1.0.3"
       },
       "peerDependencies": {
         "@babel/core": "^7.0.0-0",
-        "@babel/plugin-proposal-nullish-coalescing-operator": "^7.0.0-0",
-        "@babel/plugin-proposal-optional-chaining": "^7.0.0-0",
-        "@babel/plugin-transform-arrow-functions": "^7.0.0-0",
-        "@babel/plugin-transform-shorthand-properties": "^7.0.0-0",
-        "@babel/plugin-transform-template-literals": "^7.0.0-0",
         "react": "*",
         "react-native": "*"
       }
     },
-    "node_modules/react-native-reanimated/node_modules/convert-source-map": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
-      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg=="
-    },
     "node_modules/react-native-safe-area-context": {
-      "version": "4.7.4",
-      "resolved": "https://registry.npmjs.org/react-native-safe-area-context/-/react-native-safe-area-context-4.7.4.tgz",
-      "integrity": "sha512-3LR3DCq9pdzlbq6vsHGWBFehXAKDh2Ljug6jWhLWs1QFuJHM6AS2+mH2JfKlB2LqiSFZOBcZfHQFz0sGaA3uqg==",
+      "version": "3.4.1",
+      "integrity": "sha512-xfpVd0CiZR7oBhuwJ2HcZMehg5bjha1Ohu1XHpcT+9ykula0TgovH2BNU0R5Krzf/jBR1LMjR6VabxdlUjqxcA==",
       "peerDependencies": {
         "react": "*",
         "react-native": "*"
@@ -18566,9 +18494,9 @@
       "integrity": "sha512-cSfRWjXJtZQeRuZGVvDrJroCR5V2UvBNUMHsPCdNYzuAG8b9V8aAy3KUcdQrGQPXs17Y+ojbPh1aOCplg9YR9g=="
     },
     "node_modules/react-native-screens": {
-      "version": "3.27.0",
-      "resolved": "https://registry.npmjs.org/react-native-screens/-/react-native-screens-3.27.0.tgz",
-      "integrity": "sha512-FzSUygZ7yLQyhDJZsl7wU68LwRpVtVdqOPWribmEU3Tf26FohFGGcfJx1D8lf2V2Teb8tI+IaLnXCKbyh2xffA==",
+      "version": "3.20.0",
+      "resolved": "https://registry.npmjs.org/react-native-screens/-/react-native-screens-3.20.0.tgz",
+      "integrity": "sha512-joWUKWAVHxymP3mL9gYApFHAsbd9L6ZcmpoZa6Sl3W/82bvvNVMqcfP7MeNqVCg73qZ8yL4fW+J/syusHleUgg==",
       "dependencies": {
         "react-freeze": "^1.0.0",
         "warn-once": "^0.1.0"
@@ -18584,12 +18512,9 @@
       "license": "ISC"
     },
     "node_modules/react-native-share": {
-      "version": "10.0.1",
-      "resolved": "https://registry.npmjs.org/react-native-share/-/react-native-share-10.0.1.tgz",
-      "integrity": "sha512-dEn4DTf3/qQnLuwXkZtuFkF3pq7a4LDqmOY+R/kcgeuKIBWheGzCxHXVD7XGm6qhwXXkiD0SOiDUrGjnXa96eg==",
-      "engines": {
-        "node": ">=16"
-      }
+      "version": "9.4.1",
+      "resolved": "https://registry.npmjs.org/react-native-share/-/react-native-share-9.4.1.tgz",
+      "integrity": "sha512-jm4qA5J5+ytWA8UFg6s8iEfdZYGPW+t5oreSuzrPt0assjvBUlFaoqYGGwGR5RJ8BIpjzOJYvx/c9MjXB4ApUg=="
     },
     "node_modules/react-native-size-matters": {
       "version": "0.3.1",
@@ -18661,9 +18586,9 @@
       }
     },
     "node_modules/react-native-vector-icons": {
-      "version": "10.0.2",
-      "resolved": "https://registry.npmjs.org/react-native-vector-icons/-/react-native-vector-icons-10.0.2.tgz",
-      "integrity": "sha512-ZwhUkJhIMkGL3cW7IT4sEEHu2AOzerqsRQ73UzXsB+ecBpVK5bRmp0XswiQleZKZalZfs/WIfWLXLfTQHcQo6A==",
+      "version": "10.0.1",
+      "resolved": "https://registry.npmjs.org/react-native-vector-icons/-/react-native-vector-icons-10.0.1.tgz",
+      "integrity": "sha512-oqVyhSgK1wLm7JuN5yep+BCWb4F4C6qi2/mHGsdNqneGWn3MI9VVMX+AIkw0q9GsbY6QjhNd5sUanjRyDJfuUg==",
       "dependencies": {
         "prop-types": "^15.7.2",
         "yargs": "^16.1.1"
@@ -18927,9 +18852,9 @@
       "integrity": "sha512-k2d6ACCkiNYz222Fs/iNze30rRJ1iIicW7JuX/7/cozvih6YCkFZH+J6mAFDVgv0dRBaAyr4jDqC95R2y4IADg=="
     },
     "node_modules/realm": {
-      "version": "12.3.0",
-      "resolved": "https://registry.npmjs.org/realm/-/realm-12.3.0.tgz",
-      "integrity": "sha512-qlWu8RpgGQhCllwutGZUJ+B37AF+7RNNXlyo5SftZoQFiTKVlmhN5w6B2fBmTd7R9J7Tw+lJcYUbvCZuZ4es0w==",
+      "version": "12.2.1",
+      "resolved": "https://registry.npmjs.org/realm/-/realm-12.2.1.tgz",
+      "integrity": "sha512-r9lB5S3FiqS2QZmxRvwt8cRLAx/g8KGotz5neV/ky1AhG9b7FtqTwLyJwhVLjkstnV8j40GaY0xMjuAbURINDg==",
       "hasInstallScript": true,
       "dependencies": {
         "bson": "^4.7.2",
@@ -19444,6 +19369,10 @@
       "version": "2.0.0",
       "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw=="
     },
+    "node_modules/setimmediate": {
+      "version": "1.0.5",
+      "integrity": "sha512-MATJdZp8sLqDl/68LfQmbP8zKPLQNV6BIZoIgrscFDQ+RsvK/BxeDQOgyxKKoh0y/8h3BqVFnCqQ/gd+reiIXA=="
+    },
     "node_modules/setprototypeof": {
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
@@ -19640,7 +19569,6 @@
     },
     "node_modules/split-on-first": {
       "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/split-on-first/-/split-on-first-1.1.0.tgz",
       "integrity": "sha512-43ZssAJaMusuKWL8sKUBQXHWOpq8d6CfN/u1p4gUzfJkM05C8rxTmYrkIPTXapZpORA6LkkzcUulJ8FqA7Uudw==",
       "engines": {
         "node": ">=6"
@@ -19726,7 +19654,6 @@
     },
     "node_modules/strict-uri-encode": {
       "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-2.0.0.tgz",
       "integrity": "sha512-QwiXZgpRcKkhTj2Scnn++4PKtWsH0kpzZ62L2R6c/LUVYv7hVnZqcg2+sMuT6R7Jusu1vviK/MFsu6kNJfWlEQ==",
       "engines": {
         "node": ">=4"
@@ -19739,6 +19666,10 @@
         "safe-buffer": "~5.2.0"
       }
     },
+    "node_modules/string-hash-64": {
+      "version": "1.0.3",
+      "integrity": "sha512-D5OKWKvDhyVWWn2x5Y9b+37NUllks34q1dCDhk/vYcso9fmhs+Tl3KR/gE4v5UNj2UA35cnX4KdVVGkG1deKqw=="
+    },
     "node_modules/string-length": {
       "version": "4.0.2",
       "integrity": "sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==",
@@ -20704,14 +20635,6 @@
       "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",
       "integrity": "sha512-jmYNElW7yvO7TV33CjSmvSiE2yco3bV2czu/OzDKdMNVZQWfxCblURLhf+47syQRBntjfLdd/H0egrzIG+oaFQ=="
     },
-    "node_modules/use-latest-callback": {
-      "version": "0.1.7",
-      "resolved": "https://registry.npmjs.org/use-latest-callback/-/use-latest-callback-0.1.7.tgz",
-      "integrity": "sha512-Hlrl0lskgZZpo2vIpZ4rA7qA/rAGn2PcDvDH1M47AogqMPB0qlGEdsa66AVkIUiEEDpfxA9/N6hY6MqtaNoqWA==",
-      "peerDependencies": {
-        "react": ">=16.8"
-      }
-    },
     "node_modules/use-sync-external-store": {
       "version": "1.2.0",
       "integrity": "sha512-eEgnFxGQ1Ife9bzYs6VLi8/4X6CObHMw9Qr9tPY43iKwsPw8xE8+EFsf/2cFZ5S3esXgpWgtSCtLNS41F+sKPA==",
@@ -23744,9 +23667,9 @@
       }
     },
     "@react-native-async-storage/async-storage": {
-      "version": "1.19.5",
-      "resolved": "https://registry.npmjs.org/@react-native-async-storage/async-storage/-/async-storage-1.19.5.tgz",
-      "integrity": "sha512-zLT7oNPXpW8BxJyHyq8AJbXtlHE/eonFWuJt44y0WeCGnp4KOJ8mfqD8mtAIKLyrYHHE1uadFe/s4C+diYAi8g==",
+      "version": "1.19.3",
+      "resolved": "https://registry.npmjs.org/@react-native-async-storage/async-storage/-/async-storage-1.19.3.tgz",
+      "integrity": "sha512-CwGfoHCWdPOTPS+2fW6YRE1fFBpT9++ahLEroX5hkgwyoQ+TkmjOaUxixdEIoVua9Pz5EF2pGOIJzqOTMWfBlA==",
       "requires": {
         "merge-options": "^3.0.4"
       }
@@ -24921,83 +24844,38 @@
       }
     },
     "@react-navigation/core": {
-      "version": "6.4.10",
-      "resolved": "https://registry.npmjs.org/@react-navigation/core/-/core-6.4.10.tgz",
-      "integrity": "sha512-oYhqxETRHNHKsipm/BtGL0LI43Hs2VSFoWMbBdHK9OqgQPjTVUitslgLcPpo4zApCcmBWoOLX2qPxhsBda644A==",
+      "version": "5.16.1",
+      "integrity": "sha512-3AToC7vPNeSNcHFLd1h71L6u34hfXoRAS1CxF9Fc4uC8uOrVqcNvphpeFbE0O9Bw6Zpl0BnMFl7E5gaL3KGzNA==",
       "requires": {
-        "@react-navigation/routers": "^6.1.9",
+        "@react-navigation/routers": "^5.7.4",
         "escape-string-regexp": "^4.0.0",
-        "nanoid": "^3.1.23",
-        "query-string": "^7.1.3",
-        "react-is": "^16.13.0",
-        "use-latest-callback": "^0.1.7"
+        "nanoid": "^3.1.15",
+        "query-string": "^6.13.6",
+        "react-is": "^16.13.0"
       }
     },
     "@react-navigation/drawer": {
-      "version": "6.6.6",
-      "resolved": "https://registry.npmjs.org/@react-navigation/drawer/-/drawer-6.6.6.tgz",
-      "integrity": "sha512-DW/oNRisSOGOqvZfCzfhKBxnzT97Teqtg1Gal85g+K3gnVbM1jOBE2PdnYsKU0fULfFtDwvp/QZSbcgjDpr12A==",
+      "version": "5.12.9",
+      "integrity": "sha512-SYb2BCEAn+BiEwC6WBfCzs1VlWD+ZdQbxmsim6vo1o+ndPW2e+kiq7FXKRs0vUXhQRZVl2oOB3vBn0c3YCllQg==",
       "requires": {
-        "@react-navigation/elements": "^1.3.21",
-        "color": "^4.2.3",
-        "warn-once": "^0.1.0"
-      },
-      "dependencies": {
-        "color": {
-          "version": "4.2.3",
-          "resolved": "https://registry.npmjs.org/color/-/color-4.2.3.tgz",
-          "integrity": "sha512-1rXeuUUiGGrykh+CeBdu5Ie7OJwinCgQY0bc7GCRxy5xVHy+moaqkpL/jqQq0MtQOeYcrqEz4abc5f0KtU7W4A==",
-          "requires": {
-            "color-convert": "^2.0.1",
-            "color-string": "^1.9.0"
-          }
-        },
-        "color-convert": {
-          "version": "2.0.1",
-          "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
-          "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
-          "requires": {
-            "color-name": "~1.1.4"
-          }
-        },
-        "color-name": {
-          "version": "1.1.4",
-          "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
-          "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA=="
-        }
+        "color": "^3.1.3",
+        "react-native-iphone-x-helper": "^1.3.0"
       }
     },
-    "@react-navigation/elements": {
-      "version": "1.3.21",
-      "resolved": "https://registry.npmjs.org/@react-navigation/elements/-/elements-1.3.21.tgz",
-      "integrity": "sha512-eyS2C6McNR8ihUoYfc166O1D8VYVh9KIl0UQPI8/ZJVsStlfSTgeEEh+WXge6+7SFPnZ4ewzEJdSAHH+jzcEfg=="
-    },
     "@react-navigation/native": {
-      "version": "6.1.9",
-      "resolved": "https://registry.npmjs.org/@react-navigation/native/-/native-6.1.9.tgz",
-      "integrity": "sha512-AMuJDpwXE7UlfyhIXaUCCynXmv69Kb8NzKgKJO7v0k0L+u6xUTbt6xvshmJ79vsvaFyaEH9Jg5FMzek5/S5qNw==",
+      "version": "5.9.8",
+      "integrity": "sha512-DNbcDHXQPSFDLn51kkVVJjT3V7jJy2GztNYZe/2bEg29mi5QEcHHcpifjMCtyFKntAOWzKlG88UicIQ17UEghg==",
       "requires": {
-        "@react-navigation/core": "^6.4.10",
+        "@react-navigation/core": "^5.16.1",
         "escape-string-regexp": "^4.0.0",
-        "fast-deep-equal": "^3.1.3",
-        "nanoid": "^3.1.23"
-      }
-    },
-    "@react-navigation/native-stack": {
-      "version": "6.9.17",
-      "resolved": "https://registry.npmjs.org/@react-navigation/native-stack/-/native-stack-6.9.17.tgz",
-      "integrity": "sha512-X8p8aS7JptQq7uZZNFEvfEcPf6tlK4PyVwYDdryRbG98B4bh2wFQYMThxvqa+FGEN7USEuHdv2mF0GhFKfX0ew==",
-      "requires": {
-        "@react-navigation/elements": "^1.3.21",
-        "warn-once": "^0.1.0"
+        "nanoid": "^3.1.15"
       }
     },
     "@react-navigation/routers": {
-      "version": "6.1.9",
-      "resolved": "https://registry.npmjs.org/@react-navigation/routers/-/routers-6.1.9.tgz",
-      "integrity": "sha512-lTM8gSFHSfkJvQkxacGM6VJtBt61ip2XO54aNfswD+KMw6eeZ4oehl7m0me3CR9hnDE4+60iAZR8sAhvCiI3NA==",
+      "version": "5.7.4",
+      "integrity": "sha512-0N202XAqsU/FlE53Nmh6GHyMtGm7g6TeC93mrFAFJOqGRKznT0/ail+cYlU6tNcPA9AHzZu1Modw1eoDINSliQ==",
       "requires": {
-        "nanoid": "^3.1.23"
+        "nanoid": "^3.1.15"
       }
     },
     "@remobile/react-native-qrcode-local-image": {
@@ -27257,7 +27135,6 @@
     },
     "decode-uri-component": {
       "version": "0.2.2",
-      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.2.tgz",
       "integrity": "sha512-FqUYQ+8o158GyGTrMFJms9qh3CqTKvAqgqsTnkLI8sKu0028orqBhxNMFkFen0zGyg6epACD32pjVk58ngIErQ=="
     },
     "decompress-response": {
@@ -28817,7 +28694,6 @@
     },
     "filter-obj": {
       "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/filter-obj/-/filter-obj-1.1.0.tgz",
       "integrity": "sha512-8rXg1ZnX7xzy2NGDVkBVaAy+lSlPNwad13BtgSlLuxfIslyt5Vg64U7tFcCt4WS1R0hvtnQybT/IyCkGZ3DpXQ=="
     },
     "finalhandler": {
@@ -33297,9 +33173,8 @@
       "integrity": "sha512-2ZTgtl0nJsO0KQCjEpxcIr5D+Yv90plTitZt9JBfQvVJDS5seMl3FOvsh3+9CoYWXf/1l5OaZzzF6nDm4cagaQ=="
     },
     "nanoid": {
-      "version": "3.3.6",
-      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.6.tgz",
-      "integrity": "sha512-BGcqMMJuToF7i1rt+2PWSNVnWIkGCU78jBG3RxO/bZlnZPK2Cmi2QaffxGO/2RvWi9sL+FAiRiXMgsyxQ1DIDA=="
+      "version": "3.3.4",
+      "integrity": "sha512-MqBkQh/OHTS2egovRtLk45wEyNXwF+cokD+1YPf9u5VfJiRdAiRwB2froX5Co9Rh20xs4siNPm8naNotSD6RBw=="
     },
     "napi-build-utils": {
       "version": "1.0.2",
@@ -34054,11 +33929,10 @@
       }
     },
     "query-string": {
-      "version": "7.1.3",
-      "resolved": "https://registry.npmjs.org/query-string/-/query-string-7.1.3.tgz",
-      "integrity": "sha512-hh2WYhq4fi8+b+/2Kg9CEge4fDPvHS534aOOvOZeQ3+Vf2mCFsaFBYj0i+iXcAq6I9Vzp5fjMFBlONvayDC1qg==",
+      "version": "6.14.1",
+      "integrity": "sha512-XDxAeVmpfu1/6IjyT/gXHOl+S0vQ9owggJ30hhWKdHAsNPOcasn5o9BW0eejZqL2e4vMjhAxoW3jVHcD6mbcYw==",
       "requires": {
-        "decode-uri-component": "^0.2.2",
+        "decode-uri-component": "^0.2.0",
         "filter-obj": "^1.1.0",
         "split-on-first": "^1.0.0",
         "strict-uri-encode": "^2.0.0"
@@ -34282,7 +34156,6 @@
     },
     "react-native-camera-kit": {
       "version": "13.0.0",
-      "resolved": "https://registry.npmjs.org/react-native-camera-kit/-/react-native-camera-kit-13.0.0.tgz",
       "integrity": "sha512-fnkyivCG2xzS+14/doP8pCAYNafYaTyg5J0t+JJltJdgKSHf328OG44Rd+fnbbEOydZxgy/bcuLB24R0kCbynw==",
       "requires": {
         "lodash": "^4.14.2"
@@ -34410,9 +34283,9 @@
       "from": "react-native-idle-timer@https://github.com/BlueWallet/react-native-idle-timer#8587876d68ab5920e79619726aeca9e672beaf2b"
     },
     "react-native-image-picker": {
-      "version": "7.0.2",
-      "resolved": "https://registry.npmjs.org/react-native-image-picker/-/react-native-image-picker-7.0.2.tgz",
-      "integrity": "sha512-2Y+TMzv2l32IikqYpj4WOqkYvv42SXkSvL9zAo0XdhA3Rbe3lc0Oz12KlR6M2bGh8RxXz5lUrs+9mxy/GpcLIg=="
+      "version": "4.8.5",
+      "resolved": "https://registry.npmjs.org/react-native-image-picker/-/react-native-image-picker-4.8.5.tgz",
+      "integrity": "sha512-+pQxkjO8cKv4RKTHOFS0fSHQ11HkWgb+imUPSOS8mwoChkR33aSuzV/6P4t9JCJgsus4qLAlB6BUosdIxw7GTA=="
     },
     "react-native-ios-context-menu": {
       "version": "git+ssh://git@github.com/BlueWallet/react-native-ios-context-menu.git#e5c1217cd220bfab6e6d9a7c65838545082e3f8e",
@@ -34421,6 +34294,10 @@
         "@dominicstop/ts-event-emitter": "^1.1.0"
       }
     },
+    "react-native-iphone-x-helper": {
+      "version": "1.3.1",
+      "integrity": "sha512-HOf0jzRnq2/aFUcdCJ9w9JGzN3gdEg0zFE4FyYlp4jtidqU03D5X7ZegGKfT1EWteR0gPBGp9ye5T5FvSWi9Yg=="
+    },
     "react-native-keychain": {
       "version": "8.1.2",
       "resolved": "https://registry.npmjs.org/react-native-keychain/-/react-native-keychain-8.1.2.tgz",
@@ -34432,9 +34309,9 @@
       "integrity": "sha512-KflAXZcEg54PXkLyflaSZQ3PJp4uC4whM7nT/Uot9m0e/qxFV3p6uor1983D1YOBJbJN7rrWdqIjq0T42jOJyA=="
     },
     "react-native-localize": {
-      "version": "3.0.3",
-      "resolved": "https://registry.npmjs.org/react-native-localize/-/react-native-localize-3.0.3.tgz",
-      "integrity": "sha512-wlVIyg9lQac/Mg23aVKQAcnRkJgROjTUxZHFO4oqKpXkMa1XkvZ4DhhFc6TPnZX0O8YKvrTUsN3x8xMzVpAosg=="
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/react-native-localize/-/react-native-localize-3.0.2.tgz",
+      "integrity": "sha512-/l/oE1LVNgIRRhLbhmfFMHiWV0xhUn0A0iz1ytLVRYywL7FTp8Rx2vkJS/q/RpExDvV7yLw2493XZBYIM1dnLQ=="
     },
     "react-native-modal": {
       "version": "13.0.1",
@@ -34444,6 +34321,11 @@
         "react-native-animatable": "1.3.3"
       }
     },
+    "react-native-navigation-bar-color": {
+      "version": "git+ssh://git@github.com/BlueWallet/react-native-navigation-bar-color.git#3b2894ae62fbce99a3bd24105f0921cebaef5c94",
+      "integrity": "sha512-tFVsXyfvEQ8FJM9r5k7buLAMC1QMHEo3uFdXYDw86Y3iQiHA4QnE2KCiJxjF7NhkL6HFVRSDSVv0r2qEhs1pMg==",
+      "from": "react-native-navigation-bar-color@https://github.com/BlueWallet/react-native-navigation-bar-color#3b2894ae62fbce99a3bd24105f0921cebaef5c94"
+    },
     "react-native-obscure": {
       "version": "git+ssh://git@github.com/BlueWallet/react-native-obscure.git#f4b83b4a261e39b1f5ed4a45ac5bcabc8a59eadb",
       "integrity": "sha512-bmzbnlXII8hW7steqwouzQW9cJ+mdA8HJ8pWkb0KD60jC5dYgJ0e66wgUiSTDNFPrvlEKriE4eEanoJFj7Q9pg==",
@@ -34516,27 +34398,21 @@
       }
     },
     "react-native-reanimated": {
-      "version": "3.5.4",
-      "resolved": "https://registry.npmjs.org/react-native-reanimated/-/react-native-reanimated-3.5.4.tgz",
-      "integrity": "sha512-8we9LLDO1o4Oj9/DICeEJ2K1tjfqkJagqQUglxeUAkol/HcEJ6PGxIrpBcNryLqCDYEcu6FZWld/FzizBIw6bg==",
+      "version": "2.17.0",
+      "resolved": "https://registry.npmjs.org/react-native-reanimated/-/react-native-reanimated-2.17.0.tgz",
+      "integrity": "sha512-bVy+FUEaHXq4i+aPPqzGeor1rG4scgVNBbBz21ohvC7iMpB9IIgvGsmy1FAoodZhZ5sa3EPF67Rcec76F1PXlQ==",
       "requires": {
         "@babel/plugin-transform-object-assign": "^7.16.7",
         "@babel/preset-typescript": "^7.16.7",
-        "convert-source-map": "^2.0.0",
-        "invariant": "^2.2.4"
-      },
-      "dependencies": {
-        "convert-source-map": {
-          "version": "2.0.0",
-          "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
-          "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg=="
-        }
+        "invariant": "^2.2.4",
+        "lodash.isequal": "^4.5.0",
+        "setimmediate": "^1.0.5",
+        "string-hash-64": "^1.0.3"
       }
     },
     "react-native-safe-area-context": {
-      "version": "4.7.4",
-      "resolved": "https://registry.npmjs.org/react-native-safe-area-context/-/react-native-safe-area-context-4.7.4.tgz",
-      "integrity": "sha512-3LR3DCq9pdzlbq6vsHGWBFehXAKDh2Ljug6jWhLWs1QFuJHM6AS2+mH2JfKlB2LqiSFZOBcZfHQFz0sGaA3uqg=="
+      "version": "3.4.1",
+      "integrity": "sha512-xfpVd0CiZR7oBhuwJ2HcZMehg5bjha1Ohu1XHpcT+9ykula0TgovH2BNU0R5Krzf/jBR1LMjR6VabxdlUjqxcA=="
     },
     "react-native-safe-modules": {
       "version": "1.0.3",
@@ -34552,9 +34428,9 @@
       }
     },
     "react-native-screens": {
-      "version": "3.27.0",
-      "resolved": "https://registry.npmjs.org/react-native-screens/-/react-native-screens-3.27.0.tgz",
-      "integrity": "sha512-FzSUygZ7yLQyhDJZsl7wU68LwRpVtVdqOPWribmEU3Tf26FohFGGcfJx1D8lf2V2Teb8tI+IaLnXCKbyh2xffA==",
+      "version": "3.20.0",
+      "resolved": "https://registry.npmjs.org/react-native-screens/-/react-native-screens-3.20.0.tgz",
+      "integrity": "sha512-joWUKWAVHxymP3mL9gYApFHAsbd9L6ZcmpoZa6Sl3W/82bvvNVMqcfP7MeNqVCg73qZ8yL4fW+J/syusHleUgg==",
       "requires": {
         "react-freeze": "^1.0.0",
         "warn-once": "^0.1.0"
@@ -34565,9 +34441,9 @@
       "from": "react-native-secure-key-store@https://github.com/BlueWallet/react-native-secure-key-store#2076b48"
     },
     "react-native-share": {
-      "version": "10.0.1",
-      "resolved": "https://registry.npmjs.org/react-native-share/-/react-native-share-10.0.1.tgz",
-      "integrity": "sha512-dEn4DTf3/qQnLuwXkZtuFkF3pq7a4LDqmOY+R/kcgeuKIBWheGzCxHXVD7XGm6qhwXXkiD0SOiDUrGjnXa96eg=="
+      "version": "9.4.1",
+      "resolved": "https://registry.npmjs.org/react-native-share/-/react-native-share-9.4.1.tgz",
+      "integrity": "sha512-jm4qA5J5+ytWA8UFg6s8iEfdZYGPW+t5oreSuzrPt0assjvBUlFaoqYGGwGR5RJ8BIpjzOJYvx/c9MjXB4ApUg=="
     },
     "react-native-size-matters": {
       "version": "0.3.1",
@@ -34609,9 +34485,9 @@
       }
     },
     "react-native-vector-icons": {
-      "version": "10.0.2",
-      "resolved": "https://registry.npmjs.org/react-native-vector-icons/-/react-native-vector-icons-10.0.2.tgz",
-      "integrity": "sha512-ZwhUkJhIMkGL3cW7IT4sEEHu2AOzerqsRQ73UzXsB+ecBpVK5bRmp0XswiQleZKZalZfs/WIfWLXLfTQHcQo6A==",
+      "version": "10.0.1",
+      "resolved": "https://registry.npmjs.org/react-native-vector-icons/-/react-native-vector-icons-10.0.1.tgz",
+      "integrity": "sha512-oqVyhSgK1wLm7JuN5yep+BCWb4F4C6qi2/mHGsdNqneGWn3MI9VVMX+AIkw0q9GsbY6QjhNd5sUanjRyDJfuUg==",
       "requires": {
         "prop-types": "^15.7.2",
         "yargs": "^16.1.1"
@@ -34720,9 +34596,9 @@
       "integrity": "sha512-k2d6ACCkiNYz222Fs/iNze30rRJ1iIicW7JuX/7/cozvih6YCkFZH+J6mAFDVgv0dRBaAyr4jDqC95R2y4IADg=="
     },
     "realm": {
-      "version": "12.3.0",
-      "resolved": "https://registry.npmjs.org/realm/-/realm-12.3.0.tgz",
-      "integrity": "sha512-qlWu8RpgGQhCllwutGZUJ+B37AF+7RNNXlyo5SftZoQFiTKVlmhN5w6B2fBmTd7R9J7Tw+lJcYUbvCZuZ4es0w==",
+      "version": "12.2.1",
+      "resolved": "https://registry.npmjs.org/realm/-/realm-12.2.1.tgz",
+      "integrity": "sha512-r9lB5S3FiqS2QZmxRvwt8cRLAx/g8KGotz5neV/ky1AhG9b7FtqTwLyJwhVLjkstnV8j40GaY0xMjuAbURINDg==",
       "requires": {
         "bson": "^4.7.2",
         "debug": "^4.3.4",
@@ -35089,6 +34965,10 @@
       "version": "2.0.0",
       "integrity": "sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw=="
     },
+    "setimmediate": {
+      "version": "1.0.5",
+      "integrity": "sha512-MATJdZp8sLqDl/68LfQmbP8zKPLQNV6BIZoIgrscFDQ+RsvK/BxeDQOgyxKKoh0y/8h3BqVFnCqQ/gd+reiIXA=="
+    },
     "setprototypeof": {
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
@@ -35228,7 +35108,6 @@
     },
     "split-on-first": {
       "version": "1.1.0",
-      "resolved": "https://registry.npmjs.org/split-on-first/-/split-on-first-1.1.0.tgz",
       "integrity": "sha512-43ZssAJaMusuKWL8sKUBQXHWOpq8d6CfN/u1p4gUzfJkM05C8rxTmYrkIPTXapZpORA6LkkzcUulJ8FqA7Uudw=="
     },
     "sprintf-js": {
@@ -35300,7 +35179,6 @@
     },
     "strict-uri-encode": {
       "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/strict-uri-encode/-/strict-uri-encode-2.0.0.tgz",
       "integrity": "sha512-QwiXZgpRcKkhTj2Scnn++4PKtWsH0kpzZ62L2R6c/LUVYv7hVnZqcg2+sMuT6R7Jusu1vviK/MFsu6kNJfWlEQ=="
     },
     "string_decoder": {
@@ -35310,6 +35188,10 @@
         "safe-buffer": "~5.2.0"
       }
     },
+    "string-hash-64": {
+      "version": "1.0.3",
+      "integrity": "sha512-D5OKWKvDhyVWWn2x5Y9b+37NUllks34q1dCDhk/vYcso9fmhs+Tl3KR/gE4v5UNj2UA35cnX4KdVVGkG1deKqw=="
+    },
     "string-length": {
       "version": "4.0.2",
       "integrity": "sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==",
@@ -36013,11 +35895,6 @@
         "requires-port": "^1.0.0"
       }
     },
-    "use-latest-callback": {
-      "version": "0.1.7",
-      "resolved": "https://registry.npmjs.org/use-latest-callback/-/use-latest-callback-0.1.7.tgz",
-      "integrity": "sha512-Hlrl0lskgZZpo2vIpZ4rA7qA/rAGn2PcDvDH1M47AogqMPB0qlGEdsa66AVkIUiEEDpfxA9/N6hY6MqtaNoqWA=="
-    },
     "use-sync-external-store": {
       "version": "1.2.0",
       "integrity": "sha512-eEgnFxGQ1Ife9bzYs6VLi8/4X6CObHMw9Qr9tPY43iKwsPw8xE8+EFsf/2cFZ5S3esXgpWgtSCtLNS41F+sKPA=="
diff --git a/package.json b/package.json
index 9a8e2324..b4d190a4 100644
--- a/package.json
+++ b/package.json
@@ -53,7 +53,7 @@
     "android:clean": "cd android;  ./gradlew clean ; cd .. ; npm run android",
     "ios": "react-native run-ios",
     "postinstall": "rn-nodeify --install buffer,events,process,stream,inherits,path,assert,crypto --hack; npm run releasenotes2json; npm run branch2json; npm run podinstall; npm run patches",
-    "patches": "patch -p1   < scripts/react-native-tor.patch; patch -p1   < scripts/react-native-tor-ios.patch; patch -p1   < scripts/rn-ldk.patch; patch -p1   < scripts/react-native-camera-kit.patch",
+    "patches": "patch -p1   < scripts/react-native-tor.patch; patch -p1   < scripts/rn-ldk.patch",
     "test": "npm run tslint && npm run lint && npm run unit && npm run jest",
     "jest": "jest -b tests/integration/*",
     "windowspatches": "./scripts/windows-patches.sh",
@@ -101,12 +101,11 @@
     "@keystonehq/bc-ur-registry": "0.6.4",
     "@ngraveio/bc-ur": "1.1.6",
     "@noble/secp256k1": "1.6.3",
-    "@react-native-async-storage/async-storage": "1.19.5",
+    "@react-native-async-storage/async-storage": "1.19.3",
     "@react-native-clipboard/clipboard": "1.12.1",
     "@react-native-community/push-notification-ios": "1.11.0",
-    "@react-navigation/drawer": "6.6.6",
-    "@react-navigation/native": "6.1.9",
-    "@react-navigation/native-stack": "6.9.17",
+    "@react-navigation/drawer": "5.12.9",
+    "@react-navigation/native": "5.9.8",
     "@remobile/react-native-qrcode-local-image": "https://github.com/BlueWallet/react-native-qrcode-local-image",
     "@spsina/bip47": "github:BlueWallet/bip47#0a2f02c90350802f2ec93afa4e6c8843be2d687c",
     "aez": "1.0.1",
@@ -159,12 +158,13 @@
     "react-native-handoff": "https://github.com/BlueWallet/react-native-handoff#31d005f93d31099d0e564590a3bbd052b8a02b39",
     "react-native-haptic-feedback": "2.2.0",
     "react-native-idle-timer": "https://github.com/BlueWallet/react-native-idle-timer#8587876d68ab5920e79619726aeca9e672beaf2b",
-    "react-native-image-picker": "7.0.2",
+    "react-native-image-picker": "4.8.5",
     "react-native-ios-context-menu": "github:BlueWallet/react-native-ios-context-menu#v1.15.3",
     "react-native-keychain": "8.1.2",
     "react-native-linear-gradient": "2.8.3",
-    "react-native-localize": "3.0.3",
+    "react-native-localize": "3.0.2",
     "react-native-modal": "13.0.1",
+    "react-native-navigation-bar-color": "https://github.com/BlueWallet/react-native-navigation-bar-color#3b2894ae62fbce99a3bd24105f0921cebaef5c94",
     "react-native-obscure": "https://github.com/BlueWallet/react-native-obscure.git#f4b83b4a261e39b1f5ed4a45ac5bcabc8a59eadb",
     "react-native-passcode-auth": "https://github.com/BlueWallet/react-native-passcode-auth#a2ff977ba92b36f8d0a5567f59c05cc608e8bd12",
     "react-native-permissions": "3.10.1",
@@ -175,20 +175,20 @@
     "react-native-quick-actions": "0.3.13",
     "react-native-randombytes": "3.6.1",
     "react-native-rate": "1.2.12",
-    "react-native-reanimated": "3.5.4",
-    "react-native-safe-area-context": "4.7.4",
-    "react-native-screens": "3.27.0",
+    "react-native-reanimated": "2.17.0",
+    "react-native-safe-area-context": "3.4.1",
+    "react-native-screens": "3.20.0",
     "react-native-secure-key-store": "https://github.com/BlueWallet/react-native-secure-key-store#2076b48",
-    "react-native-share": "10.0.1",
+    "react-native-share": "9.4.1",
     "react-native-svg": "13.14.0",
     "react-native-tcp-socket": "5.6.2",
     "react-native-tor": "0.1.8",
-    "react-native-vector-icons": "10.0.2",
+    "react-native-vector-icons": "10.0.1",
     "react-native-watch-connectivity": "1.1.0",
     "react-native-webview": "13.6.2",
     "react-native-widget-center": "https://github.com/BlueWallet/react-native-widget-center#a128c38",
     "readable-stream": "3.6.2",
-    "realm": "12.3.0",
+    "realm": "12.2.1",
     "rn-ldk": "github:BlueWallet/rn-ldk#v0.8.4",
     "rn-nodeify": "10.3.0",
     "scryptsy": "2.1.0",
diff --git a/screen/ActionSheet.ios.js b/screen/ActionSheet.ios.js
index 97c05061..dcb26fbf 100644
--- a/screen/ActionSheet.ios.js
+++ b/screen/ActionSheet.ios.js
@@ -2,7 +2,6 @@ import { ActionSheetIOS, InteractionManager } from 'react-native';
 
 export default class ActionSheet {
   static showActionSheetWithOptions(options, completion) {
-    ActionSheetIOS.dismissActionSheet();
     InteractionManager.runAfterInteractions(() => {
       ActionSheetIOS.showActionSheetWithOptions(options, completion);
     });
diff --git a/screen/lnd/browser.js b/screen/lnd/browser.js
index 6d1815c8..04ebdfa9 100644
--- a/screen/lnd/browser.js
+++ b/screen/lnd/browser.js
@@ -519,7 +519,7 @@ Browser.contextType = BlueStorageContext;
 
 Browser.navigationOptions = navigationStyle(
   {
-    headerBackVisible: false,
+    headerHideBackButton: true,
     closeButton: true,
     statusBarStyle: 'auto',
   },
diff --git a/screen/lnd/ldkInfo.tsx b/screen/lnd/ldkInfo.tsx
index dcd909a6..2b1bd288 100644
--- a/screen/lnd/ldkInfo.tsx
+++ b/screen/lnd/ldkInfo.tsx
@@ -1,19 +1,18 @@
 import React, { useContext, useEffect, useRef, useState } from 'react';
 import { View, StyleSheet, Text, Keyboard, TouchableOpacity, SectionList } from 'react-native';
 import { RouteProp, useNavigation, useRoute } from '@react-navigation/native';
-import { SafeBlueArea, BlueSpacing20, BlueSpacing10, BlueLoading, BlueTextCentered } from '../../BlueComponents';
+import { SafeBlueArea, BlueButton, BlueSpacing20, BlueSpacing10, BlueLoading, BlueTextCentered } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import { Chain } from '../../models/bitcoinUnits';
 import loc, { formatBalance } from '../../loc';
 import LNNodeBar from '../../components/LNNodeBar';
 import BottomModal from '../../components/BottomModal';
-import Button from '../../components/Button';
+import Button, { ButtonStyle } from '../../components/Button';
 import { Psbt } from 'bitcoinjs-lib';
 import { AbstractWallet, LightningLdkWallet } from '../../class';
 import alert from '../../components/Alert';
 import { useTheme } from '../../components/themes';
-import StyledButton, { StyledButtonType } from '../../components/StyledButton';
 const selectWallet = require('../../helpers/select-wallet');
 const confirm = require('../../helpers/confirm');
 const LdkNodeInfoChannelStatus = { ACTIVE: 'Active', INACTIVE: 'Inactive', PENDING: 'PENDING', STATUS: 'status' };
@@ -269,16 +268,12 @@ const LdkInfo = () => {
 
           {status === LdkNodeInfoChannelStatus.INACTIVE && (
             <>
-              <StyledButton
-                onPress={() => handleOnConnectPeerTapped(channelData)}
-                text={loc.lnd.reconnect_peer}
-                buttonStyle={StyledButtonType.grey}
-              />
+              <Button onPress={() => handleOnConnectPeerTapped(channelData)} text={loc.lnd.reconnect_peer} buttonStyle={ButtonStyle.grey} />
               <BlueSpacing20 />
             </>
           )}
 
-          <StyledButton onPress={() => closeChannel(channelData)} text={loc.lnd.close_channel} buttonStyle={StyledButtonType.destroy} />
+          <Button onPress={() => closeChannel(channelData)} text={loc.lnd.close_channel} buttonStyle={ButtonStyle.destroy} />
           <BlueSpacing20 />
         </View>
       </BottomModal>
@@ -323,7 +318,6 @@ const LdkInfo = () => {
     if (availableWallets.length === 0) {
       return alert(loc.lnd.refill_create);
     }
-    // @ts-ignore: Address types later
     navigate('LDKOpenChannelRoot', {
       screen: 'SelectWallet',
       params: {
@@ -332,7 +326,6 @@ const LdkInfo = () => {
         onWalletSelect: (selectedWallet: AbstractWallet) => {
           const selectedWalletID = selectedWallet.getID();
           selectedWallet.getAddressAsync().then(selectWallet.setRefundAddress);
-          // @ts-ignore: Address types later
           navigate('LDKOpenChannelRoot', {
             screen: 'LDKOpenChannelSetAmount',
             params: {
@@ -403,7 +396,7 @@ const LdkInfo = () => {
       <View style={styles.marginHorizontal16}>
         {wBalance && wBalance.confirmedBalance ? (
           <>
-            <Button
+            <BlueButton
               onPress={claimBalance}
               title={loc.formatString(loc.lnd.claim_balance, {
                 balance: formatBalance(wBalance.confirmedBalance, wallet.getPreferredBalanceUnit()),
@@ -418,7 +411,7 @@ const LdkInfo = () => {
           </Text>
         ) : null}
         {maturingEta ? <Text style={stylesHook.detailsText}>ETA: {maturingEta}</Text> : null}
-        <Button title={loc.lnd.new_channel} onPress={navigateToOpenPrivateChannel} disabled={isLoading} />
+        <Button text={loc.lnd.new_channel} onPress={navigateToOpenPrivateChannel} disabled={isLoading} />
         <BlueSpacing20 />
       </View>
     </SafeBlueArea>
diff --git a/screen/lnd/ldkOpenChannel.tsx b/screen/lnd/ldkOpenChannel.tsx
index 5d60f31f..690f7e2b 100644
--- a/screen/lnd/ldkOpenChannel.tsx
+++ b/screen/lnd/ldkOpenChannel.tsx
@@ -1,7 +1,7 @@
 import React, { useContext, useEffect, useRef, useState } from 'react';
 import { View, StyleSheet } from 'react-native';
 import { RouteProp, useNavigation, useRoute } from '@react-navigation/native';
-import { BlueLoading, SafeBlueArea, BlueDismissKeyboardInputAccessory, BlueSpacing20, BlueText } from '../../BlueComponents';
+import { BlueLoading, SafeBlueArea, BlueButton, BlueDismissKeyboardInputAccessory, BlueSpacing20, BlueText } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import BigNumber from 'bignumber.js';
@@ -16,7 +16,6 @@ import { Psbt } from 'bitcoinjs-lib';
 import Biometric from '../../class/biometrics';
 import alert from '../../components/Alert';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 const currency = require('../../blue_modules/currency');
 
 type LdkOpenChannelProps = RouteProp<
@@ -110,7 +109,6 @@ const LdkOpenChannel = (props: any) => {
     await new Promise(resolve => setTimeout(resolve, 3000)); // sleep to make sure network propagates
     fetchAndSaveWalletTransactions(fundingWalletID);
     ReactNativeHapticFeedback.trigger('notificationSuccess', { ignoreAndroidSystemSettings: false });
-    // @ts-ignore: Address types later
     navigate('Success', { amount: undefined });
     setIsLoading(false);
   };
@@ -146,7 +144,6 @@ const LdkOpenChannel = (props: any) => {
       }
 
       psbtOpenChannelStartedTs.current = +new Date();
-      // @ts-ignore: Address types later
       navigate('SendDetailsRoot', {
         screen: 'SendDetails',
         params: {
@@ -171,7 +168,6 @@ const LdkOpenChannel = (props: any) => {
 
   const onBarScanned = (ret: { data?: any }) => {
     if (!ret.data) ret = { data: ret };
-    // @ts-ignore: Address types later
     setParams({ remoteHostWithPubkey: ret.data });
   };
 
@@ -197,7 +193,7 @@ const LdkOpenChannel = (props: any) => {
           <BlueText>{loc.lnd.are_you_sure_open_channel}</BlueText>
           <BlueSpacing20 />
           <View style={styles.horizontalButtons}>
-            <Button onPress={finalizeOpenChannel} title={loc._.continue} />
+            <BlueButton onPress={finalizeOpenChannel} title={loc._.continue} />
           </View>
         </View>
       );
@@ -256,10 +252,7 @@ const LdkOpenChannel = (props: any) => {
           address={remoteHostWithPubkey}
           isLoading={isLoading}
           inputAccessoryViewID={(BlueDismissKeyboardInputAccessory as any).InputAccessoryViewID}
-          onChangeText={text =>
-            // @ts-ignore: Address types later
-            setParams({ remoteHostWithPubkey: text })
-          }
+          onChangeText={text => setParams({ remoteHostWithPubkey: text })}
           onBarScanned={onBarScanned}
           launchedBy={name}
         />
@@ -268,16 +261,14 @@ const LdkOpenChannel = (props: any) => {
         <ArrowPicker
           onChange={newKey => {
             const nodes = LightningLdkWallet.getPredefinedNodes();
-            if (nodes[newKey])
-              // @ts-ignore: Address types later
-              setParams({ remoteHostWithPubkey: nodes[newKey] });
+            if (nodes[newKey]) setParams({ remoteHostWithPubkey: nodes[newKey] });
           }}
           items={LightningLdkWallet.getPredefinedNodes()}
           isItemUnknown={!Object.values(LightningLdkWallet.getPredefinedNodes()).some(node => node === remoteHostWithPubkey)}
         />
         <BlueSpacing20 />
         <View style={styles.horizontalButtons}>
-          <Button onPress={openChannel} disabled={remoteHostWithPubkey.length === 0} title={loc.lnd.open_channel} />
+          <BlueButton onPress={openChannel} disabled={remoteHostWithPubkey.length === 0} title={loc.lnd.open_channel} />
         </View>
       </View>
     );
@@ -308,7 +299,7 @@ const styles = StyleSheet.create({
 LdkOpenChannel.navigationOptions = navigationStyle(
   {
     closeButton: true,
-    closeButtonFunc: ({ navigation }) => navigation.getParent().pop(),
+    closeButtonFunc: ({ navigation }) => navigation.dangerouslyGetParent().pop(),
   },
   (options, { theme, navigation, route }) => {
     return {
diff --git a/screen/lnd/lndCreateInvoice.js b/screen/lnd/lndCreateInvoice.js
index d59e58a9..33007391 100644
--- a/screen/lnd/lndCreateInvoice.js
+++ b/screen/lnd/lndCreateInvoice.js
@@ -17,7 +17,7 @@ import ReactNativeHapticFeedback from 'react-native-haptic-feedback';
 import { Icon } from 'react-native-elements';
 import { useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';
 
-import { BlueAlertWalletExportReminder, BlueDismissKeyboardInputAccessory, BlueLoading } from '../../BlueComponents';
+import { BlueAlertWalletExportReminder, BlueButton, BlueDismissKeyboardInputAccessory, BlueLoading } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import AmountInput from '../../components/AmountInput';
 import * as NavigationService from '../../NavigationService';
@@ -31,7 +31,6 @@ import { parse } from 'url'; // eslint-disable-line n/no-deprecated-api
 import { requestCameraAuthorization } from '../../helpers/scan-qr';
 import { useTheme } from '../../components/themes';
 import { isTorCapable } from '../../blue_modules/environment';
-import Button from '../../components/Button';
 const currency = require('../../blue_modules/currency');
 const torrific = isTorCapable ? require('../../blue_modules/torrific') : require('../../scripts/maccatalystpatches/torrific.js');
 
@@ -41,7 +40,7 @@ const LNDCreateInvoice = () => {
   const wallet = useRef(wallets.find(item => item.getID() === walletID) || wallets.find(item => item.chain === Chain.OFFCHAIN));
   const { name } = useRoute();
   const { colors } = useTheme();
-  const { navigate, getParent, goBack, pop, setParams } = useNavigation();
+  const { navigate, dangerouslyGetParent, goBack, pop, setParams } = useNavigation();
   const [unit, setUnit] = useState(wallet.current?.getPreferredBalanceUnit() || BitcoinUnit.BTC);
   const [amount, setAmount] = useState();
   const [renderWalletSelectionButtonHidden, setRenderWalletSelectionButtonHidden] = useState(false);
@@ -122,7 +121,7 @@ const LNDCreateInvoice = () => {
           BlueAlertWalletExportReminder({
             onSuccess: () => renderReceiveDetails(),
             onFailure: () => {
-              getParent().pop();
+              dangerouslyGetParent().pop();
               NavigationService.navigate('WalletExportRoot', {
                 screen: 'WalletExport',
                 params: {
@@ -333,7 +332,11 @@ const LNDCreateInvoice = () => {
   const renderCreateButton = () => {
     return (
       <View style={styles.createButton}>
-        {isLoading ? <ActivityIndicator /> : <Button disabled={!(amount > 0)} onPress={createInvoice} title={loc.send.details_create} />}
+        {isLoading ? (
+          <ActivityIndicator />
+        ) : (
+          <BlueButton disabled={!(amount > 0)} onPress={createInvoice} title={loc.send.details_create} />
+        )}
       </View>
     );
   };
@@ -533,7 +536,7 @@ LNDCreateInvoice.routeName = 'LNDCreateInvoice';
 LNDCreateInvoice.navigationOptions = navigationStyle(
   {
     closeButton: true,
-    headerBackVisible: false,
+    headerHideBackButton: true,
     statusBarStyle: 'light',
   },
   opts => ({ ...opts, title: loc.receive.header }),
diff --git a/screen/lnd/lndViewAdditionalInvoiceInformation.js b/screen/lnd/lndViewAdditionalInvoiceInformation.js
index 13c0b23b..16e8fcdb 100644
--- a/screen/lnd/lndViewAdditionalInvoiceInformation.js
+++ b/screen/lnd/lndViewAdditionalInvoiceInformation.js
@@ -1,14 +1,13 @@
 import React, { useContext, useEffect, useState } from 'react';
 import { View, Share, StyleSheet } from 'react-native';
 import { useNavigation, useRoute } from '@react-navigation/native';
-import { BlueCopyTextToClipboard, BlueLoading, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueCopyTextToClipboard, BlueLoading, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import loc from '../../loc';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import QRCodeComponent from '../../components/QRCodeComponent';
 import alert from '../../components/Alert';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const LNDViewAdditionalInvoiceInformation = () => {
   const { walletID } = useRoute().params;
@@ -61,7 +60,7 @@ const LNDViewAdditionalInvoiceInformation = () => {
         <BlueText>{loc.lndViewInvoice.open_direct_channel}</BlueText>
         <BlueCopyTextToClipboard text={walletInfo.uris[0]} />
         <View style={styles.share}>
-          <Button
+          <BlueButton
             icon={{
               name: 'share-alternative',
               type: 'entypo',
diff --git a/screen/lnd/lndViewInvoice.js b/screen/lnd/lndViewInvoice.js
index ede8212d..91ec9ff3 100644
--- a/screen/lnd/lndViewInvoice.js
+++ b/screen/lnd/lndViewInvoice.js
@@ -5,7 +5,15 @@ import ReactNativeHapticFeedback from 'react-native-haptic-feedback';
 import { Icon } from 'react-native-elements';
 import QRCodeComponent from '../../components/QRCodeComponent';
 import { useNavigation, useNavigationState, useRoute } from '@react-navigation/native';
-import { BlueLoading, BlueText, SafeBlueArea, BlueCopyTextToClipboard, BlueSpacing20, BlueTextCentered } from '../../BlueComponents';
+import {
+  BlueLoading,
+  BlueText,
+  SafeBlueArea,
+  BlueButton,
+  BlueCopyTextToClipboard,
+  BlueSpacing20,
+  BlueTextCentered,
+} from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import loc from '../../loc';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
@@ -13,14 +21,13 @@ import { BitcoinUnit } from '../../models/bitcoinUnits';
 import { SuccessView } from '../send/success';
 import LNDCreateInvoice from './lndCreateInvoice';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const LNDViewInvoice = () => {
   const { invoice, walletID } = useRoute().params;
   const { wallets, setSelectedWallet, fetchAndSaveWalletTransactions } = useContext(BlueStorageContext);
   const wallet = wallets.find(w => w.getID() === walletID);
   const { colors, closeImage } = useTheme();
-  const { goBack, navigate, setParams, setOptions, getParent } = useNavigation();
+  const { goBack, navigate, setParams, setOptions, dangerouslyGetParent } = useNavigation();
   const [isLoading, setIsLoading] = useState(typeof invoice === 'string');
   const [isFetchingInvoices, setIsFetchingInvoices] = useState(true);
   const [invoiceStatusChanged, setInvoiceStatusChanged] = useState(false);
@@ -66,7 +73,7 @@ const LNDViewInvoice = () => {
               shadowOffset: { height: 0, width: 0 },
             },
             gestureEnabled: false,
-            headerBackVisible: false,
+            headerHideBackButton: true,
 
             // eslint-disable-next-line react/no-unstable-nested-components
             headerRight: () => (
@@ -74,7 +81,7 @@ const LNDViewInvoice = () => {
                 accessibilityRole="button"
                 style={styles.button}
                 onPress={() => {
-                  getParent().pop();
+                  dangerouslyGetParent().pop();
                 }}
                 testID="NavigationCloseButton"
               >
@@ -262,10 +269,10 @@ const LNDViewInvoice = () => {
             )}
             <BlueCopyTextToClipboard truncated text={invoice.payment_request} />
 
-            <Button onPress={handleOnSharePressed} title={loc.receive.details_share} />
+            <BlueButton onPress={handleOnSharePressed} title={loc.receive.details_share} />
 
             <BlueSpacing20 />
-            <Button
+            <BlueButton
               style={stylesHook.additionalInfo}
               onPress={handleOnViewAdditionalInformationPressed}
               title={loc.lndViewInvoice.additional_info}
diff --git a/screen/lnd/lnurlAuth.js b/screen/lnd/lnurlAuth.js
index 7d4a3927..1b15eeba 100644
--- a/screen/lnd/lnurlAuth.js
+++ b/screen/lnd/lnurlAuth.js
@@ -2,7 +2,7 @@ import React, { useState, useContext, useCallback, useMemo } from 'react';
 import { I18nManager, ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native';
 import { Icon } from 'react-native-elements';
 
-import { BlueCard, BlueLoading, BlueSpacing20, BlueSpacing40, BlueText, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueCard, BlueLoading, BlueSpacing20, BlueSpacing40, BlueText, SafeBlueArea } from '../../BlueComponents';
 
 import navigationStyle from '../../components/navigationStyle';
 import Lnurl from '../../class/lnurl';
@@ -14,7 +14,6 @@ import selectWallet from '../../helpers/select-wallet';
 import URL from 'url';
 import { SuccessView } from '../send/success';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const AuthState = {
   USER_PROMPT: 0,
@@ -96,7 +95,7 @@ const LnurlAuth = () => {
               <BlueText style={styles.domainName}>{parsedLnurl.hostname}</BlueText>
               <BlueText style={styles.alignSelfCenter}>{loc.lnurl_auth[`${parsedLnurl.query.action || 'auth'}_question_part_2`]}</BlueText>
               <BlueSpacing40 />
-              <Button title={loc.lnurl_auth.authenticate} onPress={authenticate} />
+              <BlueButton title={loc.lnurl_auth.authenticate} onPress={authenticate} />
               <BlueSpacing40 />
             </BlueCard>
           </ScrollView>
@@ -175,5 +174,5 @@ const styles = StyleSheet.create({
 LnurlAuth.navigationOptions = navigationStyle({
   title: '',
   closeButton: true,
-  closeButtonFunc: ({ navigation }) => navigation.getParent().popToTop(),
+  closeButtonFunc: ({ navigation }) => navigation.dangerouslyGetParent().popToTop(),
 });
diff --git a/screen/lnd/lnurlPay.js b/screen/lnd/lnurlPay.js
index 5699e271..9bd76bcb 100644
--- a/screen/lnd/lnurlPay.js
+++ b/screen/lnd/lnurlPay.js
@@ -5,7 +5,15 @@ import { I18nManager, Image, ScrollView, StyleSheet, Text, TouchableOpacity, Vie
 import { useNavigation, useRoute } from '@react-navigation/native';
 import { Icon } from 'react-native-elements';
 
-import { BlueCard, BlueDismissKeyboardInputAccessory, BlueLoading, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
+import {
+  BlueButton,
+  BlueCard,
+  BlueDismissKeyboardInputAccessory,
+  BlueLoading,
+  BlueSpacing20,
+  BlueText,
+  SafeBlueArea,
+} from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import AmountInput from '../../components/AmountInput';
 import Lnurl from '../../class/lnurl';
@@ -15,7 +23,6 @@ import Biometric from '../../class/biometrics';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import alert from '../../components/Alert';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 const prompt = require('../../helpers/prompt');
 const currency = require('../../blue_modules/currency');
 
@@ -224,7 +231,7 @@ const LnurlPay = () => {
             <BlueText style={styles.alignSelfCenter}>{payload?.description}</BlueText>
             <BlueText style={styles.alignSelfCenter}>{payload?.domain}</BlueText>
             <BlueSpacing20 />
-            {payButtonDisabled ? <BlueLoading /> : <Button title={loc.lnd.payButton} onPress={pay} />}
+            {payButtonDisabled ? <BlueLoading /> : <BlueButton title={loc.lnd.payButton} onPress={pay} />}
             <BlueSpacing20 />
           </BlueCard>
         </ScrollView>
@@ -295,5 +302,5 @@ const styles = StyleSheet.create({
 LnurlPay.navigationOptions = navigationStyle({
   title: '',
   closeButton: true,
-  closeButtonFunc: ({ navigation }) => navigation.getParent().popToTop(),
+  closeButtonFunc: ({ navigation }) => navigation.dangerouslyGetParent().popToTop(),
 });
diff --git a/screen/lnd/lnurlPaySuccess.js b/screen/lnd/lnurlPaySuccess.js
index 03b21623..1bd9bfbb 100644
--- a/screen/lnd/lnurlPaySuccess.js
+++ b/screen/lnd/lnurlPaySuccess.js
@@ -2,12 +2,21 @@ import React, { Component } from 'react';
 import PropTypes from 'prop-types';
 import { View, Text, Linking, StyleSheet, Image, ScrollView } from 'react-native';
 import AsyncStorage from '@react-native-async-storage/async-storage';
-import { BlueButtonLink, BlueCard, BlueLoading, BlueSpacing20, BlueSpacing40, BlueText, SafeBlueArea } from '../../BlueComponents';
+
+import {
+  BlueButton,
+  BlueButtonLink,
+  BlueCard,
+  BlueLoading,
+  BlueSpacing20,
+  BlueSpacing40,
+  BlueText,
+  SafeBlueArea,
+} from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import Lnurl from '../../class/lnurl';
 import loc from '../../loc';
 import { SuccessView } from '../send/success';
-import Button from '../../components/Button';
 
 export default class LnurlPaySuccess extends Component {
   constructor(props) {
@@ -104,7 +113,7 @@ export default class LnurlPaySuccess extends Component {
 
           <BlueCard>
             {repeatable ? (
-              <Button
+              <BlueButton
                 onPress={() => {
                   this.props.navigation.navigate('ScanLndInvoiceRoot', {
                     screen: 'LnurlPay',
@@ -118,9 +127,9 @@ export default class LnurlPaySuccess extends Component {
                 icon={{ name: 'refresh', type: 'font-awesome', color: '#9aa0aa' }}
               />
             ) : (
-              <Button
+              <BlueButton
                 onPress={() => {
-                  this.props.navigation.getParent().popToTop();
+                  this.props.navigation.dangerouslyGetParent().popToTop();
                 }}
                 title={loc.send.success_done}
               />
@@ -136,7 +145,7 @@ LnurlPaySuccess.propTypes = {
   navigation: PropTypes.shape({
     navigate: PropTypes.func,
     pop: PropTypes.func,
-    getParent: PropTypes.func,
+    dangerouslyGetParent: PropTypes.func,
   }),
   route: PropTypes.shape({
     name: PropTypes.string,
@@ -177,7 +186,7 @@ const styles = StyleSheet.create({
 LnurlPaySuccess.navigationOptions = navigationStyle({
   title: '',
   closeButton: true,
-  headerBackVisible: false,
+  headerHideBackButton: true,
   gestureEnabled: false,
-  closeButtonFunc: ({ navigation }) => navigation.getParent().popToTop(),
+  closeButtonFunc: ({ navigation }) => navigation.dangerouslyGetParent().popToTop(),
 });
diff --git a/screen/lnd/scanLndInvoice.js b/screen/lnd/scanLndInvoice.js
index dd564068..3f055ea7 100644
--- a/screen/lnd/scanLndInvoice.js
+++ b/screen/lnd/scanLndInvoice.js
@@ -14,7 +14,7 @@ import { Icon } from 'react-native-elements';
 import ReactNativeHapticFeedback from 'react-native-haptic-feedback';
 import { useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';
 
-import { BlueCard, BlueDismissKeyboardInputAccessory, BlueLoading, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueCard, BlueDismissKeyboardInputAccessory, BlueLoading, SafeBlueArea } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import AddressInput from '../../components/AddressInput';
 import AmountInput from '../../components/AmountInput';
@@ -25,7 +25,6 @@ import loc, { formatBalanceWithoutSuffix } from '../../loc';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import alert from '../../components/Alert';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 const currency = require('../../blue_modules/currency');
 
 const ScanLndInvoice = () => {
@@ -351,7 +350,7 @@ const ScanLndInvoice = () => {
                   </View>
                 ) : (
                   <View>
-                    <Button title={loc.lnd.payButton} onPress={pay} disabled={shouldDisablePayButton()} />
+                    <BlueButton title={loc.lnd.payButton} onPress={pay} disabled={shouldDisablePayButton()} />
                   </View>
                 )}
               </BlueCard>
@@ -369,7 +368,7 @@ export default ScanLndInvoice;
 ScanLndInvoice.navigationOptions = navigationStyle(
   {
     closeButton: true,
-    headerBackVisible: false,
+    headerHideBackButton: true,
   },
   opts => ({ ...opts, title: loc.send.header, statusBarStyle: 'light' }),
 );
diff --git a/screen/plausibledeniability.js b/screen/plausibledeniability.js
index 24a715ca..d88c718b 100644
--- a/screen/plausibledeniability.js
+++ b/screen/plausibledeniability.js
@@ -4,11 +4,10 @@ import { useNavigation } from '@react-navigation/native';
 import ReactNativeHapticFeedback from 'react-native-haptic-feedback';
 
 import navigationStyle from '../components/navigationStyle';
-import { BlueLoading, SafeBlueArea, BlueCard, BlueText, BlueSpacing20 } from '../BlueComponents';
+import { BlueLoading, BlueButton, SafeBlueArea, BlueCard, BlueText, BlueSpacing20 } from '../BlueComponents';
 import loc from '../loc';
 import { BlueStorageContext } from '../blue_modules/storage-context';
 import alert from '../components/Alert';
-import Button from '../components/Button';
 const prompt = require('../helpers/prompt');
 
 const PlausibleDeniability = () => {
@@ -63,7 +62,7 @@ const PlausibleDeniability = () => {
 
           <BlueSpacing20 />
 
-          <Button
+          <BlueButton
             testID="CreateFakeStorageButton"
             title={loc.plausibledeniability.create_fake_storage}
             onPress={handleOnCreateFakeStorageButtonPressed}
diff --git a/screen/receive/aztecoRedeem.js b/screen/receive/aztecoRedeem.js
index 4e82d493..c2dd3814 100644
--- a/screen/receive/aztecoRedeem.js
+++ b/screen/receive/aztecoRedeem.js
@@ -3,13 +3,12 @@ import PropTypes from 'prop-types';
 import { Keyboard, Text, TouchableOpacity, TouchableWithoutFeedback, View, StyleSheet, I18nManager } from 'react-native';
 import { Icon } from 'react-native-elements';
 
-import { BlueLoading, BlueSpacing, BlueText } from '../../BlueComponents';
+import { BlueButton, BlueLoading, BlueSpacing, BlueText } from '../../BlueComponents';
 import { navigationStyleTx } from '../../components/navigationStyle';
 import loc from '../../loc';
 import Azteco from '../../class/azteco';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import alert from '../../components/Alert';
-import Button from '../../components/Button';
 
 const styles = StyleSheet.create({
   loading: {
@@ -160,7 +159,7 @@ export default class AztecoRedeem extends Component {
               {this.state.c1}-{this.state.c2}-{this.state.c3}-{this.state.c4}
             </BlueText>
             {this.renderWalletSelectionButton()}
-            <Button onPress={this.redeem} title={loc.azteco.redeemButton} />
+            <BlueButton onPress={this.redeem} title={loc.azteco.redeemButton} />
             <BlueSpacing />
           </View>
         </View>
diff --git a/screen/receive/details.js b/screen/receive/details.js
index 89464ccc..0d8572a9 100644
--- a/screen/receive/details.js
+++ b/screen/receive/details.js
@@ -16,6 +16,7 @@ import QRCodeComponent from '../../components/QRCodeComponent';
 import {
   BlueLoading,
   BlueCopyTextToClipboard,
+  BlueButton,
   BlueButtonLink,
   BlueText,
   BlueSpacing20,
@@ -37,7 +38,6 @@ import { TransactionPendingIconBig } from '../../components/TransactionPendingIc
 import * as BlueElectrum from '../../blue_modules/BlueElectrum';
 import { SuccessView } from '../send/success';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 const currency = require('../../blue_modules/currency');
 
 const ReceiveDetails = () => {
@@ -280,7 +280,7 @@ const ReceiveDetails = () => {
               title={loc.receive.details_setAmount}
               onPress={showCustomAmountModal}
             />
-            <Button onPress={handleShareButtonPressed} title={loc.receive.details_share} />
+            <BlueButton onPress={handleShareButtonPressed} title={loc.receive.details_share} />
           </BlueCard>
         </View>
         {renderCustomAmountModal()}
@@ -419,7 +419,7 @@ const ReceiveDetails = () => {
             </View>
             <BlueSpacing20 />
             <View>
-              <Button
+              <BlueButton
                 testID="CustomAmountSaveButton"
                 style={[styles.modalButton, stylesHook.modalButton]}
                 title={loc.receive.details_create}
@@ -538,7 +538,7 @@ const styles = StyleSheet.create({
 ReceiveDetails.navigationOptions = navigationStyle(
   {
     closeButton: true,
-    headerBackVisible: false,
+    headerHideBackButton: true,
   },
   opts => ({ ...opts, title: loc.receive.header, statusBarStyle: 'light' }),
 );
diff --git a/screen/selftest.js b/screen/selftest.js
index 6291aeee..93453e5e 100644
--- a/screen/selftest.js
+++ b/screen/selftest.js
@@ -6,7 +6,7 @@ import bip38 from 'bip38';
 import BIP32Factory from 'bip32';
 
 import loc from '../loc';
-import { BlueSpacing20, SafeBlueArea, BlueCard, BlueText, BlueLoading } from '../BlueComponents';
+import { BlueSpacing20, SafeBlueArea, BlueCard, BlueText, BlueLoading, BlueButton } from '../BlueComponents';
 import navigationStyle from '../components/navigationStyle';
 import {
   SegwitP2SHWallet,
@@ -17,7 +17,6 @@ import {
   SLIP39LegacyP2PKHWallet,
 } from '../class';
 import ecc from '../blue_modules/noble_ecc';
-import Button from '../components/Button';
 const bitcoin = require('bitcoinjs-lib');
 const BlueCrypto = require('react-native-blue-crypto');
 const encryption = require('../blue_modules/encryption');
@@ -302,7 +301,7 @@ export default class Selftest extends Component {
             {Platform.OS === 'android' && (
               <>
                 <BlueSpacing20 />
-                <Button title="Test Save to Storage" onPress={this.onPressSaveToStorage} />
+                <BlueButton title="Test Save to Storage" onPress={this.onPressSaveToStorage} />
               </>
             )}
           </ScrollView>
diff --git a/screen/send/ScanQRCode.js b/screen/send/ScanQRCode.js
index 72dd0450..d17dc68d 100644
--- a/screen/send/ScanQRCode.js
+++ b/screen/send/ScanQRCode.js
@@ -6,12 +6,11 @@ import { launchImageLibrary } from 'react-native-image-picker';
 import { decodeUR, extractSingleWorkload, BlueURDecoder } from '../../blue_modules/ur';
 import { useNavigation, useRoute, useIsFocused } from '@react-navigation/native';
 import loc from '../../loc';
-import { BlueLoading, BlueText, BlueSpacing40 } from '../../BlueComponents';
+import { BlueLoading, BlueText, BlueButton, BlueSpacing40 } from '../../BlueComponents';
 import alert from '../../components/Alert';
 import { openPrivacyDesktopSettings } from '../../class/camera';
 import { isCameraAuthorizationStatusGranted } from '../../helpers/scan-qr';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const LocalQRCode = require('@remobile/react-native-qrcode-local-image');
 const createHash = require('create-hash');
@@ -127,7 +126,7 @@ const ScanQRCode = () => {
         const data = decoder.toString();
         decoder = false; // nullify for future use (?)
         if (launchedBy) {
-          navigation.navigate(launchedBy, {});
+          navigation.navigate(launchedBy);
         }
         onBarScanned({ data });
       } else {
@@ -176,7 +175,7 @@ const ScanQRCode = () => {
           data = Buffer.from(payload, 'hex').toString();
         }
         if (launchedBy) {
-          navigation.navigate(launchedBy, {});
+          navigation.navigate(launchedBy);
         }
         onBarScanned({ data });
       } else {
@@ -239,7 +238,7 @@ const ScanQRCode = () => {
       bitcoin.Psbt.fromHex(hex); // if it doesnt throw - all good
 
       if (launchedBy) {
-        navigation.navigate(launchedBy, {});
+        navigation.navigate(launchedBy);
       }
       onBarScanned({ data: Buffer.from(hex, 'hex').toString('base64') });
       return;
@@ -249,7 +248,7 @@ const ScanQRCode = () => {
       setIsLoading(true);
       try {
         if (launchedBy) {
-          navigation.navigate(launchedBy, {});
+          navigation.navigate(launchedBy);
         }
         onBarScanned(ret.data);
       } catch (e) {
@@ -305,7 +304,7 @@ const ScanQRCode = () => {
   const dismiss = () => {
     onBarScannerDismissWithoutData();
     if (launchedBy) {
-      navigation.navigate(launchedBy, {});
+      navigation.navigate(launchedBy);
     } else {
       navigation.goBack();
     }
@@ -320,7 +319,7 @@ const ScanQRCode = () => {
         <View style={[styles.openSettingsContainer, stylesHook.openSettingsContainer]}>
           <BlueText>{loc.send.permission_camera_message}</BlueText>
           <BlueSpacing40 />
-          <Button title={loc.send.open_settings} onPress={openPrivacyDesktopSettings} />
+          <BlueButton title={loc.send.open_settings} onPress={openPrivacyDesktopSettings} />
         </View>
       ) : isFocused ? (
         <CameraScreen scanBarcode onReadCode={event => onBarCodeRead({ data: event?.nativeEvent?.codeStringValue })} showFrame={false} />
@@ -370,7 +369,7 @@ const ScanQRCode = () => {
             value={backdoorText}
             onChangeText={setBackdoorText}
           />
-          <Button
+          <BlueButton
             title="OK"
             testID="scanQrBackdoorOkButton"
             onPress={() => {
diff --git a/screen/send/broadcast.js b/screen/send/broadcast.js
index f871a2d6..12afb1c0 100644
--- a/screen/send/broadcast.js
+++ b/screen/send/broadcast.js
@@ -10,6 +10,7 @@ import { HDSegwitBech32Wallet } from '../../class';
 import navigationStyle from '../../components/navigationStyle';
 import {
   BlueBigCheckmark,
+  BlueButton,
   BlueButtonLink,
   BlueCard,
   BlueFormLabel,
@@ -21,7 +22,6 @@ import {
 import BlueElectrum from '../../blue_modules/BlueElectrum';
 import Notifications from '../../blue_modules/notifications';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const scanqr = require('../../helpers/scan-qr');
 
@@ -143,10 +143,10 @@ const Broadcast = () => {
               </View>
               <BlueSpacing20 />
 
-              <Button title={loc.multisig.scan_or_open_file} onPress={handleQRScan} />
+              <BlueButton title={loc.multisig.scan_or_open_file} onPress={handleQRScan} />
               <BlueSpacing20 />
 
-              <Button
+              <BlueButton
                 title={loc.send.broadcastButton}
                 onPress={handleBroadcast}
                 disabled={broadcastResult === BROADCAST_RESULT.pending || txHex?.length === 0 || txHex === undefined}
diff --git a/screen/send/coinControl.js b/screen/send/coinControl.js
index ada5aa4b..16ae6c57 100644
--- a/screen/send/coinControl.js
+++ b/screen/send/coinControl.js
@@ -21,14 +21,13 @@ import * as RNLocalize from 'react-native-localize';
 
 import loc, { formatBalance } from '../../loc';
 import { BitcoinUnit } from '../../models/bitcoinUnits';
-import { SafeBlueArea, BlueSpacing10, BlueSpacing20, BlueListItem } from '../../BlueComponents';
+import { SafeBlueArea, BlueSpacing10, BlueSpacing20, BlueButton, BlueListItem } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import BottomModal from '../../components/BottomModal';
 import { FContainer, FButton } from '../../components/FloatButtons';
 import debounce from '../../blue_modules/debounce';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const FrozenBadge = () => {
   const { colors } = useTheme();
@@ -235,7 +234,7 @@ const OutputModalContent = ({ output, wallet, onUseCoin, frozen, setFrozen }) =>
       <BlueListItem title={loc.cc.freezeLabel} Component={TouchableWithoutFeedback} switch={switchValue} />
       <BlueSpacing20 />
       <View style={mStyles.buttonContainer}>
-        <Button testID="UseCoin" title={loc.cc.use_coin} onPress={() => onUseCoin([output])} />
+        <BlueButton testID="UseCoin" title={loc.cc.use_coin} onPress={() => onUseCoin([output])} />
       </View>
       <BlueSpacing20 />
     </>
diff --git a/screen/send/confirm.js b/screen/send/confirm.js
index edbe60bc..0d04d4e9 100644
--- a/screen/send/confirm.js
+++ b/screen/send/confirm.js
@@ -6,7 +6,7 @@ import ReactNativeHapticFeedback from 'react-native-haptic-feedback';
 import PropTypes from 'prop-types';
 
 import PayjoinTransaction from '../../class/payjoin-transaction';
-import { BlueText, SafeBlueArea, BlueCard } from '../../BlueComponents';
+import { BlueButton, BlueText, SafeBlueArea, BlueCard } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import { BitcoinUnit } from '../../models/bitcoinUnits';
 import Biometric from '../../class/biometrics';
@@ -18,7 +18,6 @@ import { useNavigation, useRoute } from '@react-navigation/native';
 import alert from '../../components/Alert';
 import { useTheme } from '../../components/themes';
 import { isTorCapable } from '../../blue_modules/environment';
-import Button from '../../components/Button';
 const currency = require('../../blue_modules/currency');
 const BlueElectrum = require('../../blue_modules/BlueElectrum');
 const Bignumber = require('bignumber.js');
@@ -266,7 +265,7 @@ const Confirm = () => {
           <Text style={styles.cardText} testID="TransactionFee">
             {loc.send.create_fee}: {formatBalance(feeSatoshi, BitcoinUnit.BTC)} ({currency.satoshiToLocalCurrency(feeSatoshi)})
           </Text>
-          {isLoading ? <ActivityIndicator /> : <Button disabled={isElectrumDisabled} onPress={send} title={loc.send.confirm_sendNow} />}
+          {isLoading ? <ActivityIndicator /> : <BlueButton disabled={isElectrumDisabled} onPress={send} title={loc.send.confirm_sendNow} />}
         </BlueCard>
       </View>
     </SafeBlueArea>
diff --git a/screen/send/details.js b/screen/send/details.js
index 3c1131d8..95f9c72b 100644
--- a/screen/send/details.js
+++ b/screen/send/details.js
@@ -24,7 +24,7 @@ import RNFS from 'react-native-fs';
 import BigNumber from 'bignumber.js';
 import * as bitcoin from 'bitcoinjs-lib';
 
-import { BlueDismissKeyboardInputAccessory, BlueListItem, BlueLoading, BlueText } from '../../BlueComponents';
+import { BlueButton, BlueDismissKeyboardInputAccessory, BlueListItem, BlueLoading, BlueText } from '../../BlueComponents';
 import { navigationStyleTx } from '../../components/navigationStyle';
 import NetworkTransactionFees, { NetworkTransactionFee } from '../../models/networkTransactionFees';
 import { BitcoinUnit, Chain } from '../../models/bitcoinUnits';
@@ -42,7 +42,6 @@ import { BlueStorageContext } from '../../blue_modules/storage-context';
 import ToolTipMenu from '../../components/TooltipMenu';
 import { requestCameraAuthorization, scanQrHelper } from '../../helpers/scan-qr';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 const currency = require('../../blue_modules/currency');
 const prompt = require('../../helpers/prompt');
 const fs = require('../../blue_modules/fs');
@@ -79,7 +78,7 @@ const SendDetails = () => {
   const [payjoinUrl, setPayjoinUrl] = useState(null);
   const [changeAddress, setChangeAddress] = useState();
   const [dumb, setDumb] = useState(false);
-  const { isEditable } = routeParams;
+  const { isEditable = true } = routeParams;
   // if utxo is limited we use it to calculate available balance
   const balance = utxo ? utxo.reduce((prev, curr) => prev + curr.value, 0) : wallet?.getBalance();
   const allBalance = formatBalanceWithoutSuffix(balance, BitcoinUnit.BTC, true);
@@ -615,7 +614,7 @@ const SendDetails = () => {
   };
 
   const importQrTransactionOnBarScanned = ret => {
-    navigation.getParent().pop();
+    navigation.dangerouslyGetParent().pop();
     if (!ret.data) ret = { data: ret };
     if (ret.data.toUpperCase().startsWith('UR')) {
       Alert.alert(loc.errors.error, 'BC-UR not decoded. This should never happen');
@@ -752,7 +751,7 @@ const SendDetails = () => {
   };
 
   const onBarScanned = ret => {
-    navigation.getParent().pop();
+    navigation.dangerouslyGetParent().pop();
     if (!ret.data) ret = { data: ret };
     if (ret.data.toUpperCase().startsWith('UR')) {
       Alert.alert(loc.errors.error, 'BC-UR not decoded. This should never happen');
@@ -1288,7 +1287,7 @@ const SendDetails = () => {
         {isLoading ? (
           <ActivityIndicator />
         ) : (
-          <Button onPress={createTransaction} title={loc.send.details_next} testID="CreateTransactionButton" />
+          <BlueButton onPress={createTransaction} title={loc.send.details_next} testID="CreateTransactionButton" />
         )}
       </View>
     );
@@ -1683,5 +1682,3 @@ SendDetails.navigationOptions = navigationStyleTx({}, options => ({
   title: loc.send.header,
   statusBarStyle: 'light',
 }));
-
-SendDetails.initialParams = { isEditable: true };
diff --git a/screen/send/isItMyAddress.js b/screen/send/isItMyAddress.js
index d63033a2..4d842df6 100644
--- a/screen/send/isItMyAddress.js
+++ b/screen/send/isItMyAddress.js
@@ -3,12 +3,11 @@ import { useNavigation, useRoute } from '@react-navigation/native';
 import { StyleSheet, View, KeyboardAvoidingView, Platform, TextInput, Keyboard } from 'react-native';
 
 import loc from '../../loc';
-import { BlueButtonLink, BlueCard, BlueSpacing10, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueButtonLink, BlueCard, BlueSpacing10, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import { requestCameraAuthorization } from '../../helpers/scan-qr';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const IsItMyAddress = () => {
   /** @type {AbstractWallet[]} */
@@ -113,15 +112,15 @@ const IsItMyAddress = () => {
             <BlueSpacing10 />
             <BlueButtonLink ref={scanButtonRef} title={loc.wallets.import_scan_qr} onPress={importScan} />
             <BlueSpacing10 />
-            <Button title={loc.send.input_clear} onPress={clearAddressInput} />
+            <BlueButton title={loc.send.input_clear} onPress={clearAddressInput} />
             <BlueSpacing20 />
             {resultCleanAddress && (
               <>
-                <Button title={loc.is_it_my_address.view_qrcode} onPress={viewQRCode} />
+                <BlueButton title={loc.is_it_my_address.view_qrcode} onPress={viewQRCode} />
                 <BlueSpacing20 />
               </>
             )}
-            <Button
+            <BlueButton
               disabled={address.trim().length === 0}
               title={loc.is_it_my_address.check_address}
               onPress={checkAddress}
diff --git a/screen/send/psbtMultisig.js b/screen/send/psbtMultisig.js
index d00746b5..3ead2378 100644
--- a/screen/send/psbtMultisig.js
+++ b/screen/send/psbtMultisig.js
@@ -3,14 +3,13 @@ import { FlatList, StyleSheet, Text, TouchableOpacity, View } from 'react-native
 import { Icon } from 'react-native-elements';
 import { useNavigation, useRoute } from '@react-navigation/native';
 
-import { BlueCard, BlueText, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueCard, BlueText, SafeBlueArea } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import loc from '../../loc';
 import { BitcoinUnit } from '../../models/bitcoinUnits';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import alert from '../../components/Alert';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 const bitcoin = require('bitcoinjs-lib');
 const BigNumber = require('bignumber.js');
 const currency = require('../../blue_modules/currency');
@@ -257,7 +256,7 @@ const PsbtMultisig = () => {
         </View>
       </View>
       <View style={styles.marginConfirmButton}>
-        <Button disabled={!isConfirmEnabled()} title={loc.multisig.confirm} onPress={onConfirm} testID="PsbtMultisigConfirmButton" />
+        <BlueButton disabled={!isConfirmEnabled()} title={loc.multisig.confirm} onPress={onConfirm} testID="PsbtMultisigConfirmButton" />
       </View>
     </>
   );
diff --git a/screen/send/success.js b/screen/send/success.js
index 11e8c14c..ea371261 100644
--- a/screen/send/success.js
+++ b/screen/send/success.js
@@ -6,18 +6,17 @@ import { Text } from 'react-native-elements';
 import BigNumber from 'bignumber.js';
 import { useNavigation, useRoute } from '@react-navigation/native';
 
-import { BlueCard } from '../../BlueComponents';
+import { BlueButton, BlueCard } from '../../BlueComponents';
 import { BitcoinUnit } from '../../models/bitcoinUnits';
 import loc from '../../loc';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const Success = () => {
   const pop = () => {
-    getParent().pop();
+    dangerouslyGetParent().pop();
   };
   const { colors } = useTheme();
-  const { getParent } = useNavigation();
+  const { dangerouslyGetParent } = useNavigation();
   const { amount, fee, amountUnit = BitcoinUnit.BTC, invoiceDescription = '', onDonePressed = pop } = useRoute().params;
   const stylesHook = StyleSheet.create({
     root: {
@@ -44,7 +43,7 @@ const Success = () => {
         onDonePressed={onDonePressed}
       />
       <View style={styles.buttonContainer}>
-        <Button onPress={onDonePressed} title={loc.send.success_done} />
+        <BlueButton onPress={onDonePressed} title={loc.send.success_done} />
       </View>
     </SafeAreaView>
   );
diff --git a/screen/settings/about.js b/screen/settings/about.js
index 0f97eb49..627ef68e 100644
--- a/screen/settings/about.js
+++ b/screen/settings/about.js
@@ -4,7 +4,7 @@ import { useNavigation } from '@react-navigation/native';
 import { Icon } from 'react-native-elements';
 import { getApplicationName, getVersion, getBundleId, getBuildNumber, getUniqueIdSync, hasGmsSync } from 'react-native-device-info';
 import Rate, { AndroidMarket } from 'react-native-rate';
-import { BlueCard, BlueListItem, BlueSpacing20, BlueTextCentered } from '../../BlueComponents';
+import { BlueButton, BlueCard, BlueListItem, BlueSpacing20, BlueTextCentered } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import loc, { formatStringAddTwoWhiteSpaces } from '../../loc';
 import Clipboard from '@react-native-clipboard/clipboard';
@@ -12,7 +12,6 @@ import { BlueStorageContext } from '../../blue_modules/storage-context';
 import alert from '../../components/Alert';
 import { HDSegwitBech32Wallet } from '../../class';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const A = require('../../blue_modules/analytics');
 const branch = require('../../current-branch.json');
@@ -131,7 +130,7 @@ const About = () => {
           <Text style={styles.textFree}>{loc.settings.about_free}</Text>
           <Text style={styles.textBackup}>{formatStringAddTwoWhiteSpaces(loc.settings.about_backup)}</Text>
           {((Platform.OS === 'android' && hasGmsSync()) || Platform.OS !== 'android') && (
-            <Button onPress={handleOnRatePress} title={loc.settings.about_review + ' ⭐🙏'} />
+            <BlueButton onPress={handleOnRatePress} title={loc.settings.about_review + ' ⭐🙏'} />
           )}
         </View>
       </BlueCard>
diff --git a/screen/settings/electrumSettings.js b/screen/settings/electrumSettings.js
index 249f368b..1ff0f4e6 100644
--- a/screen/settings/electrumSettings.js
+++ b/screen/settings/electrumSettings.js
@@ -20,6 +20,7 @@ import loc from '../../loc';
 import DeeplinkSchemaMatch from '../../class/deeplink-schema-match';
 import navigationStyle from '../../components/navigationStyle';
 import {
+  BlueButton,
   BlueButtonLink,
   BlueCard,
   BlueLoading,
@@ -37,7 +38,6 @@ import WidgetCommunication from '../../blue_modules/WidgetCommunication';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import alert from '../../components/Alert';
 import { requestCameraAuthorization } from '../../helpers/scan-qr';
-import Button from '../../components/Button';
 
 const BlueElectrum = require('../../blue_modules/BlueElectrum');
 
@@ -380,7 +380,7 @@ export default class ElectrumSettings extends Component {
               </TouchableOpacity>
             </View>
             <BlueSpacing20 />
-            {this.state.isLoading ? <BlueLoading /> : <Button testID="Save" onPress={this.save} title={loc.settings.save} />}
+            {this.state.isLoading ? <BlueLoading /> : <BlueButton testID="Save" onPress={this.save} title={loc.settings.save} />}
             <BlueSpacing20 />
             <BlueButtonLink title={loc.wallets.import_scan_qr} onPress={this.importScan} />
             <BlueSpacing20 />
diff --git a/screen/settings/lightningSettings.tsx b/screen/settings/lightningSettings.tsx
index 398ea579..db5fbf2c 100644
--- a/screen/settings/lightningSettings.tsx
+++ b/screen/settings/lightningSettings.tsx
@@ -1,11 +1,11 @@
 import React, { useState, useEffect, useCallback } from 'react';
 import { View, TextInput, Linking, StyleSheet, Alert, I18nManager } from 'react-native';
-import { Button as ButtonRNElements } from 'react-native-elements';
+import { Button } from 'react-native-elements';
 import { useNavigation, useRoute, RouteProp } from '@react-navigation/native';
 import AsyncStorage from '@react-native-async-storage/async-storage';
 
 import navigationStyle, { NavigationOptionsGetter } from '../../components/navigationStyle';
-import { BlueButtonLink, BlueCard, BlueLoading, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueButtonLink, BlueCard, BlueLoading, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
 import { LightningCustodianWallet } from '../../class/wallets/lightning-custodian-wallet';
 import loc from '../../loc';
 import { useTheme } from '../../components/themes';
@@ -13,7 +13,6 @@ import DeeplinkSchemaMatch from '../../class/deeplink-schema-match';
 import { isTorCapable } from '../../blue_modules/environment';
 import alert from '../../components/Alert';
 import { requestCameraAuthorization } from '../../helpers/scan-qr';
-import { Button } from '../../components/Button';
 
 const BlueApp = require('../../BlueApp');
 const AppStorage = BlueApp.AppStorage;
@@ -119,7 +118,6 @@ const LightningSettings: React.FC & { navigationOptions: NavigationOptionsGetter
 
   const importScan = () => {
     requestCameraAuthorization().then(() =>
-      // @ts-ignore: Address types later
       navigation.navigate('ScanQRCodeRoot', {
         screen: 'ScanQRCode',
         params: {
@@ -137,7 +135,7 @@ const LightningSettings: React.FC & { navigationOptions: NavigationOptionsGetter
         <BlueText>{loc.settings.lightning_settings_explain}</BlueText>
       </BlueCard>
 
-      <ButtonRNElements
+      <Button
         icon={{
           name: 'github',
           type: 'font-awesome',
@@ -174,7 +172,7 @@ const LightningSettings: React.FC & { navigationOptions: NavigationOptionsGetter
         <BlueSpacing20 />
         <BlueButtonLink title={loc.wallets.import_scan_qr} testID="ImportScan" onPress={importScan} />
         <BlueSpacing20 />
-        {isLoading ? <BlueLoading /> : <Button testID="Save" onPress={save} title={loc.settings.save} />}
+        {isLoading ? <BlueLoading /> : <BlueButton testID="Save" onPress={save} title={loc.settings.save} />}
       </BlueCard>
     </SafeBlueArea>
   );
diff --git a/screen/settings/notificationSettings.js b/screen/settings/notificationSettings.js
index 9a502f48..b6f0edaf 100644
--- a/screen/settings/notificationSettings.js
+++ b/screen/settings/notificationSettings.js
@@ -1,15 +1,14 @@
 import React, { useCallback, useEffect, useState } from 'react';
 import { ScrollView, TouchableWithoutFeedback, I18nManager, StyleSheet, Linking, View, TextInput } from 'react-native';
 
-import { Button as ButtonRNElements } from 'react-native-elements';
+import { Button } from 'react-native-elements';
 
 import navigationStyle from '../../components/navigationStyle';
-import { BlueCard, BlueCopyToClipboardButton, BlueListItem, BlueLoading, BlueSpacing20, BlueText } from '../../BlueComponents';
+import { BlueButton, BlueCard, BlueCopyToClipboardButton, BlueListItem, BlueLoading, BlueSpacing20, BlueText } from '../../BlueComponents';
 import loc from '../../loc';
 import { BlueCurrentTheme, useTheme } from '../../components/themes';
 import Notifications from '../../blue_modules/notifications';
 import alert from '../../components/Alert';
-import { Button } from '../../components/Button';
 
 const NotificationSettings = () => {
   const [isLoading, setIsLoading] = useState(true);
@@ -107,7 +106,7 @@ const NotificationSettings = () => {
         <BlueText>{loc.settings.groundcontrol_explanation}</BlueText>
       </BlueCard>
 
-      <ButtonRNElements
+      <Button
         icon={{
           name: 'github',
           type: 'font-awesome',
@@ -151,7 +150,7 @@ const NotificationSettings = () => {
         )}
 
         <BlueSpacing20 />
-        <Button onPress={save} title={loc.settings.save} />
+        <BlueButton onPress={save} title={loc.settings.save} />
       </BlueCard>
     </ScrollView>
   );
diff --git a/screen/settings/tools.js b/screen/settings/tools.js
index d67ad366..45b66f89 100644
--- a/screen/settings/tools.js
+++ b/screen/settings/tools.js
@@ -17,16 +17,11 @@ const NetworkSettings = () => {
     navigate('Broadcast');
   };
 
-  const navigateToGenerateWord = () => {
-    navigate('GenerateWord');
-  };
-
   return (
     <SafeBlueArea>
       <ScrollView>
         <BlueListItem title={loc.is_it_my_address.title} onPress={navigateToIsItMyAddress} testID="IsItMyAddress" chevron />
         <BlueListItem title={loc.settings.network_broadcast} onPress={navigateToBroadcast} testID="Broadcast" chevron />
-        <BlueListItem title={loc.autofill_word.title} onPress={navigateToGenerateWord} testID="GenerateWord" chevron />
       </ScrollView>
     </SafeBlueArea>
   );
diff --git a/screen/settings/torSettings.js b/screen/settings/torSettings.js
index d3f097aa..3cbbcfc7 100644
--- a/screen/settings/torSettings.js
+++ b/screen/settings/torSettings.js
@@ -1,12 +1,12 @@
 import React, { useState, useEffect, useContext } from 'react';
-import { View } from 'react-native';
+import {  View } from 'react-native';
+
 import navigationStyle from '../../components/navigationStyle';
-import { BlueCard, BlueListItem, BlueLoading, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueCard, BlueListItem, BlueLoading, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
 import loc from '../../loc';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import alert from '../../components/Alert';
 import { isTorCapable } from '../../blue_modules/environment';
-import Button from '../../components/Button';
 
 const torrific = isTorCapable ? require('../../blue_modules/torrific') : require('../../scripts/maccatalystpatches/torrific.js');
 
@@ -91,13 +91,13 @@ const TorSettings = () => {
             <BlueText>Daemon Status: {daemonStatus}</BlueText>
           </BlueCard>
           <BlueCard>
-            <Button title={loc.send.dynamic_start} onPress={startIfNotStarted} />
+            <BlueButton title={loc.send.dynamic_start} onPress={startIfNotStarted} />
             <BlueSpacing20 />
-            <Button title={loc.send.dynamic_stop} onPress={stopIfRunning} />
+            <BlueButton title={loc.send.dynamic_stop} onPress={stopIfRunning} />
             <BlueSpacing20 />
-            <Button title="Test Socket" onPress={testSocket} />
+            <BlueButton title="Test Socket" onPress={testSocket} />
             <BlueSpacing20 />
-            <Button title="Test HTTP" onPress={testHttp} />
+            <BlueButton title="Test HTTP" onPress={testHttp} />
           </BlueCard>
         </>
       )}
diff --git a/screen/transactions/CPFP.js b/screen/transactions/CPFP.js
index a82ed42e..53398077 100644
--- a/screen/transactions/CPFP.js
+++ b/screen/transactions/CPFP.js
@@ -15,7 +15,7 @@ import Clipboard from '@react-native-clipboard/clipboard';
 import { Text } from 'react-native-elements';
 import ReactNativeHapticFeedback from 'react-native-haptic-feedback';
 
-import { BlueCard, BlueReplaceFeeSuggestions, BlueSpacing, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueCard, BlueReplaceFeeSuggestions, BlueSpacing, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import { BlueCurrentTheme } from '../../components/themes';
 import { HDSegwitBech32Transaction, HDSegwitBech32Wallet } from '../../class';
@@ -23,7 +23,6 @@ import loc from '../../loc';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import Notifications from '../../blue_modules/notifications';
 import alert from '../../components/Alert';
-import Button from '../../components/Button';
 const BlueElectrum = require('../../blue_modules/BlueElectrum');
 
 const styles = StyleSheet.create({
@@ -168,7 +167,7 @@ export default class CPFP extends Component {
             <BlueSpacing20 />
             <BlueReplaceFeeSuggestions onFeeSelected={fee => this.setState({ newFeeRate: fee })} transactionMinimum={this.state.feeRate} />
             <BlueSpacing />
-            <Button
+            <BlueButton
               disabled={this.state.newFeeRate <= this.state.feeRate}
               onPress={() => this.createTransaction()}
               title={loc.transactions.cpfp_create}
@@ -196,7 +195,7 @@ export default class CPFP extends Component {
           >
             <Text style={styles.actionText}>{loc.send.create_verify}</Text>
           </TouchableOpacity>
-          <Button disabled={this.context.isElectrumDisabled} onPress={this.broadcast} title={loc.send.confirm_sendNow} />
+          <BlueButton disabled={this.context.isElectrumDisabled} onPress={this.broadcast} title={loc.send.confirm_sendNow} />
         </BlueCard>
       </View>
     );
diff --git a/screen/transactions/transactionStatus.js b/screen/transactions/transactionStatus.js
index 7a55db58..473c387a 100644
--- a/screen/transactions/transactionStatus.js
+++ b/screen/transactions/transactionStatus.js
@@ -1,10 +1,10 @@
 import React, { useContext, useEffect, useLayoutEffect, useRef, useState } from 'react';
 import { View, ActivityIndicator, Text, TouchableOpacity, StyleSheet, BackHandler } from 'react-native';
 import { Icon } from 'react-native-elements';
-import { useNavigation, useRoute } from '@react-navigation/native';
+import { useNavigation, useRoute, useTheme } from '@react-navigation/native';
 import ReactNativeHapticFeedback from 'react-native-haptic-feedback';
 
-import { BlueCard, BlueLoading, BlueSpacing10, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueCard, BlueLoading, BlueSpacing10, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
 import TransactionIncomingIcon from '../../components/icons/TransactionIncomingIcon';
 import TransactionOutgoingIcon from '../../components/icons/TransactionOutgoingIcon';
 import TransactionPendingIcon from '../../components/icons/TransactionPendingIcon';
@@ -15,8 +15,6 @@ import { BitcoinUnit } from '../../models/bitcoinUnits';
 import loc, { formatBalanceWithoutSuffix } from '../../loc';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import * as BlueElectrum from '../../blue_modules/BlueElectrum';
-import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const buttonStatus = Object.freeze({
   possible: 1,
@@ -289,7 +287,7 @@ const TransactionsStatus = () => {
     } else if (isCPFPPossible === buttonStatus.possible) {
       return (
         <>
-          <Button onPress={navigateToCPFP} title={loc.transactions.status_bump} />
+          <BlueButton onPress={navigateToCPFP} title={loc.transactions.status_bump} />
           <BlueSpacing10 />
         </>
       );
@@ -328,7 +326,7 @@ const TransactionsStatus = () => {
     } else if (isRBFBumpFeePossible === buttonStatus.possible) {
       return (
         <>
-          <Button onPress={navigateToRBFBumpFee} title={loc.transactions.status_bump} />
+          <BlueButton onPress={navigateToRBFBumpFee} title={loc.transactions.status_bump} />
           <BlueSpacing10 />
         </>
       );
diff --git a/screen/wallets/add.js b/screen/wallets/add.js
index 63a4cb61..758dce79 100644
--- a/screen/wallets/add.js
+++ b/screen/wallets/add.js
@@ -19,6 +19,7 @@ import {
   BitcoinButton,
   VaultButton,
   BlueFormLabel,
+  BlueButton,
   BlueButtonLink,
   BlueSpacing20,
 } from '../../BlueComponents';
@@ -33,7 +34,6 @@ import { LdkButton } from '../../components/LdkButton';
 import alert from '../../components/Alert';
 import useAsyncPromise from '../../hooks/useAsyncPromise';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 const BlueApp = require('../../BlueApp');
 const AppStorage = BlueApp.AppStorage;
 const A = require('../../blue_modules/analytics');
@@ -366,7 +366,7 @@ const WalletsAdd = () => {
           <BlueSpacing20 />
           <View style={styles.createButton}>
             {!isLoading ? (
-              <Button
+              <BlueButton
                 testID="Create"
                 title={loc.wallets.add_create}
                 disabled={!selectedWalletType || (selectedWalletType === Chain.OFFCHAIN && (walletBaseURI ?? '').trim().length === 0)}
@@ -393,7 +393,7 @@ const WalletsAdd = () => {
 WalletsAdd.navigationOptions = navigationStyle(
   {
     closeButton: true,
-    headerBackVisible: false,
+    headerHideBackButton: true,
   },
   opts => ({ ...opts, title: loc.wallets.add_title }),
 );
diff --git a/screen/wallets/addMultisig.js b/screen/wallets/addMultisig.js
index 48c20dc2..0f52e4e5 100644
--- a/screen/wallets/addMultisig.js
+++ b/screen/wallets/addMultisig.js
@@ -5,14 +5,13 @@ import { Icon } from 'react-native-elements';
 import { useNavigation, useRoute } from '@react-navigation/native';
 import { SafeAreaView } from 'react-native-safe-area-context';
 
-import { BlueListItem, BlueSpacing20 } from '../../BlueComponents';
+import { BlueButton, BlueListItem, BlueSpacing20 } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import BottomModal from '../../components/BottomModal';
 import { MultisigHDWallet } from '../../class';
 import loc from '../../loc';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const WalletsAddMultisig = () => {
   const { colors } = useTheme();
@@ -232,7 +231,7 @@ const WalletsAddMultisig = () => {
         </View>
       )}
       <View style={styles.buttonContainer}>
-        <Button buttonTextColor={colors.buttonAlternativeTextColor} title={loc.multisig.lets_start} onPress={onLetsStartPress} />
+        <BlueButton buttonTextColor={colors.buttonAlternativeTextColor} title={loc.multisig.lets_start} onPress={onLetsStartPress} />
       </View>
       {renderModal()}
     </SafeAreaView>
diff --git a/screen/wallets/addMultisigStep2.js b/screen/wallets/addMultisigStep2.js
index 8bbde4c1..c624aff7 100644
--- a/screen/wallets/addMultisigStep2.js
+++ b/screen/wallets/addMultisigStep2.js
@@ -19,7 +19,15 @@ import { useNavigation, useRoute } from '@react-navigation/native';
 import { getSystemName } from 'react-native-device-info';
 import ReactNativeHapticFeedback from 'react-native-haptic-feedback';
 
-import { BlueButtonLink, BlueFormMultiInput, BlueSpacing10, BlueSpacing20, BlueText, BlueTextCentered } from '../../BlueComponents';
+import {
+  BlueButton,
+  BlueButtonLink,
+  BlueFormMultiInput,
+  BlueSpacing10,
+  BlueSpacing20,
+  BlueText,
+  BlueTextCentered,
+} from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import { HDSegwitBech32Wallet, MultisigCosigner, MultisigHDWallet } from '../../class';
 import loc from '../../loc';
@@ -36,7 +44,6 @@ import alert from '../../components/Alert';
 import confirm from '../../helpers/confirm';
 import { requestCameraAuthorization } from '../../helpers/scan-qr';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const prompt = require('../../helpers/prompt');
 const A = require('../../blue_modules/analytics');
@@ -59,7 +66,7 @@ const WalletsAddMultisigStep2 = () => {
   const [isRenderCosignersXpubModalVisible, setIsRenderCosignersXpubModalVisible] = useState(false);
   const [cosignerXpub, setCosignerXpub] = useState(''); // string used in exportCosigner()
   const [cosignerXpubURv2, setCosignerXpubURv2] = useState(''); // string displayed in renderCosignersXpubModal()
-  const [cosignerXpubFilename, setCosignerXpubFilename] = useState('bw-cosigner.bwcosigner');
+  const [cosignerXpubFilename, setCosignerXpubFilename] = useState('bw-cosigner.json');
   const [vaultKeyData, setVaultKeyData] = useState({ keyIndex: 1, xpub: '', seed: '', isLoading: false }); // string rendered in modal
   const [importText, setImportText] = useState('');
   const [askPassphrase, setAskPassphrase] = useState(false);
@@ -168,7 +175,7 @@ const WalletsAddMultisigStep2 = () => {
     await saveToDisk();
     A(A.ENUM.CREATED_WALLET);
     ReactNativeHapticFeedback.trigger('notificationSuccess', { ignoreAndroidSystemSettings: false });
-    navigation.getParent().goBack();
+    navigation.dangerouslyGetParent().goBack();
   };
 
   const generateNewKey = () => {
@@ -215,7 +222,7 @@ const WalletsAddMultisigStep2 = () => {
     if (MultisigHDWallet.isXpubValid(cosigner[0])) {
       setCosignerXpub(MultisigCosigner.exportToJson(cosigner[1], cosigner[0], cosigner[2]));
       setCosignerXpubURv2(encodeUR(MultisigCosigner.exportToJson(cosigner[1], cosigner[0], cosigner[2]))[0]);
-      setCosignerXpubFilename('bw-cosigner-' + cosigner[1] + '.bwcosigner');
+      setCosignerXpubFilename('bw-cosigner-' + cosigner[1] + '.json');
       setIsRenderCosignersXpubModalVisible(true);
     } else {
       const path = getPath();
@@ -224,7 +231,7 @@ const WalletsAddMultisigStep2 = () => {
       const fp = getFpCacheForMnemonics(cosigner[0], cosigner[3]);
       setCosignerXpub(MultisigCosigner.exportToJson(fp, xpub, path));
       setCosignerXpubURv2(encodeUR(MultisigCosigner.exportToJson(fp, xpub, path))[0]);
-      setCosignerXpubFilename('bw-cosigner-' + fp + '.bwcosigner');
+      setCosignerXpubFilename('bw-cosigner-' + fp + '.json');
       setIsRenderCosignersXpubModalVisible(true);
     }
   };
@@ -360,7 +367,7 @@ const WalletsAddMultisigStep2 = () => {
   };
 
   const onBarScanned = ret => {
-    if (!isDesktop) navigation.getParent().pop();
+    if (!isDesktop) navigation.dangerouslyGetParent().pop();
     if (!ret.data) ret = { data: ret };
 
     try {
@@ -591,7 +598,11 @@ const WalletsAddMultisigStep2 = () => {
           <BlueSpacing10 />
           <View style={styles.secretContainer}>{renderSecret(vaultKeyData.seed.split(' '))}</View>
           <BlueSpacing20 />
-          {isLoading ? <ActivityIndicator /> : <Button title={loc.send.success_done} onPress={() => setIsMnemonicsModalVisible(false)} />}
+          {isLoading ? (
+            <ActivityIndicator />
+          ) : (
+            <BlueButton title={loc.send.success_done} onPress={() => setIsMnemonicsModalVisible(false)} />
+          )}
         </View>
       </BottomModal>
     );
@@ -625,7 +636,7 @@ const WalletsAddMultisigStep2 = () => {
             {isLoading ? (
               <ActivityIndicator />
             ) : (
-              <Button disabled={importText.trim().length === 0} title={loc.wallets.import_do_import} onPress={useMnemonicPhrase} />
+              <BlueButton disabled={importText.trim().length === 0} title={loc.wallets.import_do_import} onPress={useMnemonicPhrase} />
             )}
             <BlueButtonLink ref={openScannerButton} disabled={isLoading} onPress={scanOrOpenFile} title={loc.wallets.import_scan_qr} />
           </View>
@@ -679,7 +690,7 @@ const WalletsAddMultisigStep2 = () => {
 
   const footer = (
     <View style={styles.buttonBottom}>
-      {isLoading ? <ActivityIndicator /> : <Button title={loc.multisig.create} onPress={onCreate} disabled={cosigners.length !== n} />}
+      {isLoading ? <ActivityIndicator /> : <BlueButton title={loc.multisig.create} onPress={onCreate} disabled={cosigners.length !== n} />}
     </View>
   );
 
diff --git a/screen/wallets/addresses.js b/screen/wallets/addresses.js
index 790b9e5f..f2767ca8 100644
--- a/screen/wallets/addresses.js
+++ b/screen/wallets/addresses.js
@@ -99,7 +99,7 @@ const WalletAddresses = () => {
 
   useLayoutEffect(() => {
     setOptions({
-      headerSearchBarOptions: {
+      searchBar: {
         onChangeText: event => setSearch(event.nativeEvent.text),
       },
     });
diff --git a/screen/wallets/export.js b/screen/wallets/export.js
index 8429b69c..86fd8939 100644
--- a/screen/wallets/export.js
+++ b/screen/wallets/export.js
@@ -163,7 +163,7 @@ const styles = StyleSheet.create({
 WalletExport.navigationOptions = navigationStyle(
   {
     closeButton: true,
-    headerBackVisible: false,
+    headerHideBackButton: true,
     statusBarStyle: 'light',
   },
   opts => ({ ...opts, title: loc.wallets.export_title }),
diff --git a/screen/wallets/exportMultisigCoordinationSetup.js b/screen/wallets/exportMultisigCoordinationSetup.js
index b202d97e..aa1218d7 100644
--- a/screen/wallets/exportMultisigCoordinationSetup.js
+++ b/screen/wallets/exportMultisigCoordinationSetup.js
@@ -130,7 +130,7 @@ const styles = StyleSheet.create({
 ExportMultisigCoordinationSetup.navigationOptions = navigationStyle(
   {
     closeButton: true,
-    headerBackVisible: false,
+    headerHideBackButton: true,
     statusBarStyle: 'light',
   },
   opts => ({ ...opts, title: loc.multisig.export_coordination_setup }),
diff --git a/screen/wallets/generateWord.js b/screen/wallets/generateWord.js
deleted file mode 100644
index f19ee06b..00000000
--- a/screen/wallets/generateWord.js
+++ /dev/null
@@ -1,139 +0,0 @@
-import React, { useState } from 'react';
-import { useTheme } from '@react-navigation/native';
-import { StyleSheet, View, KeyboardAvoidingView, Platform, TextInput, Keyboard } from 'react-native';
-
-import loc from '../../loc';
-import { BlueCard, BlueSpacing10, BlueSpacing20, BlueText, SafeBlueArea } from '../../BlueComponents';
-import navigationStyle from '../../components/navigationStyle';
-
-import { randomBytes } from '../../class/rng';
-import { generateChecksumWords } from '../../blue_modules/checksumWords';
-import Button from '../../components/Button';
-
-const GenerateWord = () => {
-  const { colors } = useTheme();
-
-  const [mnemonic, setMnemonic] = useState('');
-  const [result, setResult] = useState('');
-
-  const stylesHooks = StyleSheet.create({
-    input: {
-      borderColor: colors.formBorder,
-      borderBottomColor: colors.formBorder,
-      backgroundColor: colors.inputBackgroundColor,
-    },
-  });
-
-  const handleUpdateMnemonic = nextValue => {
-    setMnemonic(nextValue);
-    setResult();
-  };
-
-  const checkMnemonic = async () => {
-    Keyboard.dismiss();
-
-    const seedPhrase = mnemonic.toString();
-
-    const possibleWords = generateChecksumWords(seedPhrase);
-
-    if (!possibleWords) {
-      // likely because of an invalid mnemonic
-      setResult(loc.autofill_word.error);
-      return;
-    }
-
-    const random = await randomBytes(1);
-    const randomindex = Math.round((random.readUInt8(0) / 255) * (possibleWords.length - 1));
-
-    setResult(possibleWords[randomindex]);
-  };
-
-  const clearMnemonicInput = () => {
-    setMnemonic('');
-    setResult();
-  };
-
-  return (
-    <SafeBlueArea style={styles.blueArea}>
-      <KeyboardAvoidingView
-        enabled={!Platform.isPad}
-        behavior={Platform.OS === 'ios' ? 'position' : null}
-        keyboardShouldPersistTaps="handled"
-      >
-        <View style={styles.wrapper}>
-          <BlueCard style={styles.mainCard}>
-            <View style={[styles.input, stylesHooks.input]}>
-              <TextInput
-                style={styles.text}
-                maxHeight={100}
-                minHeight={100}
-                maxWidth="100%"
-                minWidth="100%"
-                multiline
-                editable
-                placeholder={loc.autofill_word.enter}
-                placeholderTextColor="#81868e"
-                value={mnemonic}
-                onChangeText={handleUpdateMnemonic}
-                testID="MnemonicInput"
-              />
-            </View>
-
-            <BlueSpacing10 />
-            <Button title={loc.send.input_clear} onPress={clearMnemonicInput} />
-            <BlueSpacing20 />
-            <BlueText style={styles.center} testID="Result">
-              {result}
-            </BlueText>
-            <BlueSpacing20 />
-            <View>
-              <Button
-                disabled={mnemonic.trim().length === 0}
-                title={loc.autofill_word.generate_word}
-                onPress={checkMnemonic}
-                testID="GenerateWord"
-              />
-            </View>
-            <BlueSpacing20 />
-          </BlueCard>
-        </View>
-      </KeyboardAvoidingView>
-    </SafeBlueArea>
-  );
-};
-
-export default GenerateWord;
-GenerateWord.navigationOptions = navigationStyle({}, opts => ({ ...opts, title: loc.autofill_word.title }));
-
-const styles = StyleSheet.create({
-  wrapper: {
-    marginTop: 16,
-    alignItems: 'center',
-    justifyContent: 'flex-start',
-  },
-  blueArea: {
-    paddingTop: 19,
-  },
-  mainCard: {
-    padding: 0,
-    display: 'flex',
-    flexDirection: 'column',
-    alignItems: 'center',
-    justifyContent: 'flex-start',
-  },
-  input: {
-    flexDirection: 'row',
-    borderWidth: 1,
-    borderBottomWidth: 0.5,
-    alignItems: 'center',
-    borderRadius: 4,
-  },
-  center: {
-    textAlign: 'center',
-  },
-  text: {
-    padding: 8,
-    minHeight: 33,
-    color: '#81868e',
-  },
-});
diff --git a/screen/wallets/import.js b/screen/wallets/import.js
index db9704bb..aa960ecd 100644
--- a/screen/wallets/import.js
+++ b/screen/wallets/import.js
@@ -1,7 +1,9 @@
 import React, { useEffect, useState, useContext } from 'react';
 import { Platform, View, Keyboard, StyleSheet, Switch, TouchableWithoutFeedback } from 'react-native';
 import { useNavigation, useRoute } from '@react-navigation/native';
+
 import {
+  BlueButton,
   BlueButtonLink,
   BlueDoneAndDismissKeyboardInputAccessory,
   BlueFormLabel,
@@ -16,7 +18,6 @@ import loc from '../../loc';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import { requestCameraAuthorization } from '../../helpers/scan-qr';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const WalletsImport = () => {
   const navigation = useNavigation();
@@ -132,7 +133,7 @@ const WalletsImport = () => {
       <BlueSpacing20 />
       <View style={styles.center}>
         <>
-          <Button
+          <BlueButton
             disabled={importText.trim().length === 0}
             title={loc.wallets.import_do_import}
             testID="DoImport"
diff --git a/screen/wallets/importCustomDerivationPath.js b/screen/wallets/importCustomDerivationPath.js
index ce36c3b5..edc61493 100644
--- a/screen/wallets/importCustomDerivationPath.js
+++ b/screen/wallets/importCustomDerivationPath.js
@@ -2,7 +2,7 @@ import React, { useContext, useEffect, useState, useRef, useMemo } from 'react';
 import { FlatList, StyleSheet, TextInput, View } from 'react-native';
 import { useNavigation, useRoute } from '@react-navigation/native';
 
-import { BlueFormLabel, BlueSpacing20, BlueTextCentered, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueFormLabel, BlueSpacing20, BlueTextCentered, SafeBlueArea } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import WalletToImport from '../../components/WalletToImport';
 import loc from '../../loc';
@@ -11,7 +11,6 @@ import { HDLegacyP2PKHWallet, HDSegwitP2SHWallet, HDSegwitBech32Wallet } from '.
 import { validateBip32 } from '../../class/wallet-import';
 import debounce from '../../blue_modules/debounce';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const WRONG_PATH = 'WRONG_PATH';
 const WALLET_FOUND = 'WALLET_FOUND';
@@ -95,7 +94,7 @@ const ImportCustomDerivationPath = () => {
     importing.current = true;
     const wallet = wallets[path][type];
     addAndSaveWallet(wallet);
-    navigation.getParent().pop();
+    navigation.dangerouslyGetParent().pop();
   };
 
   const renderItem = ({ item }) => {
@@ -141,7 +140,7 @@ const ImportCustomDerivationPath = () => {
 
       <View style={[styles.center, stylesHook.center]}>
         <View style={styles.buttonContainer}>
-          <Button
+          <BlueButton
             disabled={wallets[path]?.[selected] === undefined}
             title={loc.wallets.import_do_import}
             testID="ImportButton"
diff --git a/screen/wallets/importDiscovery.js b/screen/wallets/importDiscovery.js
index 429a53fe..97a08b3f 100644
--- a/screen/wallets/importDiscovery.js
+++ b/screen/wallets/importDiscovery.js
@@ -3,7 +3,7 @@ import { ActivityIndicator, Alert, FlatList, LayoutAnimation, StyleSheet, View }
 import IdleTimerManager from 'react-native-idle-timer';
 import { useNavigation, useRoute } from '@react-navigation/native';
 import ReactNativeHapticFeedback from 'react-native-haptic-feedback';
-import { BlueButtonLink, BlueFormLabel, BlueSpacing10, BlueSpacing20, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueButtonLink, BlueFormLabel, BlueSpacing10, BlueSpacing20, SafeBlueArea } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import WalletToImport from '../../components/WalletToImport';
 import loc from '../../loc';
@@ -12,7 +12,6 @@ import startImport from '../../class/wallet-import';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import prompt from '../../helpers/prompt';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const ImportWalletDiscovery = () => {
   const navigation = useNavigation();
@@ -46,7 +45,7 @@ const ImportWalletDiscovery = () => {
     if (importing.current) return;
     importing.current = true;
     addAndSaveWallet(wallet);
-    navigation.getParent().pop();
+    navigation.dangerouslyGetParent().pop();
   };
 
   useEffect(() => {
@@ -154,7 +153,7 @@ const ImportWalletDiscovery = () => {
         )}
         <BlueSpacing10 />
         <View style={styles.buttonContainer}>
-          <Button
+          <BlueButton
             disabled={wallets.length === 0}
             title={loc.wallets.import_do_import}
             onPress={() => saveWallet(wallets[selected].wallet)}
diff --git a/screen/wallets/importSpeed.js b/screen/wallets/importSpeed.js
index 92388929..8aa0dd3d 100644
--- a/screen/wallets/importSpeed.js
+++ b/screen/wallets/importSpeed.js
@@ -3,11 +3,10 @@ import { Alert, View, StyleSheet, TextInput, ActivityIndicator } from 'react-nat
 import { useNavigation } from '@react-navigation/native';
 import { HDSegwitBech32Wallet, WatchOnlyWallet } from '../../class';
 import loc from '../../loc';
-import { BlueFormLabel, BlueFormMultiInput, BlueSpacing20, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueFormLabel, BlueFormMultiInput, BlueSpacing20, SafeBlueArea } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const WalletsImportSpeed = () => {
   const navigation = useNavigation();
@@ -62,7 +61,7 @@ const WalletsImportSpeed = () => {
       wallet.setSecret(importText);
       if (passphrase) wallet.setPassphrase(passphrase);
       await wallet.fetchBalance();
-      navigation.getParent().pop();
+      navigation.dangerouslyGetParent().pop();
       addAndSaveWallet(wallet);
     } catch (e) {
       Alert.alert(e.message);
@@ -83,7 +82,7 @@ const WalletsImportSpeed = () => {
       <TextInput testID="SpeedPassphraseInput" value={passphrase} style={styles.pathInput} onChangeText={setPassphrase} />
       <BlueSpacing20 />
       <View style={styles.center}>
-        <Button testID="SpeedDoImport" title="Import" onPress={importMnemonic} />
+        <BlueButton testID="SpeedDoImport" title="Import" onPress={importMnemonic} />
         {loading && <ActivityIndicator />}
       </View>
     </SafeBlueArea>
diff --git a/screen/wallets/list.js b/screen/wallets/list.js
index 00ed6df2..924a1847 100644
--- a/screen/wallets/list.js
+++ b/screen/wallets/list.js
@@ -90,7 +90,6 @@ const WalletsList = () => {
 
   useLayoutEffect(() => {
     setOptions({
-      navigationBarColor: colors.navigationBarColor,
       headerShown: !isDesktop,
       headerStyle: {
         backgroundColor: colors.customHeader,
@@ -266,7 +265,7 @@ const WalletsList = () => {
   const renderScanButton = () => {
     if (wallets.length > 0) {
       return (
-        <FContainer ref={walletActionButtonsRef.current}>
+        <FContainer ref={walletActionButtonsRef}>
           <FButton
             onPress={onScanButtonPressed}
             onLongPress={sendButtonLongPress}
diff --git a/screen/wallets/pleaseBackup.tsx b/screen/wallets/pleaseBackup.tsx
index 55756a68..866d00df 100644
--- a/screen/wallets/pleaseBackup.tsx
+++ b/screen/wallets/pleaseBackup.tsx
@@ -2,14 +2,13 @@ import React, { useEffect, useState, useCallback, useContext } from 'react';
 import { ActivityIndicator, View, BackHandler, Text, ScrollView, StyleSheet, I18nManager } from 'react-native';
 import { useNavigation, useRoute } from '@react-navigation/native';
 
-import { SafeBlueArea } from '../../BlueComponents';
+import { SafeBlueArea, BlueButton } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import Privacy from '../../blue_modules/Privacy';
 import loc from '../../loc';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import { AbstractWallet } from '../../class';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const PleaseBackup: React.FC = () => {
   const { wallets } = useContext(BlueStorageContext);
@@ -36,7 +35,7 @@ const PleaseBackup: React.FC = () => {
 
   const handleBackButton = useCallback(() => {
     // @ts-ignore: Ignore
-    navigation.getParent()?.pop();
+    navigation.dangerouslyGetParent()?.pop();
     return true;
   }, [navigation]);
 
@@ -84,7 +83,7 @@ const PleaseBackup: React.FC = () => {
             <View style={styles.secret}>{renderSecret()}</View>
           </View>
           <View style={styles.bottom}>
-            <Button testID="PleasebackupOk" onPress={handleBackButton} title={loc.pleasebackup.ok} />
+            <BlueButton testID="PleasebackupOk" onPress={handleBackButton} title={loc.pleasebackup.ok} />
           </View>
         </ScrollView>
       )}
@@ -97,7 +96,7 @@ PleaseBackup.navigationOptions = navigationStyle(
   {
     gestureEnabled: false,
     swipeEnabled: false,
-    headerHideBackButton: false,
+    headerHideBackButton: true,
   },
   opts => ({ ...opts, title: loc.pleasebackup.title }),
 );
diff --git a/screen/wallets/pleaseBackupLNDHub.js b/screen/wallets/pleaseBackupLNDHub.js
index 846865bc..c1b0b31f 100644
--- a/screen/wallets/pleaseBackupLNDHub.js
+++ b/screen/wallets/pleaseBackupLNDHub.js
@@ -2,14 +2,13 @@ import React, { useCallback, useContext, useEffect, useState } from 'react';
 import { useNavigation, useRoute } from '@react-navigation/native';
 import { View, StyleSheet, ScrollView, BackHandler } from 'react-native';
 
-import { BlueCopyTextToClipboard, BlueSpacing20, BlueTextCentered, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueCopyTextToClipboard, BlueSpacing20, BlueTextCentered, SafeBlueArea } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import Privacy from '../../blue_modules/Privacy';
 import loc from '../../loc';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import QRCodeComponent from '../../components/QRCodeComponent';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const PleaseBackupLNDHub = () => {
   const { wallets } = useContext(BlueStorageContext);
@@ -19,7 +18,7 @@ const PleaseBackupLNDHub = () => {
   const { colors } = useTheme();
   const [qrCodeSize, setQRCodeSize] = useState(90);
   const handleBackButton = useCallback(() => {
-    navigation.getParent().pop();
+    navigation.dangerouslyGetParent().pop();
     return true;
   }, [navigation]);
   const styles = StyleSheet.create({
@@ -45,7 +44,7 @@ const PleaseBackupLNDHub = () => {
     };
   }, [handleBackButton]);
 
-  const pop = () => navigation.getParent().pop();
+  const pop = () => navigation.dangerouslyGetParent().pop();
 
   const onLayout = e => {
     const { height, width } = e.nativeEvent.layout;
@@ -62,7 +61,7 @@ const PleaseBackupLNDHub = () => {
         <QRCodeComponent value={wallet.getSecret()} size={qrCodeSize} />
         <BlueCopyTextToClipboard text={wallet.getSecret()} />
         <BlueSpacing20 />
-        <Button onPress={pop} title={loc.pleasebackup.ok_lnd} />
+        <BlueButton onPress={pop} title={loc.pleasebackup.ok_lnd} />
       </ScrollView>
     </SafeBlueArea>
   );
@@ -72,7 +71,7 @@ PleaseBackupLNDHub.navigationOptions = navigationStyle(
   {
     gestureEnabled: false,
     swipeEnabled: false,
-    headerBackVisible: false,
+    headerHideBackButton: true,
   },
   opts => ({ ...opts, headerTitle: loc.pleasebackup.title }),
 );
diff --git a/screen/wallets/pleaseBackupLdk.js b/screen/wallets/pleaseBackupLdk.js
index a6792594..863412f2 100644
--- a/screen/wallets/pleaseBackupLdk.js
+++ b/screen/wallets/pleaseBackupLdk.js
@@ -2,13 +2,12 @@ import React, { useCallback, useContext, useEffect } from 'react';
 import { useNavigation, useRoute } from '@react-navigation/native';
 import { View, useWindowDimensions, StyleSheet, BackHandler, ScrollView } from 'react-native';
 import QRCode from 'react-native-qrcode-svg';
-import { BlueCopyTextToClipboard, BlueSpacing20, BlueTextCentered, SafeBlueArea } from '../../BlueComponents';
+import { BlueButton, BlueCopyTextToClipboard, BlueSpacing20, BlueTextCentered, SafeBlueArea } from '../../BlueComponents';
 import navigationStyle from '../../components/navigationStyle';
 import Privacy from '../../blue_modules/Privacy';
 import loc from '../../loc';
 import { BlueStorageContext } from '../../blue_modules/storage-context';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const PleaseBackupLdk = () => {
   const { wallets } = useContext(BlueStorageContext);
@@ -19,7 +18,7 @@ const PleaseBackupLdk = () => {
   const { colors } = useTheme();
   const { height, width } = useWindowDimensions();
   const handleBackButton = useCallback(() => {
-    navigation.getParent().pop();
+    navigation.dangerouslyGetParent().pop();
     return true;
   }, [navigation]);
 
@@ -48,7 +47,7 @@ const PleaseBackupLdk = () => {
     };
   }, [handleBackButton]);
 
-  const pop = () => navigation.getParent().pop();
+  const pop = () => navigation.dangerouslyGetParent().pop();
   return (
     <SafeBlueArea style={styles.root}>
       <ScrollView centerContent contentContainerStyle={styles.scrollViewContent}>
@@ -71,7 +70,7 @@ const PleaseBackupLdk = () => {
         </View>
         <BlueCopyTextToClipboard text={wallet.getSecret()} />
         <BlueSpacing20 />
-        <Button onPress={pop} title={loc.pleasebackup.ok_lnd} />
+        <BlueButton onPress={pop} title={loc.pleasebackup.ok_lnd} />
       </ScrollView>
     </SafeBlueArea>
   );
@@ -81,7 +80,7 @@ PleaseBackupLdk.navigationOptions = navigationStyle({
   title: loc.pleasebackup.title,
   gestureEnabled: false,
   swipeEnabled: false,
-  headerBackVisible: false,
+  headerHideBackButton: true,
 });
 
 export default PleaseBackupLdk;
diff --git a/screen/wallets/reorderWallets.js b/screen/wallets/reorderWallets.js
index 79441d6d..17c75757 100644
--- a/screen/wallets/reorderWallets.js
+++ b/screen/wallets/reorderWallets.js
@@ -207,7 +207,7 @@ const ReorderWallets = () => {
 
 ReorderWallets.navigationOptions = navigationStyle(
   {
-    headerBackVisible: false,
+    headerHideBackButton: true,
     headerLargeTitle: true,
     closeButton: true,
   },
diff --git a/screen/wallets/selectWallet.js b/screen/wallets/selectWallet.js
index eba1d792..2ddc5d82 100644
--- a/screen/wallets/selectWallet.js
+++ b/screen/wallets/selectWallet.js
@@ -15,7 +15,7 @@ import { useTheme } from '../../components/themes';
 const SelectWallet = () => {
   const { chainType, onWalletSelect, availableWallets, noWalletExplanationText } = useRoute().params;
   const [isLoading, setIsLoading] = useState(true);
-  const { pop, navigate, setOptions, getParent } = useNavigation();
+  const { pop, navigate, setOptions, dangerouslyGetParent } = useNavigation();
   const { wallets } = useContext(BlueStorageContext);
   const { colors, closeImage } = useTheme();
   const isModal = useNavigationState(state => state.routes.length) === 1;
@@ -119,7 +119,7 @@ const SelectWallet = () => {
                 accessibilityRole="button"
                 style={styles.button}
                 onPress={() => {
-                  getParent().pop();
+                  dangerouslyGetParent().pop();
                 }}
                 testID="NavigationCloseButton"
               >
diff --git a/screen/wallets/signVerify.js b/screen/wallets/signVerify.js
index e0530aa6..aa46f475 100644
--- a/screen/wallets/signVerify.js
+++ b/screen/wallets/signVerify.js
@@ -231,7 +231,7 @@ const SignVerify = () => {
   );
 };
 
-SignVerify.navigationOptions = navigationStyle({ closeButton: true, headerBackVisible: false, statusBarStyle: 'light' }, opts => ({
+SignVerify.navigationOptions = navigationStyle({ closeButton: true, headerHideBackButton: true, statusBarStyle: 'light' }, opts => ({
   ...opts,
   title: loc.addresses.sign_title,
 }));
diff --git a/screen/wallets/viewEditMultisigCosigners.js b/screen/wallets/viewEditMultisigCosigners.js
index 401c05b3..b8b53769 100644
--- a/screen/wallets/viewEditMultisigCosigners.js
+++ b/screen/wallets/viewEditMultisigCosigners.js
@@ -16,6 +16,7 @@ import {
 import { Icon, Badge } from 'react-native-elements';
 import { useFocusEffect, useNavigation, useRoute } from '@react-navigation/native';
 import {
+  BlueButton,
   BlueButtonLink,
   BlueFormMultiInput,
   BlueLoading,
@@ -43,7 +44,6 @@ import QRCodeComponent from '../../components/QRCodeComponent';
 import alert from '../../components/Alert';
 import { requestCameraAuthorization } from '../../helpers/scan-qr';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 const fs = require('../../blue_modules/fs');
 const prompt = require('../../helpers/prompt');
 
@@ -218,7 +218,7 @@ const ViewEditMultisigCosigners = () => {
             </>
           )}
           <BlueSpacing20 />
-          <Button
+          <BlueButton
             title={loc.multisig.share}
             onPress={() => {
               setIsMnemonicsModalVisible(false);
@@ -228,7 +228,7 @@ const ViewEditMultisigCosigners = () => {
             }}
           />
           <BlueSpacing20 />
-          <Button title={loc.send.success_done} onPress={() => setIsMnemonicsModalVisible(false)} />
+          <BlueButton title={loc.send.success_done} onPress={() => setIsMnemonicsModalVisible(false)} />
         </View>
       </BottomModal>
     );
@@ -490,7 +490,11 @@ const ViewEditMultisigCosigners = () => {
             {isLoading ? (
               <ActivityIndicator />
             ) : (
-              <Button disabled={importText.trim().length === 0} title={loc.wallets.import_do_import} onPress={handleUseMnemonicPhrase} />
+              <BlueButton
+                disabled={importText.trim().length === 0}
+                title={loc.wallets.import_do_import}
+                onPress={handleUseMnemonicPhrase}
+              />
             )}
             <BlueButtonLink ref={openScannerButtonRef} disabled={isLoading} onPress={scanOrOpenFile} title={loc.wallets.import_scan_qr} />
           </View>
@@ -553,7 +557,7 @@ const ViewEditMultisigCosigners = () => {
     );
   };
 
-  const footer = <Button disabled={vaultKeyData.isLoading || isSaveButtonDisabled} title={loc._.save} onPress={onSave} />;
+  const footer = <BlueButton disabled={vaultKeyData.isLoading || isSaveButtonDisabled} title={loc._.save} onPress={onSave} />;
 
   return (
     <View style={[styles.root, stylesHook.root]}>
@@ -653,7 +657,7 @@ const styles = StyleSheet.create({
 ViewEditMultisigCosigners.navigationOptions = navigationStyle(
   {
     closeButton: true,
-    headerBackVisible: false,
+    headerHideBackButton: true,
     statusBarStyle: 'light',
   },
   opts => ({ ...opts, headerTitle: loc.multisig.manage_keys }),
diff --git a/screen/wallets/xpub.js b/screen/wallets/xpub.js
index 18d25ed1..ccf168ee 100644
--- a/screen/wallets/xpub.js
+++ b/screen/wallets/xpub.js
@@ -2,7 +2,7 @@ import React, { useCallback, useContext, useEffect, useState } from 'react';
 import { InteractionManager, ActivityIndicator, View, StyleSheet } from 'react-native';
 import { useFocusEffect, useRoute, useNavigation } from '@react-navigation/native';
 import navigationStyle from '../../components/navigationStyle';
-import { BlueSpacing20, SafeBlueArea, BlueText, BlueCopyTextToClipboard } from '../../BlueComponents';
+import { BlueSpacing20, SafeBlueArea, BlueText, BlueCopyTextToClipboard, BlueButton } from '../../BlueComponents';
 import Privacy from '../../blue_modules/Privacy';
 import Biometric from '../../class/biometrics';
 import loc from '../../loc';
@@ -11,7 +11,6 @@ import QRCodeComponent from '../../components/QRCodeComponent';
 import HandoffComponent from '../../components/handoff';
 import Share from 'react-native-share';
 import { useTheme } from '../../components/themes';
-import Button from '../../components/Button';
 
 const styles = StyleSheet.create({
   root: {
@@ -102,7 +101,7 @@ const WalletXpub = () => {
         </View>
         <HandoffComponent title={loc.wallets.xpub_title} type={HandoffComponent.activityTypes.Xpub} userInfo={{ xpub: xPubText }} />
         <View style={styles.share}>
-          <Button onPress={handleShareButtonPressed} title={loc.receive.details_share} />
+          <BlueButton onPress={handleShareButtonPressed} title={loc.receive.details_share} />
         </View>
       </>
     </SafeBlueArea>
@@ -112,7 +111,7 @@ const WalletXpub = () => {
 WalletXpub.navigationOptions = navigationStyle(
   {
     closeButton: true,
-    headerBackVisible: false,
+    headerHideBackButton: true,
   },
   opts => ({ ...opts, headerTitle: loc.wallets.xpub_title }),
 );
diff --git a/scripts/react-native-camera-kit.patch b/scripts/react-native-camera-kit.patch
deleted file mode 100644
index 6a7d29aa..00000000
--- a/scripts/react-native-camera-kit.patch
+++ /dev/null
@@ -1,11 +0,0 @@
---- ../node_modules/react-native-camera-kit/android/src/main/java/com/rncamerakit/CKCamera.kt	2023-11-10 11:25:36
-+++ ../node_modules/react-native-camera-kit/android/src/main/java/com/rncamerakit/CKCamera.kt	2023-11-10 11:25:42
-@@ -180,7 +180,7 @@
-             orientationListener!!.enable()
- 
-             val scaleDetector =  ScaleGestureDetector(context, object: ScaleGestureDetector.SimpleOnScaleGestureListener() {
--                override fun onScale(detector: ScaleGestureDetector?): Boolean {
-+                override fun onScale(detector: ScaleGestureDetector): Boolean {
-                     if (zoomMode == "off") return true
-                     val cameraControl = camera?.cameraControl ?: return true
-                     val zoom = camera?.cameraInfo?.zoomState?.value?.zoomRatio ?: return true
diff --git a/scripts/react-native-tor-ios.patch b/scripts/react-native-tor-ios.patch
deleted file mode 100644
index 01c7f827..00000000
--- a/scripts/react-native-tor-ios.patch
+++ /dev/null
@@ -1,13 +0,0 @@
---- ../node_modules/react-native-tor/ios/Tor.swift	2023-11-10 11:17:20
-+++ ../node_modules/react-native-tor/ios/Tor.swift	2023-11-10 11:17:16
-@@ -42,6 +42,10 @@
-     var streams:Dictionary<String,OpaquePointer> = [:];
-     var hasLnser = false;
-     var clienTimeout:TimeInterval = 60;
-+    
-+    override class func requiresMainQueueSetup() -> Bool {
-+        return false
-+    }
-     
-     func getProxiedClient(headers:Optional<NSDictionary>,socksPort:UInt16,trustInvalidSSL: Bool = false)->URLSession{
-         let config = URLSessionConfiguration.default;
diff --git a/tests/unit/checksumWords.test.js b/tests/unit/checksumWords.test.js
deleted file mode 100644
index e7d5f7a4..00000000
--- a/tests/unit/checksumWords.test.js
+++ /dev/null
@@ -1,39 +0,0 @@
-import { generateChecksumWords } from '../../blue_modules/checksumWords';
-import { validateMnemonic } from '../../blue_modules/bip39';
-const assert = require('assert');
-
-describe('generateChecksumWords', () => {
-  it('generates 128 valid words for an 11 word input', () => {
-    const input = 'abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon';
-    const result = generateChecksumWords(input);
-    assert.ok(result);
-    assert.strictEqual(result.length, 128);
-
-    for (let i = 0; i < 128; i++) {
-      assert.ok(validateMnemonic(input + ' ' + result[i]));
-    }
-  });
-
-  it('generates 8 valid words for a 23 word input', () => {
-    const input =
-      'abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon ' +
-      'abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon';
-    const result = generateChecksumWords(input);
-    assert.ok(result);
-    assert.strictEqual(result.length, 8);
-
-    for (let i = 0; i < 8; i++) {
-      assert.ok(validateMnemonic(input + ' ' + result[i]));
-    }
-  });
-
-  it('fails with an invalid partial phrase', () => {
-    const result = generateChecksumWords('lorem ipsum dolor sit amet');
-    assert.strictEqual(result, false);
-  });
-
-  it('fails with a completed phrase', () => {
-    const result = generateChecksumWords('abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about');
-    assert.strictEqual(result, false);
-  });
-});
