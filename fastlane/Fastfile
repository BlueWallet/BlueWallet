# Fastfile

platform :android do
    desc "Prepare the keystore file"
    lane :prepare_keystore do
      UI.verbose("Preparing keystore file from HEX")
      File.write("bluewallet-release-key.keystore.hex", ENV['KEYSTORE_FILE_HEX'])
      system("xxd -plain -revert bluewallet-release-key.keystore.hex > ./android/bluewallet-release-key.keystore")
      File.delete("bluewallet-release-key.keystore.hex")
      UI.success("Keystore file prepared successfully")
    end
  
    desc "Increment the version code in build.gradle"
    lane :increment_version_code do
      UI.verbose("Incrementing version code in build.gradle")
      increment_version_code(
        gradle_file_path: "android/app/build.gradle"
      )
      UI.success("Version code incremented successfully")
    end
  
    desc "Build the release APK"
    lane :build_apk do
      UI.verbose("Building the release APK")
      gradle(
        task: "assembleRelease",
        build_type: "Release",
        project_dir: "android",
        print_command: true
      )
      UI.success("APK built successfully")
    end
  
    desc "Sign the APK"
    lane :sign_apk do |options|
      version_name = get_version_name(
        gradle_file_path: "android/app/build.gradle"
      )
  
      version_code = get_version_code(
        gradle_file_path: "android/app/build.gradle"
      )
  
      apk_output_path = lane_context[SharedValues::GRADLE_APK_OUTPUT_PATHS].first
      new_apk_name = "BlueWallet-#{version_name}(#{version_code}).apk"
      new_apk_path = File.join(File.dirname(apk_output_path), new_apk_name)
      FileUtils.mv(apk_output_path, new_apk_path)
  
      sign_apk(
        apk_path: new_apk_path,
        keystore_path: "./android/bluewallet-release-key.keystore",
        keystore_password: options[:keystore_password],
        alias: "release-key"
      )
      UI.success("APK signed successfully")
      Actions.lane_context[SharedValues::APK_OUTPUT_PATH] = new_apk_path
    end
  
    desc "Build and sign the release APK (combined)"
    lane :build_and_sign_apk do
      prepare_keystore
      increment_version_code
      build_apk
      sign_apk(keystore_password: ENV['KEYSTORE_PASSWORD'])
    end
  end