name: Build and Sign APK (Android)

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize, labeled]
    branches:
      - master
  workflow_dispatch:

jobs:
  build_apk:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      KEYSTORE_FILE_HEX: ${{ secrets.KEYSTORE_FILE_HEX }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Specify node version
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.6
          bundler-cache: true

      - name: Install Dependencies with Bundler
        run: bundle install

      - name: Install node_modules
        run: npm install

      - name: Set up Git Authentication
        env:
          ACCESS_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
        run: |
          git config --global credential.helper 'cache --timeout=3600'
          git config --global http.https://github.com/.extraheader "AUTHORIZATION: basic $(echo -n x-access-token:${ACCESS_TOKEN} | base64)"

      - name: Prepare Keystore
        run: bundle exec fastlane android prepare_keystore

      - name: Increment Version Code
        run: bundle exec fastlane android increment_android_version_code

      - name: Build APK
        run: bundle exec fastlane android build_apk

      - name: Sign APK
        run: |
          bundle exec fastlane android sign_apk
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: Rename and Upload APK as Artifact
        run: |
          version_name=$(grep versionName android/app/build.gradle | awk '{print $2}' | tr -d '"')
          version_code=$(grep versionCode android/app/build.gradle | awk '{print $2}')
          apk_path="./android/app/build/outputs/apk/release/BlueWallet-${version_name}(${version_code}).apk"
          mv ./android/app/build/outputs/apk/release/app-release.apk "$apk_path"
          echo "APK path: $apk_path"
        shell: bash

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: BlueWallet-APK
          path: ./android/app/build/outputs/apk/release/BlueWallet-*.apk

      - name: Post PR Comment (Optional)
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        env:
          BUILD_NUMBER: ${{ github.run_number }}
        with:
          script: |
            const buildNumber = process.env.BUILD_NUMBER;
            const message = `The APK build ${buildNumber} is ready for download.`;
            const prNumber = context.payload.pull_request.number;
            const repo = context.repo;
            github.rest.issues.createComment({
              ...repo,
              issue_number: prNumber,
              body: message,
            });
