name: BuildReleaseApk
on: [pull_request]

jobs:
  buildReleaseApk:
    runs-on: macos-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: Specify node version
        uses: actions/setup-node@v2-beta
        with:
          node-version: 16

      - name: Use npm caches
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Use specific Java version for sdkmanager to work
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: Install node_modules
        run: npm install --production

      - name: Determine Marketing Version
        run: |
          MARKETING_VERSION=$(grep MARKETING_VERSION android/app/build.gradle | awk -F '= ' '{print $2}' | tr -d ' ;' | head -1)
          echo "PROJECT_VERSION=$MARKETING_VERSION" >> $GITHUB_ENV

      - name: Generate Build Number based on timestamp
        run: |
          NEW_BUILD_NUMBER=$(date +%s)
          echo "NEW_BUILD_NUMBER=$NEW_BUILD_NUMBER" >> $GITHUB_ENV

      - name: Build
        env:
          KEYSTORE_FILE_HEX: ${{ secrets.KEYSTORE_FILE_HEX }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          PROJECT_VERSION: ${{ env.PROJECT_VERSION }}
          NEW_BUILD_NUMBER: ${{ env.NEW_BUILD_NUMBER }}
        run: ./scripts/build-release-apk.sh
      - uses: actions/upload-artifact@v2
        if: success()
        with:
          name: BlueWallet-${{ env.PROJECT_VERSION }}(${{ env.NEW_BUILD_NUMBER }}).apk
          path: ./android/app/build/outputs/apk/release/BlueWallet-${{ env.PROJECT_VERSION }}(${{ env.NEW_BUILD_NUMBER }}).apk