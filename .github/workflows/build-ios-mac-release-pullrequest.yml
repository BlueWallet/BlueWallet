name: Build Release and Upload to TestFlight (iOS & Catalyst)

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize, labeled]
    branches:
      - master
  workflow_dispatch:

jobs:
  common_setup:
    runs-on: macos-14
    outputs:
      new_build_number: ${{ steps.generate_build_number.outputs.build_number }}
      project_version: ${{ steps.determine_marketing_version.outputs.project_version }}
      latest_commit_message: ${{ steps.get_latest_commit_message.outputs.commit_message }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 15.4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.6
          bundler-cache: true
      - name: Install dependencies with Bundler
        run: bundle install
        working-directory: ./ios
      - name: Install node_modules
        run: npm install
      - name: Generate Build Number based on timestamp
        id: generate_build_number
        run: |
          NEW_BUILD_NUMBER=$(date +%s)
          echo "NEW_BUILD_NUMBER=$NEW_BUILD_NUMBER" >> $GITHUB_ENV
          echo "::set-output name=build_number::$NEW_BUILD_NUMBER"
      - name: Determine Marketing Version
        id: determine_marketing_version
        run: |
          MARKETING_VERSION=$(grep MARKETING_VERSION ios/BlueWallet.xcodeproj/project.pbxproj | awk -F '= ' '{print $2}' | tr -d ' ;' | head -1)
          echo "PROJECT_VERSION=$MARKETING_VERSION" >> $GITHUB_ENV
          echo "::set-output name=project_version::$MARKETING_VERSION"
      - name: Get Latest Commit Message
        id: get_latest_commit_message
        run: |
          LATEST_COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
          echo "LATEST_COMMIT_MESSAGE=${LATEST_COMMIT_MESSAGE}" >> $GITHUB_ENV
          echo "::set-output name=commit_message::$LATEST_COMMIT_MESSAGE"
      - name: Set up Git Authentication
        env:
          ACCESS_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
        run: |
          git config --global credential.helper 'cache --timeout=3600'
          git config --global http.https://github.com/.extraheader "AUTHORIZATION: basic $(echo -n x-access-token:${ACCESS_TOKEN} | base64)"
      - name: Create Temporary Keychain
        run: bundle exec fastlane ios create_temp_keychain
        working-directory: ./ios
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      - name: Setup Provisioning Profiles (iOS)
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          GIT_ACCESS_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
          GIT_URL: ${{ secrets.GIT_URL }}
          ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
          ITC_TEAM_NAME: ${{ secrets.ITC_TEAM_NAME }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: bundle exec fastlane ios setup_profiles type:appstore platform:ios
        working-directory: ./ios

  build_ios:
    runs-on: macos-14
    needs: common_setup
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
      - name: Install CocoaPods Dependencies
        run: |
          gem install cocoapods
          bundle exec pod install
        working-directory: ./ios
      - name: Build iOS App
        run: bundle exec fastlane ios build_ios_app
        working-directory: ./ios
        env:
          NEW_BUILD_NUMBER: ${{ needs.common_setup.outputs.new_build_number }}
          PROJECT_VERSION: ${{ needs.common_setup.outputs.project_version }}
          LATEST_COMMIT_MESSAGE: ${{ needs.common_setup.outputs.latest_commit_message }}

  build_catalyst:
    runs-on: macos-14
    needs: common_setup
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
      - name: Setup Provisioning Profiles (Mac Catalyst)
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          GIT_ACCESS_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN }}
          GIT_URL: ${{ secrets.GIT_URL }}
          ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
          ITC_TEAM_NAME: ${{ secrets.ITC_TEAM_NAME }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: bundle exec fastlane mac setup_profiles type:appstore platform:mac
        working-directory: ./ios
      - name: Build Mac Catalyst App
        run: bundle exec fastlane mac build_catalyst_app
        working-directory: ./ios
        env:
          NEW_BUILD_NUMBER: ${{ needs.common_setup.outputs.new_build_number }}
          PROJECT_VERSION: ${{ needs.common_setup.outputs.project_version }}
          LATEST_COMMIT_MESSAGE: ${{ needs.common_setup.outputs.latest_commit_message }}

  upload_ios_to_testflight:
    runs-on: macos-14
    needs: build_ios
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
      - name: Upload iOS to TestFlight
        run: bundle exec fastlane ios upload_ios_to_testflight
        working-directory: ./ios
        env:
          NEW_BUILD_NUMBER: ${{ needs.build_ios.outputs.new_build_number }}
          PROJECT_VERSION: ${{ needs.build_ios.outputs.project_version }}
          LATEST_COMMIT_MESSAGE: ${{ needs.build_ios.outputs.latest_commit_message }}

  upload_catalyst_to_testflight:
    runs-on: macos-14
    needs: build_catalyst
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
      - name: Upload Mac Catalyst to TestFlight
        run: bundle exec fastlane mac upload_catalyst_to_testflight
        working-directory: ./ios
        env:
          NEW_BUILD_NUMBER: ${{ needs.build_catalyst.outputs.new_build_number }}
          PROJECT_VERSION: ${{ needs.build_catalyst.outputs.project_version }}
          LATEST_COMMIT_MESSAGE: ${{ needs.build_catalyst.outputs.latest_commit_message }}
